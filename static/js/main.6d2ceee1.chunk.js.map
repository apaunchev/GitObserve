{"version":3,"sources":["consts.js","Repository/RepositoryItem/index.js","Issue/IssueItem/index.js","Loading/index.js","FetchMore/index.js","Error/index.js","Issue/IssueList/queries.js","Issue/IssueList/index.js","Repository/RepositoryList/index.js","WatchingRepositories/queries.js","WatchingRepositories/index.js","App/index.js","index.js"],"names":["STATUS","INITIAL","LOADING","AUTHENTICATED","LOCAL_STORAGE_KEY","GITHUB_TOKEN","dayjs","extend","relativeTime","RepositoryItem","_ref","name","pushedAt","url","descriptionHTML","react_default","a","createElement","Fragment","href","dangerouslySetInnerHTML","__html","title","fromNow","IssueItem","issue","className","author","login","createdAt","Loading","Array","fill","map","item","index","key","FetchMore","loading","hasNextPage","variables","updateQuery","fetchMore","children","src_Loading","disabled","onClick","ErrorMessage","error","toString","GET_ISSUES_OF_REPOSITORY","gql","_templateObject","GET_PULL_REQUESTS_OF_REPOSITORY","_templateObject2","getUpdateQuery","entry","previousResult","fetchMoreResult","Object","objectSpread","repository","defineProperty","edges","toConsumableArray","concat","IssueList","_ref4","issues","repositoryOwner","repositoryName","_ref5","node","Issue_IssueItem","id","src_FetchMore","pageInfo","cursor","endCursor","Issues","_ref2","react_apollo_browser_umd","query","notifyOnNetworkStatusChange","_ref3","data","Error","length","IssueList_IssueList","viewer","watching","RepositoryList","repositories","Repository_RepositoryItem","totalCount","Issue_IssueList","owner","pullRequests","GET_WATCHING_REPOSITORIES","queries_templateObject","WatchingRepositories","Repository_RepositoryList","App","state","status","logout","window","localStorage","removeItem","_this","setState","token","_this2","this","getItem","code","location","match","authenticate","_this3","axios","get","process","then","setItem","catch","console","src_WatchingRepositories","Component","httpLink","HttpLink","uri","authLink","setContext","_","headers","authorization","errorLink","onError","graphQLErrors","networkError","message","locations","path","log","link","ApolloLink","from","cache","InMemoryCache","client","ApolloClient","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d2ceee1.chunk.js","sourcesContent":["export const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nexport const REDIRECT_URI = process.env.REACT_APP_REDIRECT_URI;\r\nexport const AUTH_API_URI = process.env.REACT_APP_AUTH_API_URI;\r\n\r\nexport const GITHUB_OAUTH_URL = \"https://github.com/login/oauth/authorize\";\r\nexport const GITHUB_GRAPHQL_API = \"https://api.github.com/graphql\";\r\n\r\nexport const STATUS = {\r\n  INITIAL: \"initial\",\r\n  LOADING: \"loading\",\r\n  AUTHENTICATED: \"authenticated\"\r\n};\r\n\r\nexport const LOCAL_STORAGE_KEY = {\r\n  GITHUB_TOKEN: \"github_token\"\r\n};\r\n","import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport React from \"react\";\n\nimport \"./style.css\";\n\ndayjs.extend(relativeTime);\n\nconst RepositoryItem = ({ name, pushedAt, url, descriptionHTML }) => (\n  <>\n    <h3>\n      <a href={url}>{name}</a>\n    </h3>\n    <div dangerouslySetInnerHTML={{ __html: descriptionHTML }} />\n    <p>\n      {pushedAt && (\n        <span>\n          Updated <span title={pushedAt}>{dayjs(pushedAt).fromNow()}</span>\n        </span>\n      )}\n    </p>\n  </>\n);\n\nexport default RepositoryItem;\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport React from \"react\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst IssueItem = ({ issue }) => (\r\n  <li className=\"IssueItem\">\r\n    <h5>\r\n      <a href={issue.url}>{issue.title}</a>\r\n    </h5>\r\n    <p>\r\n      {issue.author && (\r\n        <span>\r\n          Opened by <a href={issue.author.url}>{issue.author.login}</a>\r\n        </span>\r\n      )}\r\n      {issue.createdAt && (\r\n        <span title={issue.createdAt}> {dayjs(issue.createdAt).fromNow()}</span>\r\n      )}\r\n    </p>\r\n  </li>\r\n);\r\n\r\nexport default IssueItem;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => (\r\n  <ol className=\"RepositoryList\">\r\n    {Array(10)\r\n      .fill(\"\")\r\n      .map((item, index) => (\r\n        <li key={index} className=\"RepositoryItem RepositoryItem-placeholder\">\r\n          <div className=\"RepositoryItem-placeholder-name\" />\r\n          <div className=\"RepositoryItem-placeholder-text\" />\r\n          <div className=\"RepositoryItem-placeholder-text\" />\r\n        </li>\r\n      ))}\r\n  </ol>\r\n);\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nimport Loading from \"../Loading\";\r\n\r\nconst FetchMore = ({\r\n  loading,\r\n  hasNextPage,\r\n  variables,\r\n  updateQuery,\r\n  fetchMore,\r\n  children\r\n}) => (\r\n  <div className=\"FetchMore\">\r\n    {loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <button\r\n        className=\"btn btn-outline btn-block\"\r\n        disabled={!hasNextPage}\r\n        onClick={() => fetchMore({ variables, updateQuery })}\r\n      >\r\n        More {children}\r\n      </button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default FetchMore;\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ error }) => (\r\n  <div className=\"ErrorMessage\">\r\n    <small>{error.toString()}</small>\r\n  </div>\r\n);\r\n\r\nexport default ErrorMessage;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_ISSUES_OF_REPOSITORY = gql`\r\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\r\n    repository(name: $repositoryName, owner: $repositoryOwner) {\r\n      issues(\r\n        first: 5\r\n        states: [OPEN]\r\n        after: $cursor\r\n        orderBy: { field: CREATED_AT, direction: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            title\r\n            createdAt\r\n            url\r\n            bodyHTML\r\n            author {\r\n              login\r\n              url\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PULL_REQUESTS_OF_REPOSITORY = gql`\r\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\r\n    repository(name: $repositoryName, owner: $repositoryOwner) {\r\n      pullRequests(\r\n        first: 5\r\n        states: [OPEN]\r\n        after: $cursor\r\n        orderBy: { field: CREATED_AT, direction: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            title\r\n            createdAt\r\n            url\r\n            bodyHTML\r\n            author {\r\n              login\r\n              url\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport IssueItem from \"../IssueItem\";\r\nimport FetchMore from \"../../FetchMore\";\r\nimport ErrorMessage from \"../../Error\";\r\nimport Loading from \"../../Loading\";\r\n\r\nimport {\r\n  GET_ISSUES_OF_REPOSITORY,\r\n  GET_PULL_REQUESTS_OF_REPOSITORY\r\n} from \"./queries\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst getUpdateQuery = entry => (previousResult, { fetchMoreResult }) => {\r\n  if (!fetchMoreResult) {\r\n    return previousResult;\r\n  }\r\n\r\n  return {\r\n    ...previousResult,\r\n    repository: {\r\n      ...previousResult.repository,\r\n      [entry]: {\r\n        ...previousResult.repository[entry],\r\n        ...fetchMoreResult.repository[entry],\r\n        edges: [\r\n          ...previousResult.repository[entry].edges,\r\n          ...fetchMoreResult.repository[entry].edges\r\n        ]\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst Issues = ({ repositoryOwner, repositoryName, entry }) => (\r\n  <div className=\"Issues\">\r\n    <Query\r\n      query={\r\n        entry === \"issues\"\r\n          ? GET_ISSUES_OF_REPOSITORY\r\n          : GET_PULL_REQUESTS_OF_REPOSITORY\r\n      }\r\n      variables={{\r\n        repositoryOwner,\r\n        repositoryName\r\n      }}\r\n      notifyOnNetworkStatusChange={true}\r\n    >\r\n      {({ data, loading, error, fetchMore }) => {\r\n        if (error) {\r\n          return <ErrorMessage error={error} />;\r\n        }\r\n\r\n        const { repository } = data;\r\n\r\n        if (loading && !repository) {\r\n          return <Loading />;\r\n        }\r\n\r\n        if (!repository[entry].edges.length) {\r\n          return <div className=\"IssueList\">No issues found.</div>;\r\n        }\r\n\r\n        return (\r\n          <IssueList\r\n            issues={repository[entry]}\r\n            loading={loading}\r\n            repositoryOwner={repositoryOwner}\r\n            repositoryName={repositoryName}\r\n            fetchMore={fetchMore}\r\n            entry={entry}\r\n          />\r\n        );\r\n      }}\r\n    </Query>\r\n  </div>\r\n);\r\n\r\nconst IssueList = ({\r\n  issues,\r\n  loading,\r\n  repositoryOwner,\r\n  repositoryName,\r\n  fetchMore,\r\n  entry\r\n}) => (\r\n  <>\r\n    <ol className=\"IssueList\">\r\n      {issues.edges.map(({ node }) => (\r\n        <IssueItem\r\n          key={node.id}\r\n          issue={node}\r\n          repositoryOwner={repositoryOwner}\r\n          repositoryName={repositoryName}\r\n        />\r\n      ))}\r\n    </ol>\r\n\r\n    <FetchMore\r\n      loading={loading}\r\n      hasNextPage={issues.pageInfo.hasNextPage}\r\n      variables={{\r\n        cursor: issues.pageInfo.endCursor,\r\n        repositoryOwner,\r\n        repositoryName\r\n      }}\r\n      updateQuery={getUpdateQuery(entry)}\r\n      fetchMore={fetchMore}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default Issues;\r\n","import React from \"react\";\r\n\r\nimport RepositoryItem from \"../RepositoryItem\";\r\nimport Issues from \"../../Issue/IssueList\";\r\nimport FetchMore from \"../../FetchMore\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst updateQuery = (previousResult, { fetchMoreResult }) => {\r\n  if (!fetchMoreResult) {\r\n    return previousResult;\r\n  }\r\n\r\n  return {\r\n    ...previousResult,\r\n    viewer: {\r\n      ...previousResult.viewer,\r\n      watching: {\r\n        ...previousResult.viewer.watching,\r\n        ...fetchMoreResult.viewer.watching,\r\n        edges: [\r\n          ...previousResult.viewer.watching.edges,\r\n          ...fetchMoreResult.viewer.watching.edges\r\n        ]\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst RepositoryList = ({ loading, repositories, fetchMore }) => (\r\n  <>\r\n    <ol className=\"RepositoryList\">\r\n      {repositories.edges.map(({ node }) => (\r\n        <li key={node.id} className=\"RepositoryItem\">\r\n          <RepositoryItem {...node} />\r\n          <details>\r\n            <summary>Issues ({node.issues.totalCount})</summary>\r\n            <Issues\r\n              entry={\"issues\"}\r\n              repositoryName={node.name}\r\n              repositoryOwner={node.owner.login}\r\n            />\r\n          </details>\r\n          <details>\r\n            <summary>Pull Requests ({node.pullRequests.totalCount})</summary>\r\n            <Issues\r\n              entry={\"pullRequests\"}\r\n              repositoryName={node.name}\r\n              repositoryOwner={node.owner.login}\r\n            />\r\n          </details>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n    <FetchMore\r\n      loading={loading}\r\n      hasNextPage={repositories.pageInfo.hasNextPage}\r\n      variables={{\r\n        cursor: repositories.pageInfo.endCursor\r\n      }}\r\n      updateQuery={updateQuery}\r\n      fetchMore={fetchMore}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default RepositoryList;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_WATCHING_REPOSITORIES = gql`\r\n  query($cursor: String) {\r\n    viewer {\r\n      watching(\r\n        first: 10\r\n        after: $cursor\r\n        orderBy: { field: PUSHED_AT, direction: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            pushedAt\r\n            url\r\n            descriptionHTML\r\n            owner {\r\n              login\r\n              url\r\n            }\r\n            issues(states: [OPEN]) {\r\n              totalCount\r\n            }\r\n            pullRequests(states: [OPEN]) {\r\n              totalCount\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport RepositoryList from \"../Repository/RepositoryList\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../Error\";\r\n\r\nimport { GET_WATCHING_REPOSITORIES } from \"./queries\";\r\n\r\nconst WatchingRepositories = () => (\r\n  <Query query={GET_WATCHING_REPOSITORIES} notifyOnNetworkStatusChange={true}>\r\n    {({ data, loading, error, fetchMore }) => {\r\n      if (error) return <ErrorMessage error={error} />;\r\n      if (loading && !data.viewer) return <Loading />;\r\n\r\n      return (\r\n        <RepositoryList\r\n          loading={loading}\r\n          repositories={data.viewer.watching}\r\n          fetchMore={fetchMore}\r\n        />\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default WatchingRepositories;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport WatchingRepositories from \"../WatchingRepositories\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport {\r\n  STATUS,\r\n  LOCAL_STORAGE_KEY,\r\n  AUTH_API_URI,\r\n  GITHUB_OAUTH_URL,\r\n  CLIENT_ID,\r\n  REDIRECT_URI\r\n} from \"../consts\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    status: STATUS.INITIAL\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storedToken = window.localStorage.getItem(\r\n      LOCAL_STORAGE_KEY.GITHUB_TOKEN\r\n    );\r\n\r\n    if (storedToken) {\r\n      this.setState({ status: STATUS.AUTHENTICATED });\r\n      return;\r\n    }\r\n\r\n    const code =\r\n      window.location.href.match(/\\?code=(.*)/) &&\r\n      window.location.href.match(/\\?code=(.*)/)[1];\r\n\r\n    if (code) {\r\n      this.setState({ status: STATUS.LOADING }, () => this.authenticate(code));\r\n    }\r\n  }\r\n\r\n  authenticate(code) {\r\n    axios\r\n      .get(`${AUTH_API_URI}/${code}`)\r\n      .then(({ data: { token } }) => {\r\n        if (token) {\r\n          window.localStorage.setItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN, token);\r\n          this.setState({ token, status: STATUS.AUTHENTICATED });\r\n        }\r\n      })\r\n      .catch(error => console.error(`Error while authenticating: ${error}`));\r\n  }\r\n\r\n  logout = () => {\r\n    window.localStorage.removeItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN);\r\n    this.setState({ token: null, status: STATUS.INITIAL });\r\n  };\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"Header\">\r\n          <div className=\"Logo\">\r\n            <a href=\"/\">GitObserve</a>\r\n          </div>\r\n          <div>\r\n            {status === STATUS.INITIAL && (\r\n              <a\r\n                className=\"text-white\"\r\n                href={`${GITHUB_OAUTH_URL}?client_id=${CLIENT_ID}&scope=user%20repo%20read%3Aorg&redirect_uri=${REDIRECT_URI}`}\r\n              >\r\n                Login\r\n              </a>\r\n            )}\r\n            {status === STATUS.AUTHENTICATED && (\r\n              <button className=\"btn-link text-white\" onClick={this.logout}>\r\n                Logout\r\n              </button>\r\n            )}\r\n          </div>\r\n        </header>\r\n        <div className=\"Main\">\r\n          {status === STATUS.LOADING && <Loading />}\r\n          {status === STATUS.AUTHENTICATED && <WatchingRepositories />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloLink } from \"apollo-link\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { setContext } from \"apollo-link-context\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { GITHUB_GRAPHQL_API, LOCAL_STORAGE_KEY } from \"./consts\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"primer/build/build.css\";\r\n\r\nconst httpLink = new HttpLink({ uri: GITHUB_GRAPHQL_API });\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = window.localStorage.getItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN);\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\"\r\n    }\r\n  };\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, path }) =>\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      )\r\n    );\r\n  }\r\n\r\n  if (networkError) {\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst link = ApolloLink.from([errorLink, authLink, httpLink]);\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}