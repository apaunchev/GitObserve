{"version":3,"sources":["components/common/blankslate.js","components/common/not-found.js","githubApi.js","actions/dashboard.js","components/common/flash.js","components/dashboard/filters.js","components/dashboard/pull-request.js","components/dashboard/subnav.js","components/dashboard/index.js","actions/settings.js","components/settings/account.js","components/settings/dashboard.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/common/avatar.js","components/app.js","components/root.js","reducers/dashboard.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["Blankslate","_ref","children","react_default","a","createElement","className","NotFound","blankslate","get","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","_x","_x2","apply","this","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","setFilters","filters","Flash","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","dashboard","dispatch","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","filteredCount","authors","chain","pullRequests","map","pr","uniqBy","onChange","style","width","login","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","no request","number","title","url","createdAt","updatedAt","assignees","repository","reviewedAt","isNew","relativeTime","field","formatDistance","parseISO","Date","addSuffix","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","assignee","SubNav","handleReviewStateChange","preventDefault","_this","dataset","_this$props","data-review-state","paddingLeft","placeholder","index_esm","icon","SearchIcon","React","PureComponent","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","selectedRepos","autoRefreshEnabled","setInterval","requestPullRequests","autoRefreshInterval","window","clearInterval","filteredPullRequests","loading","githubError","lastUpdated","react_router_dom","to","SettingsIcon","subnav","dashboard_filters","format","fromUnixTime","disabled","SyncIcon","pull_request","assign","id","flash","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","hideOldThreshold","toLowerCase","authorLogin","indexOf","settings","extend","getState","t0","error","requestViewerInfoSuccess","viewerInfo","requestViewerInfo","viewer","Account","input","createRef","resetViewerInfo","isEmpty","setToken","rel","ref","current","Component","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleHideOld","setHideOldThreshold","threshold","checked","Repositories","resetSelectedRepos","resetWatchedRepos","requestWatchedRepos","watchedRepos","selectAllRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","settingsActions","Settings","match","CloudUploadIcon","activeClassName","DashboardIcon","PersonIcon","RepoIcon","react_router","path","component","exact","render","Avatar","App","avatar","Root","store","es","initialState","formatReviewState","replace","getReviewState","reviews","reviewRequests","formatPrs","oldPrsById","nodes","flatten","reverse","rootReducer","combineReducers","action","Math","floor","now","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"6LAMeA,SAJI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAA0CJ,KCW5CK,EAXE,kBACfJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,iKCNKI,EAAG,eAAAR,EAAAS,OAAAC,EAAA,EAAAD,CAAAE,EAAAR,EAAAS,KAAG,SAAAC,EAAOC,EAAOC,GAAd,IAAAC,EAAAC,EAAA,OAAAN,EAAAR,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAHF,iCAGwB,CAC3CC,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,cAAa,UAAAC,OAAYZ,IAE3Ba,KAAMC,KAAKC,UAAU,CAAEhB,YAPR,YACXE,EADWG,EAAAY,MAUJC,GAVI,CAAAb,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAWML,EAASiB,OAXf,YAWThB,EAXSE,EAAAY,MAaJG,OAbI,CAAAf,EAAAE,KAAA,cAcP,IAAIc,MAAMlB,EAAOiB,OAAO,GAAGE,SAdpB,WAiBXnB,EAAOoB,KAjBI,CAAAlB,EAAAE,KAAA,gBAAAF,EAAAmB,OAAA,SAkBNrB,EAAOoB,MAlBD,cAsBX,IAAIF,MAAM,mCAtBC,yBAAAhB,EAAAoB,SAAA1B,MAAH,gBAAA2B,EAAAC,GAAA,OAAAzC,EAAA0C,MAAAC,KAAAC,YAAA,GAyBHC,EACC,4GADDA,EASG,WAAiB,IAAhBC,EAAgBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAP,GAChBK,EAAaH,EAAM,UAAAnB,OAAamB,GAAW,GACjD,qGAAAnB,OAKUsB,EALV,4bAXSJ,EAwCW,SAAAK,GAAO,0CAAAvB,OAEXE,KAAKC,UAAUoB,GAFJ,ouDCvDlBC,EAA6B,SAACC,EAAQC,GAAT,MAAqB,CAC7DC,KAT2C,gCAU3CF,SACAC,WAuBWE,EAAa,SAAAC,GAAO,MAAK,CACpCF,KAjCyB,cAkCzBE,YC1BaC,EAXD,SAAAzD,GAAA,IAAGsD,EAAHtD,EAAGsD,KAAMrD,EAATD,EAASC,SAAT,OACZC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,mBAAAsB,OAAqB2B,EAAI,SAAA3B,OAAY2B,GAAS,OACzDrD,mBCCCyD,EAAkB,CACtBC,KAAM,GACNC,OAAQ,GACRC,QAAS,YACTC,YAAa,GACbC,YAAa,IAyGAC,cAXS,SAAAC,GAAK,MAAK,CAChCT,QAASS,EAAMC,UAAUV,UAGA,SAAAW,GAAQ,MAAK,CACtCZ,WAAY,SAAAC,GACVW,EAASC,EAAmBZ,KAE9BW,aAGaH,CAtGC,SAAAK,GACd,IAAMC,EAAqB,SAAAC,GACzBF,EAAMd,WAAN9C,OAAA+D,EAAA,EAAA/D,CAAA,GACK4D,EAAMb,QADX/C,OAAAgE,EAAA,EAAAhE,CAAA,GAEG8D,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAkE9B,OACE1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SAAwCgE,EAAMS,cAA9C,MAhEwB,WAC1B,IAAMC,EAAUC,gBAAMX,EAAMY,cACzBC,IAAI,SAAAC,GAAE,OAAIA,EAAGvB,SACbwB,OAAO,SACPR,QAEH,OACE1E,EAAAC,EAAAC,cAAA,UACEC,UAAU,6BACVsE,KAAK,SACLC,MAAOP,EAAMb,QAAQI,OACrByB,SAAUf,EACVgB,MAAO,CAAEC,MAAO,UAEhBrF,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,IAAd,eACCG,EAAQG,IAAI,SAAAlF,GAAA,IAAGwF,EAAHxF,EAAGwF,MAAH,OACXtF,EAAAC,EAAAC,cAAA,UAAQqF,IAAKD,EAAOZ,MAAOY,GACxBA,MAgDNE,GAzCqB,WACxB,IAAMC,EAAQX,gBAAMX,EAAMY,cACvBC,IAAI,SAAAC,GAAE,OAAIA,EAAGS,WACbR,SACAR,QAEH,OACE1E,EAAAC,EAAAC,cAAA,UACEC,UAAU,6BACVsE,KAAK,OACLC,MAAOP,EAAMb,QAAQG,KACrB0B,SAAUf,EACVgB,MAAO,CAAEC,MAAO,UAEhBrF,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,IAAd,oBACCe,EAAMT,IAAI,SAAAvB,GAAI,OACbzD,EAAAC,EAAAC,cAAA,UAAQqF,IAAK9B,EAAMiB,MAAOjB,GACvBA,MAyBNkC,GACD3F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,aAlBFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,6BACVsE,KAAK,UACLC,MAAOP,EAAMb,QAAQK,QACrBwB,SAAUf,EACVgB,MAAO,CAAEC,MAAO,UAEhBrF,EAAAC,EAAAC,cAAA,UAAQwE,MAAO,aAAf,oBACA1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAO,cAAf,qBACA1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAO,aAAf,qBAWA1E,EAAAC,EAAAC,cAAA,UACEC,UAAU,aACVyF,QAAS,kBAAMzB,EAAMd,WAAWG,KAFlC,4BCvFAqC,EAAmB,CACvBC,mBAAoB,qBACpBC,oBAAqB,gBACrBC,SAAU,sBACVC,UAAW,sBACXC,QAAS,cACTC,UAAW,oBACXC,aAAc,eA4GDtC,cAJS,SAAAC,GAAK,MAAK,CAChCT,QAASS,EAAMC,UAAUV,UAGZQ,CAzGK,SAAAhE,GAad,IAZJuG,EAYIvG,EAZJuG,OACAC,EAWIxG,EAXJwG,MACAC,EAUIzG,EAVJyG,IACAC,EASI1G,EATJ0G,UACAC,EAQI3G,EARJ2G,UACA/C,EAOI5D,EAPJ4D,OACAgD,EAMI5G,EANJ4G,UACAC,EAKI7G,EALJ6G,WACA/C,EAII9D,EAJJ8D,YACAgD,EAGI9G,EAHJ8G,WACAC,EAEI/G,EAFJ+G,MACAvD,EACIxD,EADJwD,QAEMwD,EAAe,SAAAC,GACnB,OAAKA,EACEC,YAAeC,YAASF,GAAQ,IAAIG,KAAQ,CAAEC,WAAW,IAD7C,MAGjBhH,EAAY,qCAGhB,OAFI0G,IAAO1G,GAAa,oBAGtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACbuD,EAAO0D,WACNpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KACEmH,KAAM3D,EAAO6C,IACbpG,UAAU,mCACVmH,aAAA,aAAA7F,OAAyBiC,EAAO4B,QAEhCtF,EAAAC,EAAAC,cAAA,OACEC,UAAU,mBACVoH,IAAK7D,EAAO0D,UACZ/B,MAAM,KACNmC,OAAO,KACPC,IAAI,OAKZzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGmH,KAAMV,EAAWJ,IAAKpG,UAAU,sBAChCwG,EAAWe,eAEd1H,EAAAC,EAAAC,cAAA,KAAGmH,KAAMd,EAAKpG,UAAU,kCACrBmG,GAEHtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,gBAAQmG,EAAR,KACC/C,GAA+B,cAApBA,EAAQK,SAA2B8C,EAC7CzG,EAAAC,EAAAC,cAAA,uBACUF,EAAAC,EAAAC,cAAA,QAAMoG,MAAOG,GAAYK,EAAaL,KAE9CnD,GAA+B,cAApBA,EAAQK,SAA2B6C,EAChDxG,EAAAC,EAAAC,cAAA,uBACUF,EAAAC,EAAAC,cAAA,QAAMoG,MAAOE,GAAYM,EAAaN,KAE9ClD,GAA+B,eAApBA,EAAQK,SAA4BiD,EACjD5G,EAAAC,EAAAC,cAAA,uBACW,IACTF,EAAAC,EAAAC,cAAA,QAAMoG,MAAOM,GAAaE,EAAaF,KAEvC,KACJ5G,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGmH,KAAM3D,EAAO6C,IAAKpG,UAAU,cAC5BuD,EAAO4B,QAGX1B,EACC5D,EAAAC,EAAAC,cAAA,QAAMC,UAAS,cAAAsB,OAAgBoE,EAAiBjC,KAC7CA,GAED,OAGP8C,EAAU7D,OAAS,EAClB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZuG,EAAU1B,IAAI,SAAA2C,GAAQ,OACrB3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASoF,IAAKoC,EAASrC,OACpCtF,EAAAC,EAAAC,cAAA,KACEmH,KAAMM,EAASpB,IACfpG,UAAU,gCACVmH,aAAA,eAAA7F,OAA2BkG,EAASrC,QAEpCtF,EAAAC,EAAAC,cAAA,OACEC,UAAU,mBACVoH,IAAKI,EAASP,UACd/B,MAAM,KACNmC,OAAO,KACPC,IAAI,UAMZ,QCzGJG,6MACJC,wBAA0B,SAAAxD,GACxBA,EAAEyD,iBAEFC,EAAK5D,MAAMd,WAAX9C,OAAA+D,EAAA,EAAA/D,CAAA,GACKwH,EAAK5D,MAAMb,QADhB,CAEEM,YAAaS,EAAEG,OAAOwD,QAAQpE,wFAIzB,IAAAqE,EACyBxF,KAAK0B,MAA7Bb,EADD2E,EACC3E,QAASD,EADV4E,EACU5E,WAEjB,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,KACEmH,KAAK,IACLa,oBAAkB,GAClBtC,QAASnD,KAAKoF,wBACd1H,UAAS,cAAAsB,OACiB,KAAxB6B,EAAQM,YAAqB,YAAc,KAL/C,OAUA5D,EAAAC,EAAAC,cAAA,KACEmH,KAAK,IACLa,oBAAkB,mBAClBtC,QAASnD,KAAKoF,wBACd1H,UAAS,cAAAsB,OACiB,qBAAxB6B,EAAQM,YAAqC,YAAc,KAL/D,oBAUA5D,EAAAC,EAAAC,cAAA,KACEmH,KAAK,IACLa,oBAAkB,oBAClBtC,QAASnD,KAAKoF,wBACd1H,UAAS,cAAAsB,OACiB,sBAAxB6B,EAAQM,YAAsC,YAAc,KALhE,qBAUA5D,EAAAC,EAAAC,cAAA,KACEmH,KAAK,IACLa,oBAAkB,WAClBtC,QAASnD,KAAKoF,wBACd1H,UAAS,cAAAsB,OACiB,aAAxB6B,EAAQM,YAA6B,YAAc,KALvD,aAWF5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEkD,KAAK,SACLqB,KAAK,OACLtE,UAAU,8BACViF,MAAO,CAAEC,MAAO,OAAQ8C,YAAa,IACrCC,YAAY,0BACZ1D,MAAOpB,EAAQO,YACfsB,SAAU,SAAAd,GAAC,OACThB,EAAW9C,OAAA+D,EAAA,EAAA/D,CAAA,GACN+C,EADK,CAERO,YAAaQ,EAAEG,OAAOE,YAI5B1E,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMC,IAAYpI,UAAU,gCAxE1BqI,IAAMC,eA0FZ3E,cAXS,SAAAC,GAAK,MAAK,CAChCT,QAASS,EAAMC,UAAUV,UAGA,SAAAW,GAAQ,MAAK,CACtCZ,WAAY,SAAAC,GACVW,EAASC,EAAmBZ,KAE9BW,aAGaH,CAGb8D,GCjFIc,cACJ,SAAAA,EAAYvE,GAAO,IAAA4D,EAAA,OAAAxH,OAAAoI,EAAA,EAAApI,CAAAkC,KAAAiG,IACjBX,EAAAxH,OAAAqI,EAAA,EAAArI,CAAAkC,KAAAlC,OAAAsI,EAAA,EAAAtI,CAAAmI,GAAAI,KAAArG,KAAM0B,KACD4E,eAAiB,KAFLhB,mFAKC,IAAAiB,EAAAvG,KACdA,KAAK0B,MAAM8E,cAAcpG,OAAS,GAChCJ,KAAK0B,MAAM+E,qBACbzG,KAAKsG,eAAiBI,YAAY,WAChCH,EAAK7E,MAAMiF,oBACTJ,EAAK7E,MAAM8E,cACXD,EAAK7E,MAAMtD,QAEqB,GAAjC4B,KAAK0B,MAAMkF,oBAA2B,qDAM7CC,OAAOC,cAAc9G,KAAKsG,iDAGnB,IAAAd,EAWHxF,KAAK0B,MATP8E,EAFKhB,EAELgB,cACAlE,EAHKkD,EAGLlD,aACAyE,EAJKvB,EAILuB,qBACAC,EALKxB,EAKLwB,QACAC,EANKzB,EAMLyB,YACAN,EAPKnB,EAOLmB,oBACAvI,EARKoH,EAQLpH,MACAqI,EATKjB,EASLiB,mBACAS,EAVK1B,EAUL0B,YAGF,OACE3J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,cAEFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,YAAY1J,UAAU,YAC7BH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMwB,MADjB,gBAMN9J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACX8I,EAAcpG,OAMd7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAC6J,EAAD,MACA/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAC8J,EAAD,CACEjF,aAAcA,EACdH,cAAe4E,EAAqB3G,UAGxC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACZ+I,GACClJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,eACe,IACbH,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAI,uBAAV,WAFF,KAKF7J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACbwJ,EAAW,iBAAAlI,OACSwI,YACfC,YAAaP,GACb,OAHM,wBAOd3J,EAAAC,EAAAC,cAAA,UACEC,UAAU,yBACVyF,QAAS,kBACPwD,EAAoBH,EAAepI,IAErCsJ,SAAUV,GAEVzJ,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAM8B,MAAa,IAC3BX,EAAU,aAAe,aAK/BC,EACC1J,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,wDAC+C,IAC7CF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,qBAAT,SAFF,qCAMA,KAEFJ,GAAYC,GAAgBF,EAAqB3G,OAI/C,KAHF7C,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,2CAIFwJ,GAAeF,EAAqB3G,OAAS,EAC3C2G,EAAqBxE,IAAI,SAAAC,GAAE,OACzBjF,EAAAC,EAAAC,cAACmK,EAAD9J,OAAA+J,OAAA,CAAa/E,IAAKN,EAAGsF,IAAQtF,MAE/B,OA/DRjF,EAAAC,EAAAC,cAACsK,EAAD,iCAC4B,IAC1BxK,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,0BAAT,gBAFF,mBArDUrB,IAAMC,eAwI9BC,EAAU+B,aAAe,CACvBxB,cAAe,GACfpI,MAAO,KACPkE,aAAc,GACd0E,SAAS,EACTC,YAAa,MAGf,IAAMgB,EAAe,SAAC3F,EAAczB,GAClC,IAAIqH,EAAW5F,EAwCf,OAtCIzB,EAAQsH,iBACVD,EAAWE,iBAAOF,EAAU,SAAA1F,GAC1B,OACE6F,YAAiB,IAAI5D,KAAKjC,EAAG3B,EAAQK,UAAW,IAAIuD,OACnD5D,EAAQyH,oBAKXzH,EAAQG,OACVkH,EAAWE,iBAAOF,EAAU,SAAA1F,GAAE,OAAIA,EAAGS,WAAapC,EAAQG,QAGxDH,EAAQI,SACViH,EAAWE,iBAAOF,EAAU,SAAA1F,GAAE,OAAIA,EAAGvB,OAAO4B,QAAUhC,EAAQI,UAG5DJ,EAAQM,cACV+G,EAAWE,iBAAOF,EAAU,SAAA1F,GAAE,OAAIA,EAAGrB,cAAgBN,EAAQM,eAG3DN,EAAQO,cACV8G,EAAWE,iBAAOF,EAAU,SAAA1F,GAC1B,IAAMpB,EAAcP,EAAQO,YAAYmH,cAClCtF,EAAWT,EAAGS,SAASsF,cACvB1E,EAAQrB,EAAGqB,MAAM0E,cACjBC,EAAchG,EAAGvB,OAAO4B,MAAM0F,cAEpC,OACEtF,EAASwF,QAAQrH,IAAgB,GACjCyC,EAAM4E,QAAQrH,IAAgB,GAC9BoH,EAAYC,QAAQrH,IAAgB,KAK1C8G,EAAWhH,kBAAQgH,EAAUrH,EAAQK,QAAS,SAiCjCG,cA5BS,SAAAC,GAAK,MAAK,CAChCkF,cAAelF,EAAMoH,SAASlC,cAC9BpI,MAAOkD,EAAMoH,SAAStK,MACtBqI,mBAAoBnF,EAAMoH,SAASjC,mBACnCG,oBAAqBtF,EAAMoH,SAAS9B,oBACpCK,YAAa3F,EAAMC,UAAU0F,YAC7BD,QAAS1F,EAAMC,UAAUyF,QACzBE,YAAa5F,EAAMC,UAAU2F,YAC7B5E,aAAchB,EAAMC,UAAUe,aAC9ByE,qBAAsBkB,EACpB3G,EAAMC,UAAUe,aAChBqG,iBACE,CACER,eAAgB7G,EAAMoH,SAASP,eAC/BG,iBAAkBhH,EAAMoH,SAASJ,kBAEnChH,EAAMC,UAAUV,YAKK,SAAAW,GAAQ,MAAK,CACtCmF,oBAAqB,SAACpG,EAASnC,GAC7BoD,EL7M+B,SAACjB,EAASnC,GAAV,sBAAAf,EAAAS,OAAAC,EAAA,EAAAD,CAAAE,EAAAR,EAAAS,KAAoB,SAAAC,EACrDsD,EACAoH,GAFqD,IAAAlI,EAAAvC,EAAAsC,EAAA,OAAAzC,EAAAR,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAI/CgC,EAASkI,IAAWrH,UAAUe,aAJiB9D,EAAAC,KAAA,EAMnD+C,EArB6C,CAC/Cb,KAN2C,kCA2BnCxC,EAAQ+B,EAA6BK,GAPQ/B,EAAAE,KAAA,EAQ9Bb,EAAIM,EAAOC,GARmB,OAQ7CqC,EAR6CjC,EAAAY,KASnDoC,EAAShB,EAA2BC,EAAQC,IATOlC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqK,GAAArK,EAAA,SAWnDgD,EAhBgD,CAClDb,KAd2C,gCAe3CmI,MAcqCtK,EAAAqK,KAXgB,yBAAArK,EAAAoB,SAAA1B,EAAA,kBAApB,gBAAA2B,EAAAC,GAAA,OAAAzC,EAAA0C,MAAAC,KAAAC,YAAA,GK6MtBwB,CAA4BlB,EAASnC,KAEhDoD,aAGaH,CAGb4E,GCnLW8C,EAA2B,SAAAC,GAAU,MAAK,CACrDrI,KA9CyC,8BA+CzCqI,eAQWC,EAAoB,SAAA7K,GAAK,sBAAAf,EAAAS,OAAAC,EAAA,EAAAD,CAAAE,EAAAR,EAAAS,KAAI,SAAAC,EAAMsD,GAAN,IAAArD,EAAA6K,EAAA,OAAAhL,EAAAR,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEtC+C,EAhB2C,CAC7Cb,KA3CyC,gCA2DjCxC,EAAQ+B,IAHwB1B,EAAAE,KAAA,EAIbb,EAAIM,EAAOC,GAJE,OAIhC4K,EAJgCxK,EAAAY,KAKtCoC,EAASuH,EAAyBC,EAAWE,SALP1K,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAqK,GAAArK,EAAA,SAOtCgD,EAZ8C,CAChDb,KAlDyC,8BAmDzCmI,MAUmCtK,EAAAqK,KAPK,yBAAArK,EAAAoB,SAAA1B,EAAA,iBAAJ,gBAAA2B,GAAA,OAAAxC,EAAA0C,MAAAC,KAAAC,YAAA,IC7DhCkJ,cACJ,SAAAA,EAAYzH,GAAO,IAAA4D,EAAA,OAAAxH,OAAAoI,EAAA,EAAApI,CAAAkC,KAAAmJ,IACjB7D,EAAAxH,OAAAqI,EAAA,EAAArI,CAAAkC,KAAAlC,OAAAsI,EAAA,EAAAtI,CAAAqL,GAAA9C,KAAArG,KAAM0B,KACD0H,MAAQrD,IAAMsD,YAFF/D,sFAMZtF,KAAK0B,MAAMtD,OACd4B,KAAK0B,MAAM4H,kBAGTtJ,KAAK0B,MAAMtD,OAASmL,kBAAQvJ,KAAK0B,MAAMsH,aACzChJ,KAAK0B,MAAMuH,kBAAkBjJ,KAAK0B,MAAMtD,wCAInC,IAAAmI,EAAAvG,KAAAwF,EACqBxF,KAAK0B,MAAzBtD,EADDoH,EACCpH,MAAOoL,EADRhE,EACQgE,SAEf,OACEjM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YAEFH,EAAAC,EAAAC,cAAA,oFAIAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,kBACQ,IACNF,EAAAC,EAAAC,cAAA,KACEmH,KAAK,qCACL7C,OAAO,SACP0H,IAAI,uBAHN,0BAMK,IARP,aASYlM,EAAAC,EAAAC,cAAA,+BATZ,KAWAF,EAAAC,EAAAC,cAAA,6CACkCF,EAAAC,EAAAC,cAAA,oBADlC,qBACsE,IACpEF,EAAAC,EAAAC,cAAA,2BAFF,KAIAF,EAAAC,EAAAC,cAAA,qDAEFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,SACEkD,KAAK,OACLjD,UAAU,eACViI,YAAY,QACZ+D,IAAK1J,KAAKoJ,MACV1G,SAAU,kBAAM8G,EAASjD,EAAK6C,MAAMO,QAAQ1H,QAC5CA,MAAO7D,aArDGwL,aAqEtBT,EAAQnB,aAAe,CACrB5J,MAAO,MAGT,IAYeiD,cAZS,SAAAC,GAAK,MAAK,CAChClD,MAAOkD,EAAMoH,SAAStK,MACtB4K,WAAY1H,EAAMoH,SAASM,aAGF,SAAAxH,GAAQ,MAAK,CACtCgI,SAAU,SAAAvH,GAAK,OAAIT,EDrEG,SAAAS,GAAK,MAAK,CAChCtB,KAfuB,YAgBvBsB,SCmE4BR,CAAiBQ,KAC7CgH,kBAAmB,SAAA7K,GAAK,OAAIoD,EAASC,EAA0BrD,KAC/DkL,gBAAiB,kBAAM9H,EDTa,CACpCb,KAjE+B,uBC0E/Ba,aAGaH,CAGb8H,GCzBa9H,cAjBS,SAAAC,GAAK,MAAK,CAChCmF,mBAAoBnF,EAAMoH,SAASjC,mBACnCG,oBAAqBtF,EAAMoH,SAAS9B,oBACpCuB,eAAgB7G,EAAMoH,SAASP,eAC/BG,iBAAkBhH,EAAMoH,SAASJ,mBAGR,SAAA9G,GAAQ,MAAK,CACtCqI,kBAAmB,kBAAMrI,EFzBa,CACtCb,KA9BiC,yBEuDjCmJ,uBAAwB,SAAAC,GAAQ,OAC9BvI,EFvBkC,SAAAuI,GAAQ,MAAK,CACjDpJ,KAjCuC,4BAkCvCoJ,YEqBWtI,CAA+BsI,KAC1CC,cAAe,kBAAMxI,EFnBa,CAClCb,KArC6B,qBEwD7BsJ,oBAAqB,SAAAF,GAAQ,OAC3BvI,EFjB6C,CAC/Cb,KAxCoC,yBAyCpCuJ,UEeuCH,KACvCvI,aAGaH,CAjEG,SAAAK,GAAK,OACrBnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,cAEFH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,WACLwJ,QAASzI,EAAM+E,mBACf/D,SAAUhB,EAAMmI,oBACf,IALL,+BAOEtM,EAAAC,EAAAC,cAAA,UACEC,UAAU,6BACVuE,MAAOP,EAAMkF,oBACblE,SAAU,SAAAd,GAAC,OAAIF,EAAMoI,uBAAuBlI,EAAEG,OAAOE,SAErD1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,KAAd,YACA1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,KAAd,aACA1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,MAAd,cACA1E,EAAAC,EAAAC,cAAA,UAAQwE,MAAM,MAAd,iBAIN1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,WACLwJ,QAASzI,EAAMyG,eACfzF,SAAUhB,EAAMsI,gBACf,IALL,gCAOEzM,EAAAC,EAAAC,cAAA,SACEkD,KAAK,SACLjD,UAAU,6BACViF,MAAO,CAAEC,MAAO,SAChBX,MAAOP,EAAM4G,iBACb5F,SAAU,SAAAd,GAAC,OAAIF,EAAMuI,oBAAoBrI,EAAEG,OAAOE,UACjD,IAbL,qBCnBFmI,8LAEGpK,KAAK0B,MAAMtD,QACd4B,KAAK0B,MAAM2I,qBACXrK,KAAK0B,MAAM4I,qBAGTtK,KAAK0B,MAAMtD,QAAU4B,KAAK0B,MAAM8E,cAAcpG,QAChDJ,KAAK0B,MAAM6I,oBAAoBvK,KAAK0B,MAAMtD,wCAIrC,IAAAoH,EAWHxF,KAAK0B,MATPtD,EAFKoH,EAELpH,MACA4I,EAHKxB,EAGLwB,QACAC,EAJKzB,EAILyB,YACAuD,EALKhF,EAKLgF,aACAhE,EANKhB,EAMLgB,cACAiE,EAPKjF,EAOLiF,eACAJ,EARK7E,EAQL6E,mBACAK,EATKlF,EASLkF,oBACAH,EAVK/E,EAUL+E,oBAGF,OACEhN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,iBAEFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,gEACgE,IAC9DH,EAAAC,EAAAC,cAAA,0CAC4B,IAC1BF,EAAAC,EAAAC,cAAA,KAAGmH,KAAK,+BAAR,YAFF,sBAKFrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,wBACwB,IACtBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BACb8I,EAAcpG,SAGnB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,2BACVyF,QAAS,kBACPsH,EAAeD,EAAajI,IAAI,SAAAvB,GAAI,OAAIA,EAAK8G,QAHjD,cAQAvK,EAAAC,EAAAC,cAAA,UACEC,UAAU,2BACVyF,QAAS,kBAAMkH,MAFjB,UAOF9M,EAAAC,EAAAC,cAAA,UACEC,UAAU,yBACVyF,QAAS,kBAAMoH,EAAoBnM,IACnCsJ,SAAUV,GAEVzJ,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAM8B,MALjB,IAK+BX,EAAU,aAAe,aAK3DC,EACC1J,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,wDAC+C,IAC7CF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,qBAAT,SAFF,qCAMA,KAEFJ,GAAYC,GAAgBuD,EAAapK,OAIvC,KAHF7C,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,+DAIFwJ,GAAeuD,EAAapK,OAAS,EACnCoK,EAAajI,IAAI,SAAAlF,GAAuB,IAApByK,EAAoBzK,EAApByK,GAAI9F,EAAgB3E,EAAhB2E,KAAM8B,EAAUzG,EAAVyG,IACtB6G,EAAM,QAAA3L,OAAW8I,GACjBqC,EAAU3D,EAAcoE,SAAS9C,GAEvC,OACEvK,EAAAC,EAAAC,cAAA,OACEC,UAAU,iEACVoF,IAAKgF,GAELvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEkD,KAAK,WACLmH,GAAI6C,EACJjI,SAXO,kBAAMgI,EAAoB5C,IAYjCqC,QAASA,IACR,IACFnI,IAGLzE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBkH,KAAMd,GAC1CvG,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMgF,IAAkBC,KAAM,KADzC,sBAON,cApHa/E,IAAMC,eAoIjCoE,EAAapC,aAAe,CAC1BwC,aAAc,GACdxD,SAAS,EACTC,YAAa,KACbT,cAAe,GACfpI,MAAO,MAGT,IAkBeiD,cAlBS,SAAAC,GAAK,MAAK,CAChCkJ,aAAclJ,EAAMkJ,aAAaxH,MACjCgE,QAAS1F,EAAMkJ,aAAaxD,QAC5BC,YAAa3F,EAAMkJ,aAAavD,YAChCT,cAAelF,EAAMoH,SAASlC,cAC9BpI,MAAOkD,EAAMoH,SAAStK,QAGG,SAAAoD,GAAQ,MAAK,CACtC+I,oBAAqB,SAAAnM,GAAK,OACxBoD,EC5I+B,SAAApD,GAAK,sBAAAf,EAAAS,OAAAC,EAAA,EAAAD,CAAAE,EAAAR,EAAAS,KAAI,SAAAC,EAAMsD,GAAN,IAAArD,EAAA4M,EAAAC,EAAAC,EAAAC,EAAA,OAAAlN,EAAAR,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAExC+C,EAhB6C,CAC/Cb,KAN2C,kCAsBrCxC,EAAQ+B,IAH4B1B,EAAAE,KAAA,EAIXb,EAAIM,EAAOC,GAJA,UAIlC2M,EAJkCvM,EAAAY,KAKpC4L,EAAaD,EAAe7B,OAAOiC,SAASC,OAC5CL,EAAe7B,OAAOiC,SAASE,SAASC,YANJ,CAAA9M,EAAAE,KAAA,SAOlCuM,GAAW,EAPuB,WAQ/BA,EAR+B,CAAAzM,EAAAE,KAAA,gBASpCP,EAAQ+B,EAAqB8K,EAAWA,EAAW5K,OAAS,GAAGD,QAT3B3B,EAAAE,KAAA,GAULb,EAAIM,EAAOC,GAVN,QAU9B8M,EAV8B1M,EAAAY,KAWpC4L,EAAU,GAAAhM,OAAAlB,OAAAyN,EAAA,EAAAzN,CAAOkN,GAAPlN,OAAAyN,EAAA,EAAAzN,CAAsBoN,EAAiBhC,OAAOiC,SAASC,QACjEH,EAAWC,EAAiBhC,OAAOiC,SAASE,SAASC,YAZjB9M,EAAAE,KAAA,gBAexCsM,EAAaA,EAAWzI,IAAI,SAAAvB,GAAI,MAAK,CACnC8G,GAAI9G,EAAKwK,KAAK1D,GACd9F,KAAMhB,EAAKwK,KAAKxJ,KAChB8B,IAAK9C,EAAKwK,KAAK1H,IACf2H,MAAOzK,EAAKwK,KAAKC,MACjB1H,UAAW/C,EAAKwK,KAAKzH,aAEvBvC,EAhC+C,CACjDb,KAT2C,gCAU3CjB,KA8BsCsL,IAtBIxM,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqK,GAAArK,EAAA,SAwBxCgD,EA7BgD,CAClDb,KAb2C,gCAc3CmI,MA2BqCtK,EAAAqK,KAxBK,yBAAArK,EAAAoB,SAAA1B,EAAA,kBAAJ,gBAAA2B,GAAA,OAAAxC,EAAA0C,MAAAC,KAAAC,YAAA,GD4I3ByL,CAAwCtN,KACnDsM,oBAAqB,SAAA5C,GAAE,OAAItG,EH9IM,SAAAsG,GAAE,MAAK,CACxCnH,KAnBmC,wBAoBnCmH,MG4IoC6D,CAAoC7D,KACxE2C,eAAgB,SAAAlK,GAAO,OAAIiB,EH1IC,SAAAjB,GAAO,MAAK,CACxCI,KAvB8B,mBAwB9BJ,WGwIoCoL,CAA+BpL,KACnE8J,mBAAoB,kBAAM7I,EHtIa,CACvCb,KA3BkC,0BGiKlC2J,kBAAmB,kBAAM9I,ECpHa,CACtCb,KA7CiC,yBDiKjCa,aAGaH,CAGb+I,GEpGawB,EA7DE,SAAAvO,GAAA,IAAGwO,EAAHxO,EAAGwO,MAAH,OACftO,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,aAEFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,IAAI1J,UAAU,mBACrBH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMiG,MADjB,YAMNvO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEC,GAAE,GAAApI,OAAK6M,EAAM/H,IAAX,cACFpG,UAAU,YACVqO,gBAAgB,YAEhBxO,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMmG,MALjB,cAOAzO,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEC,GAAE,GAAApI,OAAK6M,EAAM/H,IAAX,YACFpG,UAAU,YACVqO,gBAAgB,YAEhBxO,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMoG,MALjB,YAOA1O,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEC,GAAE,GAAApI,OAAK6M,EAAM/H,IAAX,iBACFpG,UAAU,YACVqO,gBAAgB,YAEhBxO,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAASC,KAAMqG,MALjB,mBASJ3O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,KACE5O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOC,KAAI,GAAApN,OAAK6M,EAAM/H,IAAX,cAA4BuI,UAAWpG,IAClD1I,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOC,KAAI,GAAApN,OAAK6M,EAAM/H,IAAX,YAA0BuI,UAAWlD,IAChD5L,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CACEC,KAAI,GAAApN,OAAK6M,EAAM/H,IAAX,iBACJuI,UAAWjC,IAEb7M,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CACEG,OAAK,EACLF,KAAI,GAAApN,OAAK6M,EAAM/H,KACfyI,OAAQ,kBAAMhP,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAU/E,GAAE,GAAApI,OAAK6M,EAAM/H,IAAX,yBCvDlC0I,8LAEEjD,kBAAQvJ,KAAK0B,MAAMsH,aAAehJ,KAAK0B,MAAMtD,OAC/C4B,KAAK0B,MAAMuH,kBAAkBjJ,KAAK0B,MAAMtD,wCAInC,IAAAoH,EACsCxF,KAAK0B,MAA1CsH,EADDxD,EACCwD,WAAYhC,EADbxB,EACawB,QAASC,EADtBzB,EACsByB,YACvBtC,EACHqC,GAAYC,IAAe+B,EAAWrE,UAZ3C,qGAaQqE,EAAWrE,UAGjB,OACEpH,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,qBACP7J,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVoH,IAAKH,EACL/B,MAAO,GACPmC,OAAQ,GACRC,IAAI,mBArBOe,IAAM6D,WAwCZvI,eAZS,SAAAC,GAAK,MAAK,CAChClD,MAAOkD,EAAMoH,SAAStK,MACtB4K,WAAY1H,EAAMoH,SAASM,WAC3B/B,YAAa3F,EAAMoH,SAASzB,YAC5BD,QAAS1F,EAAMoH,SAAS1B,UAGC,SAAAxF,GAAQ,MAAK,CACtCyH,kBAAmB,SAAA7K,GAAK,OAAIoD,EAASC,EAA0BrD,KAC/DoD,aAGaH,CAGbmL,GCxBaC,GApBH,kBACVlP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,IAAI1J,UAAU,2BAAvB,eAIFH,EAAAC,EAAAC,cAACiP,GAAD,QAGJnP,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,KACE5O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAWpG,IACjC1I,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWT,IACnCrO,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOE,UAAW1O,OCLTgP,GAZF,SAAAtP,GAAA,IAAGuP,EAAHvP,EAAGuP,MAAH,OACXrP,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAUD,MAAOA,GACfrP,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACE5J,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWI,kCCN3BK,GAAe,CACnBxK,aAAc,GACd4E,YAAa,KACbrG,QAAS,CACPG,KAAM,GACNC,OAAQ,GACRE,YAAa,GACbD,QAAS,YACTE,YAAa,IAEf4F,SAAS,EACTC,YAAa,MAGT8F,GAAoB,SAAAzL,GACxB,GAAqB,kBAAVA,EACX,OAAOA,EAAM0L,QAAQ,KAAM,KAAKzE,eAG5B0E,GAAiB,SAACC,EAASC,GAO/B,IAAI7L,EAAQ,KACZ,OAAK4L,EAAQ9M,QAQbkB,EAAQ4L,EAAQA,EAAQ9M,OAAS,GAAGkB,MAC7ByL,GAAkBzL,KAPrBA,EADE6L,EAAe/M,OAAS,EAClB,mBAEA,aAEH2M,GAAkBzL,KAMvB8L,GAAY,SAAC3M,EAAQC,GACzB,IAAM2M,EAAa9K,cAAI7B,EAAQ,MAE/B,OAAO2B,gBAAM5B,EAAO6M,OACjBlF,OAAO,SAAAoD,GAAI,OAAIA,IACfjJ,IAAI,SAAAiJ,GAAI,OAAIjJ,cAAIiJ,EAAKlJ,aAAa8I,MAAO,UACzCmC,UACAhL,IAAI,SAAAC,GACH,IAAM0K,EAAU3K,cAAIC,EAAG0K,QAAQ9B,MAAO,QAChC+B,EAAiB5K,cAAIC,EAAG2K,eAAe/B,MAAO,QACpD,OAAOtN,OAAA+D,EAAA,EAAA/D,CAAA,GACF0E,EADL,CAEES,SAAUT,EAAG0B,WAAWe,cACxB9D,YAAa8L,GAAeC,EAASC,GACrChJ,WAAY+I,EAAQ9M,OAChB8M,EAAQA,EAAQ9M,OAAS,GAAG2D,UAC5B,KACJE,UAAW1B,cAAIC,EAAGyB,UAAUmH,MAAO,QACnChH,OAAQiJ,EAAWzC,SAASpI,EAAGsF,QAGlC5G,QAAQ,aACRsM,UACAvL,SC/DC6K,GAAe,CACnB1O,MAAO,GACPoI,cAAe,GACfC,oBAAoB,EACpBG,oBAAqB,IACrBuB,gBAAgB,EAChBG,iBAAkB,GAClBU,WAAY,GACZhC,SAAS,EACTC,YAAa,MCTT6F,GAAe,CACnB9J,MAAO,GACPgE,SAAS,EACTC,YAAa,MCMAwG,GANKC,aAAgB,CAClCnM,UH8Da,WAAuC,IAA9BD,EAA8BrB,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB6M,GAAca,EAAQ1N,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQsN,EAAOhN,MACb,IfnEyC,gCeoEvC,OAAO7C,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0F,SAAS,EACTC,YAAa,OAEjB,IfxEyC,gCeyEvC,OAAOnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEgB,aAAc8K,GAAUO,EAAOlN,OAAQkN,EAAOjN,QAC9CwG,YAAa0G,KAAKC,MAAMpJ,KAAKqJ,MAAQ,KACrC9G,SAAS,EACTC,YAAa,OAEjB,If/EyC,gCegFvC,OAAOnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEgB,aAAc,GACd2E,YAAa0G,EAAO7E,MACpB9B,SAAS,IAEb,IfrFuB,cesFrB,OAAOlJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEET,QAAS8M,EAAO9M,UAEpB,QACE,OAAOS,IG1FXkJ,aDCa,WAAuC,IAA9BlJ,EAA8BrB,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB6M,GAAca,EAAQ1N,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQsN,EAAOhN,MACb,IPPyC,gCOQvC,OAAO7C,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0F,SAAS,EACTC,YAAa,OAEjB,IPZyC,gCOavC,OAAOnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0B,MAAO2K,EAAOjO,KACduH,YAAa,KACbD,SAAS,IAEb,IPlByC,gCOmBzC,IPlB+B,sBOmB7B,OAAOlJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0B,MAAO,GACPiE,YAAa0G,EAAO7E,MACpB9B,SAAS,IAEb,QACE,OAAO1F,ICxBXoH,SFMa,WAAuC,IAA9BpH,EAA8BrB,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB6M,GAAca,EAAQ1N,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQsN,EAAOhN,MACb,IVdqB,YUenB,OAAO7C,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEElD,MAAOuP,EAAO1L,QAElB,IVlBiC,wBUmB/B,OAAOX,EAAMkF,cAAcoE,SAAS+C,EAAO7F,IAApChK,OAAA+D,EAAA,EAAA/D,CAAA,GAEEwD,EAFF,CAGDkF,cAAelF,EAAMkF,cAAc4B,OACjC,SAAA2F,GAAM,OAAIA,IAAWJ,EAAO7F,OAJ7BhK,OAAA+D,EAAA,EAAA/D,CAAA,GAQEwD,EARF,CASDkF,cAAa,GAAAxH,OAAAlB,OAAAyN,EAAA,EAAAzN,CAAMwD,EAAMkF,eAAZ,CAA2BmH,EAAO7F,OAEvD,IV7B4B,mBU8B1B,OAAOhK,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEkF,cAAc1I,OAAAyN,EAAA,EAAAzN,CAAK6P,EAAOpN,WAE9B,IVjCgC,uBUkC9B,OAAOzC,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEkF,cAAe,KAEnB,IVrC+B,sBUsC7B,OAAO1I,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEmF,oBAAqBnF,EAAMmF,qBAE/B,IVzCqC,4BU0CnC,OAAO3I,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEsF,oBAAqB+G,EAAO5D,WAEhC,IV7C2B,kBU8CzB,OAAOjM,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE6G,gBAAiB7G,EAAM6G,iBAE3B,IVjDkC,yBUkDhC,OAAOrK,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEEgH,iBAAkBqF,EAAOzD,YAE7B,IVpDuC,8BUqDrC,OAAOpM,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0F,SAAS,EACTC,YAAa,OAEjB,IVzDuC,8BU0DrC,OAAOnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0H,WAAY2E,EAAO3E,WACnBhC,SAAS,EACTC,YAAa,OAEjB,IV/DuC,8BUgErC,OAAOnJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0H,WAAY,GACZ/B,YAAa0G,EAAO7E,MACpB9B,SAAS,IAEb,IVrE6B,oBUsE3B,OAAOlJ,OAAA+D,EAAA,EAAA/D,CAAA,GACFwD,EADL,CAEE0H,WAAY,KAEhB,QACE,OAAO1H,MGlFPsL,GCDiB,WACrB,IAAMoB,ECLiB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAJpB,YAKjB,GAAwB,OAApBF,EACF,OAEF,OAAO/O,KAAKkP,MAAMH,GAClB,MAAOI,GACP,QDHqBC,GACjBC,EAAc,CAACC,MAMrB,OAAOC,aACLhB,GACAO,EACAU,KAAe3O,WAAf,EAAmBwO,IDVTI,GAEd/B,GAAMgC,UACJC,mBAAS,YEIc,SAAAvN,GACvB,IACE,IAAM2M,EAAkB/O,KAAKC,UAAUmC,GACvC4M,aAAaY,QAjBI,WAiBkBb,GACnC,MAAOI,KFPPU,CAAU,CACRrG,SAAUkE,GAAMhE,WAAWF,SAC3BnH,UAAWqL,GAAMhE,WAAWrH,UAC5BiJ,aAAcoC,GAAMhE,WAAW4B,iBAGnC,KAGF+B,iBAAOhP,EAAAC,EAAAC,cAACuR,GAAD,CAAMpC,MAAOA,KAAWqC,SAASC,eAAe","file":"static/js/main.11e7c6ad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Blankslate = ({ children }) => (\r\n  <div className=\"blankslate blankslate-clean-background\">{children}</div>\r\n);\r\n\r\nexport default Blankslate;\r\n","import React from \"react\";\r\nimport Blankslate from \"./blankslate\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <Blankslate>\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </Blankslate>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  viewerInfo: () => `\r\n    {\r\n      viewer {\r\n        login\r\n        avatarUrl(size: 96)\r\n      }\r\n    }\r\n  `,\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                assignees(last: 10) {\r\n                  edges {\r\n                    node {\r\n                      avatarUrl(size: 40)\r\n                      login\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  newPrs,\r\n  oldPrs\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const oldPrs = getState().dashboard.pullRequests;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const newPrs = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { chain } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\",\r\n  reviewState: \"\",\r\n  searchQuery: \"\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = chain(props.pullRequests)\r\n      .map(pr => pr.author)\r\n      .uniqBy(\"login\")\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {authors.map(({ login }) => (\r\n          <option key={login} value={login}>\r\n            {login}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = chain(props.pullRequests)\r\n      .map(pr => pr.repoName)\r\n      .uniqBy()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {repos.map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"reviewedAt\"}>recently reviewed</option>\r\n      <option value={\"createdAt\"}>recently created</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show ({props.filteredCount}):</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { formatDistance, parseISO } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"bg-yellow text-gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\",\r\n  \"no request\": \"Label--gray\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  assignees,\r\n  repository,\r\n  reviewState,\r\n  reviewedAt,\r\n  isNew,\r\n  filters\r\n}) => {\r\n  const relativeTime = field => {\r\n    if (!field) return null;\r\n    return formatDistance(parseISO(field), new Date(), { addSuffix: true });\r\n  };\r\n  let className = \"Box-row Box-row--hover-gray d-flex\";\r\n  if (isNew) className += \" Box-row--unread\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>#{number} </span>\r\n          {filters && filters.orderBy === \"updatedAt\" && updatedAt ? (\r\n            <span>\r\n              updated <span title={updatedAt}>{relativeTime(updatedAt)}</span>\r\n            </span>\r\n          ) : filters && filters.orderBy === \"createdAt\" && createdAt ? (\r\n            <span>\r\n              created <span title={createdAt}>{relativeTime(createdAt)}</span>\r\n            </span>\r\n          ) : filters && filters.orderBy === \"reviewedAt\" && reviewedAt ? (\r\n            <span>\r\n              reviewed{\" \"}\r\n              <span title={reviewedAt}>{relativeTime(reviewedAt)}</span>\r\n            </span>\r\n          ) : null}\r\n          <span> by </span>\r\n          <span>\r\n            <a href={author.url} className=\"muted-link\">\r\n              {author.login}\r\n            </a>\r\n          </span>\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {assignees.length > 0 ? (\r\n        <div className=\"pl-3\">\r\n          {assignees.map(assignee => (\r\n            <div className=\"d-flex\" key={assignee.login}>\r\n              <a\r\n                href={assignee.url}\r\n                className=\"pl-1 tooltipped tooltipped-sw\"\r\n                aria-label={`Assigned to ${assignee.login}`}\r\n              >\r\n                <img\r\n                  className=\"avatar rounded-1\"\r\n                  src={assignee.avatarUrl}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, { Search as SearchIcon } from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nclass SubNav extends React.PureComponent {\r\n  handleReviewStateChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.setFilters({\r\n      ...this.props.filters,\r\n      reviewState: e.target.dataset.reviewState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filters, setFilters } = this.props;\r\n\r\n    return (\r\n      <div className=\"subnav d-flex\">\r\n        <nav className=\"subnav-links flex-auto\">\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            All\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"review requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"review requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Review requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"changes requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"changes requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Changes requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"approved\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"approved\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Approved\r\n          </a>\r\n        </nav>\r\n        <div className=\"subnav-search col-3\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"name\"\r\n            className=\"form-control input-contrast\"\r\n            style={{ width: \"100%\", paddingLeft: 28 }}\r\n            placeholder=\"Search pull requests...\"\r\n            value={filters.searchQuery}\r\n            onChange={e =>\r\n              setFilters({\r\n                ...filters,\r\n                searchQuery: e.target.value\r\n              })\r\n            }\r\n          />\r\n          <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SubNav);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { differenceInDays, fromUnixTime, format } from \"date-fns\";\r\nimport { extend, filter, orderBy } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/dashboard\";\r\nimport Blankslate from \"../common/blankslate\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\nimport SubNav from \"./subnav\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled,\r\n      lastUpdated\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <SubNav />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters\r\n                        pullRequests={pullRequests}\r\n                        filteredCount={filteredPullRequests.length}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/dashboard\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <span className=\"text-gray mr-2 f6\">\r\n                        {lastUpdated\r\n                          ? `Last updated: ${format(\r\n                              fromUnixTime(lastUpdated),\r\n                              \"Pp\"\r\n                            )}`\r\n                          : `Last updated: never.`}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                        disabled={loading}\r\n                      >\r\n                        <Octicon icon={SyncIcon} />{\" \"}\r\n                        {loading ? \"Loading...\" : \"Refresh\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {githubError ? (\r\n                    <Blankslate>\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && !filteredPullRequests.length ? (\r\n                    <Blankslate>\r\n                      <p>No pull requests were found.</p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && filteredPullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.hideOldEnabled) {\r\n    filtered = filter(filtered, pr => {\r\n      return (\r\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\r\n        -filters.hideOldThreshold\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.repo) {\r\n    filtered = filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  if (filters.searchQuery) {\r\n    filtered = filter(filtered, pr => {\r\n      const searchQuery = filters.searchQuery.toLowerCase();\r\n      const repoName = pr.repoName.toLowerCase();\r\n      const title = pr.title.toLowerCase();\r\n      const authorLogin = pr.author.login.toLowerCase();\r\n\r\n      return (\r\n        repoName.indexOf(searchQuery) > -1 ||\r\n        title.indexOf(searchQuery) > -1 ||\r\n        authorLogin.indexOf(searchQuery) > -1\r\n      );\r\n    });\r\n  }\r\n\r\n  filtered = orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  lastUpdated: state.dashboard.lastUpdated,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  filteredPullRequests: applyFilters(\r\n    state.dashboard.pullRequests,\r\n    extend(\r\n      {\r\n        hideOldEnabled: state.settings.hideOldEnabled,\r\n        hideOldThreshold: state.settings.hideOldThreshold\r\n      },\r\n      state.dashboard.filters\r\n    )\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(actions.requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\r\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\r\nexport const REQUEST_VIEWER_INFO = \"REQUEST_VIEWER_INFO\";\r\nexport const REQUEST_VIEWER_INFO_LOADING = \"REQUEST_VIEWER_INFO_LOADING\";\r\nexport const REQUEST_VIEWER_INFO_SUCCESS = \"REQUEST_VIEWER_INFO_SUCCESS\";\r\nexport const REQUEST_VIEWER_INFO_FAILURE = \"REQUEST_VIEWER_INFO_FAILURE\";\r\nexport const RESET_VIEWER_INFO = \"RESET_VIEWER_INFO\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleHideOld = () => ({\r\n  type: TOGGLE_HIDE_OLD\r\n});\r\n\r\nexport const setHideOldThreshold = threshold => ({\r\n  type: SET_HIDE_OLD_THRESHOLD,\r\n  threshold\r\n});\r\n\r\nexport const requestViewerInfoLoading = () => ({\r\n  type: REQUEST_VIEWER_INFO_LOADING\r\n});\r\n\r\nexport const requestViewerInfoSuccess = viewerInfo => ({\r\n  type: REQUEST_VIEWER_INFO_SUCCESS,\r\n  viewerInfo\r\n});\r\n\r\nexport const requestViewerInfoFailure = error => ({\r\n  type: REQUEST_VIEWER_INFO_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestViewerInfo = token => async dispatch => {\r\n  try {\r\n    dispatch(requestViewerInfoLoading());\r\n    const query = queries.viewerInfo();\r\n    const viewerInfo = await get(query, token);\r\n    dispatch(requestViewerInfoSuccess(viewerInfo.viewer));\r\n  } catch (err) {\r\n    dispatch(requestViewerInfoFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetViewerInfo = () => ({\r\n  type: RESET_VIEWER_INFO\r\n});\r\n","import { isEmpty } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!this.props.token) {\r\n      this.props.resetViewerInfo();\r\n    }\r\n\r\n    if (this.props.token && isEmpty(this.props.viewerInfo)) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired,\r\n  viewerInfo: PropTypes.object.isRequired,\r\n  requestViewerInfo: PropTypes.func.isRequired,\r\n  resetViewerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(actions.setToken(value)),\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  resetViewerInfo: () => dispatch(actions.resetViewerInfo()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst Dashboard = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Dashboard</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh dashboard every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideOldEnabled}\r\n            onChange={props.toggleHideOld}\r\n          />{\" \"}\r\n          Hide pull requests older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.hideOldThreshold}\r\n            onChange={e => props.setHideOldThreshold(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  hideOldEnabled: state.settings.hideOldEnabled,\r\n  hideOldThreshold: state.settings.hideOldThreshold\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\r\n  setHideOldThreshold: interval =>\r\n    dispatch(actions.setHideOldThreshold(interval)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\nimport Blankslate from \"../common/blankslate\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetSelectedRepos();\r\n      this.props.resetWatchedRepos();\r\n    }\r\n\r\n    if (this.props.token && !this.props.selectedRepos.length) {\r\n      this.props.requestWatchedRepos(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {githubError ? (\r\n            <Blankslate>\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <Blankslate>\r\n              <p>You are not watching any repositories currently.</p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string,\r\n  resetWatchedRepos: PropTypes.func\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  resetWatchedRepos: () => dispatch(watchedReposActions.resetWatchedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\nexport const RESET_WATCHED_REPOS = \"RESET_WATCHED_REPOS\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetWatchedRepos = () => ({\r\n  type: RESET_WATCHED_REPOS\r\n});\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/dashboard`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={DashboardIcon} /> Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/dashboard`} component={Dashboard} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/dashboard`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst DEFAULT_AVATAR_URL =\r\n  \"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\";\r\n\r\nclass Avatar extends React.Component {\r\n  componentDidMount() {\r\n    if (isEmpty(this.props.viewerInfo) && this.props.token) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { viewerInfo, loading, githubError } = this.props;\r\n    const avatarUrl =\r\n      !loading && !githubError && viewerInfo.avatarUrl\r\n        ? viewerInfo.avatarUrl\r\n        : DEFAULT_AVATAR_URL;\r\n\r\n    return (\r\n      <Link to=\"/settings/account\">\r\n        <img\r\n          className=\"avatar avatar-small\"\r\n          src={avatarUrl}\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo,\r\n  githubError: state.settings.githubError,\r\n  loading: state.settings.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Avatar);\r\n","import React from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport \"../../node_modules/@primer/css/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\nimport Avatar from \"./common/avatar\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white no-underline\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n        <Avatar />\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  lastUpdated: null,\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\",\r\n    searchQuery: \"\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getReviewState = (reviews, reviewRequests) => {\r\n  // Expected values from GitHub:\r\n  // \"PENDING\", \"COMMENTED\", \"APPROVED\", \"CHANGES_REQUESTED\", \"DISMISSED\".\r\n  // Additional (custom) values:\r\n  // \"REVIEW_REQUESTED\", \"NO_REQUEST\".\r\n  // Take the state from the last review, replace any underscores,\r\n  // and make it lowercase so it can be dispayed nicely to the user.\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = \"REVIEW_REQUESTED\";\r\n    } else {\r\n      state = \"NO_REQUEST\";\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst formatPrs = (newPrs, oldPrs) => {\r\n  const oldPrsById = map(oldPrs, \"id\");\r\n\r\n  return chain(newPrs.nodes)\r\n    .filter(node => node)\r\n    .map(node => map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => {\r\n      const reviews = map(pr.reviews.edges, \"node\");\r\n      const reviewRequests = map(pr.reviewRequests.edges, \"node\");\r\n      return {\r\n        ...pr,\r\n        repoName: pr.repository.nameWithOwner,\r\n        reviewState: getReviewState(reviews, reviewRequests),\r\n        reviewedAt: reviews.length\r\n          ? reviews[reviews.length - 1].createdAt\r\n          : null,\r\n        assignees: map(pr.assignees.edges, \"node\"),\r\n        isNew: !oldPrsById.includes(pr.id)\r\n      };\r\n    })\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pullRequests: formatPrs(action.newPrs, action.oldPrs),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  hideOldEnabled: false,\r\n  hideOldThreshold: 30,\r\n  viewerInfo: {},\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_HIDE_OLD:\r\n      return {\r\n        ...state,\r\n        hideOldEnabled: !state.hideOldEnabled\r\n      };\r\n    case actions.SET_HIDE_OLD_THRESHOLD:\r\n      return {\r\n        ...state,\r\n        hideOldThreshold: action.threshold\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        viewerInfo: action.viewerInfo,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_FAILURE:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {},\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_VIEWER_INFO:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n    case actions.RESET_WATCHED_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}