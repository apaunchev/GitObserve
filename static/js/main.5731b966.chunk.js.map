{"version":3,"sources":["components/common/blankslate.js","components/common/not-found.js","githubApi.js","actions/pulls.js","components/common/flash.js","components/pulls/filters.js","utils.js","components/pulls/pull-request.js","components/pulls/subnav.js","components/pulls/index.js","actions/releases.js","components/releases/index.js","actions/settings.js","components/settings/account.js","components/settings/pulls.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/common/avatar.js","components/app.js","components/root.js","reducers/pulls.js","reducers/releases.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["Blankslate","_ref","children","react_default","a","createElement","className","NotFound","blankslate","get","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","_x","_x2","apply","this","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","setFilters","filters","Flash","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","pulls","dispatch","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","filteredCount","authors","chain","pullRequests","countBy","pr","login","toPairs","fromPairs","onChange","style","width","keys","map","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","isoToRelative","date","addSuffix","formatDistanceToNow","parseISO","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","no request","title","url","createdAt","updatedAt","assignees","repository","reviewCount","reviewedAt","isNew","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","index_esm","icon","ClockIcon","OrganizationIcon","assignee","SubNav","handleReviewStateChange","preventDefault","_this","dataset","_this$props","data-review-state","paddingLeft","placeholder","SearchIcon","React","PureComponent","PullRequests","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","resetPullRequests","selectedRepos","location","refresh","requestPullRequests","autoRefreshEnabled","setInterval","autoRefreshInterval","window","clearInterval","filteredPullRequests","loading","githubError","lastUpdated","react_router_dom","to","SettingsIcon","subnav","pulls_filters","format","fromUnixTime","disabled","SyncIcon","pull_request","assign","id","flash","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","Date","hideOldThreshold","hideWithoutRequestEnabled","toLowerCase","authorLogin","indexOf","settings","extend","getState","t0","error","requestReleasesLoading","requestReleasesSuccess","requestReleasesFailure","Releases","releases","requestReleases","_this$props2","publishedAt","repoUrl","description","esm","requestViewerInfoSuccess","viewerInfo","requestViewerInfo","viewer","Account","input","createRef","resetViewerInfo","isEmpty","setToken","rel","ref","current","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleHideOld","setHideOldThreshold","threshold","toggleHideWithoutRequest","checked","Repositories","resetSelectedRepos","resetWatchedRepos","requestWatchedRepos","watchedRepos","selectAllRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","settingsActions","Settings","match","pathname","CloudUploadIcon","activeClassName","PersonIcon","GitPullRequestIcon","RepoIcon","react_router","path","component","exact","render","Avatar","App","avatar","Root","store","es","initialState","formatReviewState","replace","getReviewState","reviews","reviewRequests","formatPrs","oldPrsById","nodes","flatten","reverse","hideWithoutRequest","rootReducer","combineReducers","action","Math","floor","now","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"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","file":"static/js/main.5731b966.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Blankslate = ({ children }) => (\r\n  <div className=\"blankslate blankslate-clean-background\">{children}</div>\r\n);\r\n\r\nexport default Blankslate;\r\n","import React from \"react\";\r\nimport Blankslate from \"./blankslate\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <Blankslate>\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </Blankslate>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  viewerInfo: () => `\r\n    {\r\n      viewer {\r\n        login\r\n        avatarUrl(size: 96)\r\n      }\r\n    }\r\n  `,\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                assignees(last: 10) {\r\n                  edges {\r\n                    node {\r\n                      avatarUrl(size: 40)\r\n                      login\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  releasesForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          name\r\n          url\r\n          releases(last: 5) {\r\n            edges {\r\n              node {\r\n                id\r\n                name\r\n                publishedAt\r\n                description\r\n                url\r\n                author {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const RESET_PULL_REQUESTS = \"RESET_PULL_REQUESTS\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  newPrs,\r\n  oldPrs\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const oldPrs = getState().pulls.pulls;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const newPrs = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetPullRequests = () => ({\r\n  type: RESET_PULL_REQUESTS\r\n});\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { chain } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/pulls\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\",\r\n  reviewState: \"\",\r\n  searchQuery: \"\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = chain(props.pullRequests)\r\n      .countBy(pr => pr.author.login)\r\n      .toPairs()\r\n      .orderBy(1, \"desc\")\r\n      .fromPairs()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {Object.keys(authors).map(author => (\r\n          <option key={author} value={author}>\r\n            {author} ({authors[author]})\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = chain(props.pullRequests)\r\n      .countBy(pr => pr.repoName)\r\n      .toPairs()\r\n      .orderBy(1, \"desc\")\r\n      .fromPairs()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {Object.keys(repos).map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo} ({repos[repo]})\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"reviewedAt\"}>recently reviewed</option>\r\n      <option value={\"createdAt\"}>recently created</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show ({props.filteredCount}):</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { formatDistanceToNow, parseISO } from \"date-fns\";\r\n\r\nexport const isoToRelative = (date, addSuffix = true) => {\r\n  if (!date) return null;\r\n\r\n  return formatDistanceToNow(parseISO(date), { addSuffix });\r\n};\r\n","import Octicon, {\r\n  Clock as ClockIcon,\r\n  Organization as OrganizationIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { isoToRelative } from \"../../utils\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"bg-yellow text-gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\",\r\n  \"no request\": \"Label--gray\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  assignees,\r\n  repository,\r\n  reviewCount,\r\n  reviewState,\r\n  reviewedAt,\r\n  isNew,\r\n  filters\r\n}) => {\r\n  let className = \"Box-row Box-row--hover-gray d-flex\";\r\n  if (isNew) className += \" Box-row--unread\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>\r\n            <Octicon icon={ClockIcon} />{\" \"}\r\n            {filters && filters.orderBy === \"updatedAt\" && updatedAt ? (\r\n              <span>\r\n                Updated{\" \"}\r\n                <span title={updatedAt}>{isoToRelative(updatedAt)}</span>\r\n              </span>\r\n            ) : filters && filters.orderBy === \"createdAt\" && createdAt ? (\r\n              <span>\r\n                Created{\" \"}\r\n                <span title={createdAt}>{isoToRelative(createdAt)}</span>\r\n              </span>\r\n            ) : filters && filters.orderBy === \"reviewedAt\" && reviewedAt ? (\r\n              <span>\r\n                Reviewed{\" \"}\r\n                <span title={reviewedAt}>{isoToRelative(reviewedAt)}</span>\r\n              </span>\r\n            ) : null}\r\n          </span>\r\n          {reviewCount > 0 ? (\r\n            <span className=\"ml-2\">\r\n              <Octicon icon={OrganizationIcon} /> {reviewCount}{\" \"}\r\n              {reviewCount === 1 ? \"review\" : \"reviews\"}\r\n            </span>\r\n          ) : null}\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {assignees.length > 0 ? (\r\n        <div className=\"pl-3\">\r\n          {assignees.map(assignee => (\r\n            <div className=\"d-flex\" key={assignee.login}>\r\n              <a\r\n                href={assignee.url}\r\n                className=\"pl-1 tooltipped tooltipped-sw\"\r\n                aria-label={`Assigned to ${assignee.login}`}\r\n              >\r\n                <img\r\n                  className=\"avatar rounded-1\"\r\n                  src={assignee.avatarUrl}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, { Search as SearchIcon } from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/pulls\";\r\n\r\nclass SubNav extends React.PureComponent {\r\n  handleReviewStateChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.setFilters({\r\n      ...this.props.filters,\r\n      reviewState: e.target.dataset.reviewState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filters, setFilters } = this.props;\r\n\r\n    return (\r\n      <div className=\"subnav d-flex\">\r\n        <nav className=\"subnav-links flex-auto\">\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            All\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"review requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"review requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Review requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"commented\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"commented\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Commented\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"changes requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"changes requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Changes requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"approved\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"approved\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Approved\r\n          </a>\r\n        </nav>\r\n        <div className=\"subnav-search col-3\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"name\"\r\n            className=\"form-control input-contrast\"\r\n            style={{ width: \"100%\", paddingLeft: 28 }}\r\n            placeholder=\"Search pull requests...\"\r\n            value={filters.searchQuery}\r\n            onChange={e =>\r\n              setFilters({\r\n                ...filters,\r\n                searchQuery: e.target.value\r\n              })\r\n            }\r\n          />\r\n          <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SubNav);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { differenceInDays, fromUnixTime, format } from \"date-fns\";\r\nimport { extend, filter, orderBy } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/pulls\";\r\nimport Blankslate from \"../common/blankslate\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\nimport SubNav from \"./subnav\";\r\n\r\nclass PullRequests extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetPullRequests();\r\n    }\r\n\r\n    if (this.props.token && this.props.selectedRepos.length) {\r\n      if (((this.props.location || {}).state || {}).refresh) {\r\n        this.props.requestPullRequests(\r\n          this.props.selectedRepos,\r\n          this.props.token\r\n        );\r\n      }\r\n\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled,\r\n      lastUpdated\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Pull requests</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <SubNav />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters\r\n                        pullRequests={pullRequests}\r\n                        filteredCount={filteredPullRequests.length}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/pull-requests\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <span className=\"text-gray mr-2 f6\">\r\n                        {lastUpdated\r\n                          ? `Last updated: ${format(\r\n                              fromUnixTime(lastUpdated),\r\n                              \"Pp\"\r\n                            )}`\r\n                          : `Last updated: never.`}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                        disabled={loading}\r\n                      >\r\n                        <Octicon icon={SyncIcon} />{\" \"}\r\n                        {loading ? \"Loading...\" : \"Refresh\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {githubError ? (\r\n                    <Blankslate>\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && !filteredPullRequests.length ? (\r\n                    <Blankslate>\r\n                      <p>No pull requests were found.</p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && filteredPullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPullRequests.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nPullRequests.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.hideOldEnabled) {\r\n    filtered = filter(filtered, pr => {\r\n      return (\r\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\r\n        -filters.hideOldThreshold\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.repo) {\r\n    filtered = filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  if (filters.hideWithoutRequestEnabled) {\r\n    filtered = filter(filtered, pr => pr.reviewState !== \"no request\");\r\n  }\r\n\r\n  if (filters.searchQuery) {\r\n    filtered = filter(filtered, pr => {\r\n      const searchQuery = filters.searchQuery.toLowerCase();\r\n      const repoName = pr.repoName.toLowerCase();\r\n      const title = pr.title.toLowerCase();\r\n      const authorLogin = pr.author.login.toLowerCase();\r\n\r\n      return (\r\n        repoName.indexOf(searchQuery) > -1 ||\r\n        title.indexOf(searchQuery) > -1 ||\r\n        authorLogin.indexOf(searchQuery) > -1\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.orderBy === \"reviewedAt\") {\r\n    filtered = filter(filtered, pr => pr.reviewedAt);\r\n  }\r\n\r\n  filtered = orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.pulls.githubError,\r\n  loading: state.pulls.loading,\r\n  lastUpdated: state.pulls.lastUpdated,\r\n  pullRequests: state.pulls.pulls,\r\n  filteredPullRequests: applyFilters(\r\n    state.pulls.pulls,\r\n    extend(\r\n      {\r\n        hideOldEnabled: state.settings.hideOldEnabled,\r\n        hideOldThreshold: state.settings.hideOldThreshold,\r\n        hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled\r\n      },\r\n      state.pulls.filters\r\n    )\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) =>\r\n    dispatch(actions.requestPullRequests(repoIds, token)),\r\n  resetPullRequests: () => dispatch(actions.resetPullRequests()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PullRequests);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_RELEASES = \"REQUEST_RELEASES\";\r\nexport const REQUEST_RELEASES_LOADING = \"REQUEST_RELEASES_LOADING\";\r\nexport const REQUEST_RELEASES_SUCCESS = \"REQUEST_RELEASES_SUCCESS\";\r\nexport const REQUEST_RELEASES_FAILURE = \"REQUEST_RELEASES_FAILURE\";\r\n\r\nexport const requestReleases = (repoIds, token) => async dispatch => {\r\n  try {\r\n    dispatch(requestReleasesLoading());\r\n    const query = queries.releasesForRepos(repoIds);\r\n    const data = await get(query, token);\r\n    dispatch(requestReleasesSuccess(data));\r\n  } catch (err) {\r\n    dispatch(requestReleasesFailure(err));\r\n  }\r\n};\r\n\r\nexport const requestReleasesLoading = () => ({\r\n  type: REQUEST_RELEASES_LOADING\r\n});\r\n\r\nexport const requestReleasesSuccess = data => ({\r\n  type: REQUEST_RELEASES_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestReleasesFailure = error => ({\r\n  type: REQUEST_RELEASES_FAILURE,\r\n  error\r\n});\r\n","import Octicon, { Sync as SyncIcon } from \"@githubprimer/octicons-react\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/releases\";\r\nimport { isoToRelative } from \"../../utils\";\r\nimport \"./style.css\";\r\n\r\nclass Releases extends React.PureComponent {\r\n  componentDidMount() {\r\n    const {\r\n      token,\r\n      selectedRepos,\r\n      location,\r\n      releases,\r\n      requestReleases\r\n    } = this.props;\r\n\r\n    if (token && selectedRepos.length) {\r\n      if (((location || {}).state || {}).refresh || !releases.length) {\r\n        requestReleases(selectedRepos, token);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      releases,\r\n      loading,\r\n      requestReleases,\r\n      selectedRepos,\r\n      token\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Releases</h1>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => requestReleases(selectedRepos, token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {releases.map(\r\n              ({\r\n                id,\r\n                author,\r\n                publishedAt,\r\n                url,\r\n                name,\r\n                repoUrl,\r\n                repoName,\r\n                description\r\n              }) => (\r\n                <div\r\n                  key={id}\r\n                  className=\"d-flex flex-items-baseline border-bottom border-gray py-3\"\r\n                >\r\n                  {author.avatarUrl && (\r\n                    <div className=\"mr-3\">\r\n                      <a href={author.url} className=\"d-block\">\r\n                        <img\r\n                          className=\"avatar rounded-1\"\r\n                          src={author.avatarUrl}\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          alt=\"\"\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"d-flex flex-column width-full\">\r\n                    <div className=\"d-flex flex-items-baseline\">\r\n                      <div>\r\n                        <a\r\n                          href={author.url}\r\n                          className=\"link-gray-dark no-underline text-bold wb-break-all d-inline-block\"\r\n                        >\r\n                          {author.login}\r\n                        </a>{\" \"}\r\n                        released <a href={url}>{name}</a> at{\" \"}\r\n                        <a\r\n                          href={repoUrl}\r\n                          className=\"link-gray-dark no-underline text-bold wb-break-all d-inline-block\"\r\n                        >\r\n                          {repoName}\r\n                        </a>\r\n                      </div>\r\n                      <span\r\n                        className=\"f6 text-gray-light no-wrap ml-1\"\r\n                        title={publishedAt}\r\n                      >\r\n                        {isoToRelative(publishedAt)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"ReleaseNotes Box p-3 mt-2 bg-gray\">\r\n                      <Markdown>{description}</Markdown>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  githubError: state.releases.githubError,\r\n  loading: state.releases.loading,\r\n  lastUpdated: state.releases.lastUpdated,\r\n  releases: state.releases.releases\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestReleases: (repoIds, token) =>\r\n    dispatch(actions.requestReleases(repoIds, token))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Releases);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\r\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\r\nexport const TOGGLE_HIDE_WITHOUT_REQUEST = \"TOGGLE_HIDE_WITHOUT_REQUEST\";\r\nexport const REQUEST_VIEWER_INFO = \"REQUEST_VIEWER_INFO\";\r\nexport const REQUEST_VIEWER_INFO_LOADING = \"REQUEST_VIEWER_INFO_LOADING\";\r\nexport const REQUEST_VIEWER_INFO_SUCCESS = \"REQUEST_VIEWER_INFO_SUCCESS\";\r\nexport const REQUEST_VIEWER_INFO_FAILURE = \"REQUEST_VIEWER_INFO_FAILURE\";\r\nexport const RESET_VIEWER_INFO = \"RESET_VIEWER_INFO\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleHideOld = () => ({\r\n  type: TOGGLE_HIDE_OLD\r\n});\r\n\r\nexport const setHideOldThreshold = threshold => ({\r\n  type: SET_HIDE_OLD_THRESHOLD,\r\n  threshold\r\n});\r\n\r\nexport const toggleHideWithoutRequest = () => ({\r\n  type: TOGGLE_HIDE_WITHOUT_REQUEST\r\n});\r\n\r\nexport const requestViewerInfoLoading = () => ({\r\n  type: REQUEST_VIEWER_INFO_LOADING\r\n});\r\n\r\nexport const requestViewerInfoSuccess = viewerInfo => ({\r\n  type: REQUEST_VIEWER_INFO_SUCCESS,\r\n  viewerInfo\r\n});\r\n\r\nexport const requestViewerInfoFailure = error => ({\r\n  type: REQUEST_VIEWER_INFO_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestViewerInfo = token => async dispatch => {\r\n  try {\r\n    dispatch(requestViewerInfoLoading());\r\n    const query = queries.viewerInfo();\r\n    const viewerInfo = await get(query, token);\r\n    dispatch(requestViewerInfoSuccess(viewerInfo.viewer));\r\n  } catch (err) {\r\n    dispatch(requestViewerInfoFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetViewerInfo = () => ({\r\n  type: RESET_VIEWER_INFO\r\n});\r\n","import { isEmpty } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nclass Account extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!this.props.token) {\r\n      this.props.resetViewerInfo();\r\n    }\r\n\r\n    if (this.props.token && isEmpty(this.props.viewerInfo)) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired,\r\n  viewerInfo: PropTypes.object.isRequired,\r\n  requestViewerInfo: PropTypes.func.isRequired,\r\n  resetViewerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(actions.setToken(value)),\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  resetViewerInfo: () => dispatch(actions.resetViewerInfo()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst PullRequests = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Pull requests</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh pull requests every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideOldEnabled}\r\n            onChange={props.toggleHideOld}\r\n          />{\" \"}\r\n          Hide pull requests older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.hideOldThreshold}\r\n            onChange={e => props.setHideOldThreshold(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideWithoutRequestEnabled}\r\n            onChange={props.toggleHideWithoutRequest}\r\n          />\r\n          Hide pull requests without a review request\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  hideOldEnabled: state.settings.hideOldEnabled,\r\n  hideOldThreshold: state.settings.hideOldThreshold,\r\n  hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\r\n  setHideOldThreshold: interval =>\r\n    dispatch(actions.setHideOldThreshold(interval)),\r\n  toggleHideWithoutRequest: () => dispatch(actions.toggleHideWithoutRequest()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PullRequests);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\nimport Blankslate from \"../common/blankslate\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetSelectedRepos();\r\n      this.props.resetWatchedRepos();\r\n    }\r\n\r\n    if (this.props.token && !this.props.selectedRepos.length) {\r\n      this.props.requestWatchedRepos(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to track.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {githubError ? (\r\n            <Blankslate>\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && !watchedRepos.length ? (\r\n            <Blankslate>\r\n              <p>You are not watching any repositories currently.</p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string,\r\n  resetWatchedRepos: PropTypes.func\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  resetWatchedRepos: () => dispatch(watchedReposActions.resetWatchedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\nexport const RESET_WATCHED_REPOS = \"RESET_WATCHED_REPOS\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetWatchedRepos = () => ({\r\n  type: RESET_WATCHED_REPOS\r\n});\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  GitPullRequest as GitPullRequestIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport PullRequests from \"./pulls\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to={{ pathname: \"/\", state: { refresh: true } }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/pulls`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={GitPullRequestIcon} /> Pull requests\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/pulls`} component={PullRequests} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/pulls`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst DEFAULT_AVATAR_URL =\r\n  \"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\";\r\n\r\nclass Avatar extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (isEmpty(this.props.viewerInfo) && this.props.token) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { viewerInfo, loading, githubError } = this.props;\r\n    const avatarUrl =\r\n      !loading && !githubError && viewerInfo.avatarUrl\r\n        ? viewerInfo.avatarUrl\r\n        : DEFAULT_AVATAR_URL;\r\n\r\n    return (\r\n      <Link to=\"/settings/account\">\r\n        <img\r\n          className=\"avatar avatar-small\"\r\n          src={avatarUrl}\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo,\r\n  githubError: state.settings.githubError,\r\n  loading: state.settings.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Avatar);\r\n","import React from \"react\";\r\nimport { Link, NavLink, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"../../node_modules/@primer/css/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport PullRequests from \"./pulls\";\r\nimport Releases from \"./releases\";\r\nimport Settings from \"./settings\";\r\nimport Avatar from \"./common/avatar\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto d-flex flex-items-baseline\">\r\n          <h1 className=\"h2\">\r\n            <Link to=\"/\" className=\"text-white no-underline\">\r\n              GitObserve\r\n            </Link>\r\n          </h1>\r\n          <nav>\r\n            <NavLink\r\n              to=\"/pulls\"\r\n              className=\"ml-4 f4 text-white\"\r\n              activeClassName=\"text-underline\"\r\n            >\r\n              Pull requests\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/releases\"\r\n              className=\"ml-3 f4 text-white\"\r\n              activeClassName=\"text-underline\"\r\n            >\r\n              Releases\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <Avatar />\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route path=\"/pulls\" component={PullRequests} />\r\n      <Route path=\"/releases\" component={Releases} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route exact path=\"/\" render={() => <Redirect to=\"/pulls\" />} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/pulls\";\r\n\r\nconst initialState = {\r\n  pulls: [],\r\n  lastUpdated: null,\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\",\r\n    searchQuery: \"\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getReviewState = (reviews, reviewRequests) => {\r\n  // Expected values from GitHub:\r\n  // \"PENDING\", \"COMMENTED\", \"APPROVED\", \"CHANGES_REQUESTED\", \"DISMISSED\".\r\n  // Additional (custom) values:\r\n  // \"REVIEW_REQUESTED\", \"NO_REQUEST\".\r\n  // Take the state from the last review, replace any underscores,\r\n  // and make it lowercase so it can be dispayed nicely to the user.\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = \"REVIEW_REQUESTED\";\r\n    } else {\r\n      state = \"NO_REQUEST\";\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst formatPrs = (newPrs, oldPrs) => {\r\n  const oldPrsById = map(oldPrs, \"id\");\r\n\r\n  return chain(newPrs.nodes)\r\n    .filter(node => node)\r\n    .map(node => map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => {\r\n      const reviews = map(pr.reviews.edges, \"node\");\r\n      const reviewRequests = map(pr.reviewRequests.edges, \"node\");\r\n      return {\r\n        ...pr,\r\n        reviews,\r\n        reviewRequests,\r\n        repoName: pr.repository.nameWithOwner,\r\n        reviewCount: reviews.length,\r\n        reviewState: getReviewState(reviews, reviewRequests),\r\n        reviewedAt: reviews.length\r\n          ? reviews[reviews.length - 1].createdAt\r\n          : null,\r\n        assignees: map(pr.assignees.edges, \"node\"),\r\n        isNew: !oldPrsById.includes(pr.id)\r\n      };\r\n    })\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pulls: formatPrs(action.newPrs, action.oldPrs),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pulls: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_PULL_REQUESTS:\r\n      return {\r\n        ...state,\r\n        pulls: [],\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/releases\";\r\n\r\nconst initialState = {\r\n  releases: [],\r\n  lastUpdated: null,\r\n  loading: false,\r\n  githubError: false\r\n};\r\n\r\nconst formatReleases = data =>\r\n  chain(data.nodes)\r\n    .map(node => {\r\n      const { name: repoName, url: repoUrl } = node;\r\n      return {\r\n        ...node,\r\n        releases: map(node.releases.edges, ({ node }) => ({\r\n          ...node,\r\n          repoName,\r\n          repoUrl\r\n        }))\r\n      };\r\n    })\r\n    .map(node => node.releases)\r\n    .flatten()\r\n    .orderBy(\"publishedAt\")\r\n    .reverse()\r\n    .value();\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_RELEASES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: false\r\n      };\r\n    case actions.REQUEST_RELEASES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        releases: formatReleases(action.data),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: false\r\n      };\r\n    case actions.REQUEST_RELEASES_FAILURE:\r\n      return {\r\n        ...state,\r\n        releases: [],\r\n        loading: false,\r\n        githubError: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  hideOldEnabled: false,\r\n  hideOldThreshold: 30,\r\n  hideWithoutRequest: false,\r\n  viewerInfo: {},\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_HIDE_OLD:\r\n      return {\r\n        ...state,\r\n        hideOldEnabled: !state.hideOldEnabled\r\n      };\r\n    case actions.SET_HIDE_OLD_THRESHOLD:\r\n      return {\r\n        ...state,\r\n        hideOldThreshold: action.threshold\r\n      };\r\n    case actions.TOGGLE_HIDE_WITHOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        hideWithoutRequestEnabled: !state.hideWithoutRequestEnabled\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        viewerInfo: action.viewerInfo,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_FAILURE:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {},\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_VIEWER_INFO:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n    case actions.RESET_WATCHED_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport pulls from \"./pulls\";\r\nimport releases from \"./releases\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pulls,\r\n  releases,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      pulls: store.getState().pulls,\r\n      releases: store.getState().releases,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}