{"version":3,"sources":["components/common/blankslate.js","components/common/not-found.js","githubApi.js","actions/pulls.js","components/common/flash.js","components/pulls/filters.js","utils.js","components/pulls/pull-request.js","components/pulls/subnav.js","components/pulls/index.js","actions/releases.js","components/releases/index.js","actions/settings.js","components/settings/account.js","components/settings/pulls.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/common/avatar.js","components/app.js","components/root.js","reducers/pulls.js","reducers/releases.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["Blankslate","_ref","children","react_default","a","createElement","className","NotFound","blankslate","get","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","_x","_x2","apply","this","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","setFilters","filters","Flash","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","pulls","dispatch","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","pullRequests","authors","chain","countBy","pr","login","toPairs","fromPairs","onChange","style","width","keys","map","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","isoToRelative","date","addSuffix","formatDistanceToNow","parseISO","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","no request","title","url","createdAt","updatedAt","repository","approvals","isNew","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","index_esm","icon","ClockIcon","ThumbsupIcon","SubNav","handleReviewStateChange","preventDefault","_this","dataset","_this$props","data-review-state","paddingLeft","placeholder","SearchIcon","React","PureComponent","PullRequests","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","resetPullRequests","selectedRepos","location","refresh","requestPullRequests","autoRefreshEnabled","setInterval","autoRefreshInterval","window","clearInterval","filteredPullRequests","loading","githubError","lastUpdated","react_router_dom","to","SettingsIcon","subnav","pulls_filters","format","fromUnixTime","disabled","SyncIcon","pull_request","assign","id","flash","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","Date","hideOldThreshold","hideWithoutRequestEnabled","toLowerCase","authorLogin","indexOf","settings","extend","getState","t0","error","requestReleasesLoading","requestReleasesSuccess","requestReleasesFailure","Releases","releases","requestReleases","_this$props2","publishedAt","repoUrl","description","esm","requestViewerInfoSuccess","viewerInfo","requestViewerInfo","viewer","Account","input","createRef","resetViewerInfo","isEmpty","setToken","rel","ref","current","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleHideOld","setHideOldThreshold","threshold","toggleHideWithoutRequest","checked","Repositories","resetSelectedRepos","resetWatchedRepos","requestWatchedRepos","watchedRepos","selectAllRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","settingsActions","Settings","match","pathname","CloudUploadIcon","activeClassName","PersonIcon","GitPullRequestIcon","RepoIcon","react_router","path","component","exact","render","Avatar","App","avatar","Root","store","es","initialState","REVIEW_STATES","formatReviewState","replace","getLatestReviewState","reviews","reviewRequests","getApprovalsCount","count","r","formatPrs","oldPrsById","nodes","flatten","reverse","hideWithoutRequest","rootReducer","combineReducers","action","Math","floor","now","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"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","file":"static/js/main.26b2ae8c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Blankslate = ({ children }) => (\r\n  <div className=\"blankslate blankslate-clean-background\">{children}</div>\r\n);\r\n\r\nexport default Blankslate;\r\n","import React from \"react\";\r\nimport Blankslate from \"./blankslate\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <Blankslate>\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </Blankslate>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  viewerInfo: () => `\r\n    {\r\n      viewer {\r\n        login\r\n        avatarUrl(size: 96)\r\n      }\r\n    }\r\n  `,\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  releasesForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          name\r\n          url\r\n          releases(last: 5) {\r\n            edges {\r\n              node {\r\n                id\r\n                name\r\n                publishedAt\r\n                description\r\n                url\r\n                author {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const RESET_PULL_REQUESTS = \"RESET_PULL_REQUESTS\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  newPrs,\r\n  oldPrs\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const oldPrs = getState().pulls.pulls;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const newPrs = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetPullRequests = () => ({\r\n  type: RESET_PULL_REQUESTS\r\n});\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { chain } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/pulls\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\",\r\n  reviewState: \"\",\r\n  searchQuery: \"\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = chain(props.pullRequests)\r\n      .countBy(pr => pr.author.login)\r\n      .toPairs()\r\n      .orderBy(1, \"desc\")\r\n      .fromPairs()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {Object.keys(authors).map(author => (\r\n          <option key={author} value={author}>\r\n            {author} ({authors[author]})\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = chain(props.pullRequests)\r\n      .countBy(pr => pr.repoName)\r\n      .toPairs()\r\n      .orderBy(1, \"desc\")\r\n      .fromPairs()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {Object.keys(repos).map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo} ({repos[repo]})\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"createdAt\"}>recently created</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">\r\n        Show ({props.pullRequests.length}):\r\n      </span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { formatDistanceToNow, parseISO } from \"date-fns\";\r\n\r\nexport const isoToRelative = (date, addSuffix = true) => {\r\n  if (!date) return null;\r\n\r\n  return formatDistanceToNow(parseISO(date), { addSuffix });\r\n};\r\n","import Octicon, {\r\n  Clock as ClockIcon,\r\n  Thumbsup as ThumbsupIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { isoToRelative } from \"../../utils\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"bg-yellow text-gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\",\r\n  \"no request\": \"Label--gray\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  repository,\r\n  reviewState,\r\n  approvals,\r\n  isNew,\r\n  filters\r\n}) => {\r\n  let className = \"Box-row Box-row--hover-gray d-flex\";\r\n  if (isNew) className += \" Box-row--unread\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>\r\n            <Octicon icon={ClockIcon} />{\" \"}\r\n            {filters && filters.orderBy === \"updatedAt\" && updatedAt ? (\r\n              <span>\r\n                Updated{\" \"}\r\n                <span title={updatedAt}>{isoToRelative(updatedAt)}</span>\r\n              </span>\r\n            ) : filters && filters.orderBy === \"createdAt\" && createdAt ? (\r\n              <span>\r\n                Opened <span title={createdAt}>{isoToRelative(createdAt)}</span>\r\n              </span>\r\n            ) : null}\r\n          </span>\r\n          <span className=\"ml-2\">\r\n            <Octicon icon={ThumbsupIcon} /> {approvals}{\" \"}\r\n            {approvals === 1 ? \"approval\" : \"approvals\"}\r\n          </span>\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, { Search as SearchIcon } from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/pulls\";\r\n\r\nclass SubNav extends React.PureComponent {\r\n  handleReviewStateChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.setFilters({\r\n      ...this.props.filters,\r\n      reviewState: e.target.dataset.reviewState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filters, setFilters } = this.props;\r\n\r\n    return (\r\n      <div className=\"subnav d-flex\">\r\n        <nav className=\"subnav-links flex-auto\">\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            All\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"review requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"review requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Review requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"commented\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"commented\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Commented\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"changes requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"changes requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Changes requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"approved\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"approved\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Approved\r\n          </a>\r\n        </nav>\r\n        <div className=\"subnav-search col-3\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"name\"\r\n            className=\"form-control input-contrast\"\r\n            style={{ width: \"100%\", paddingLeft: 28 }}\r\n            placeholder=\"Search pull requests...\"\r\n            value={filters.searchQuery}\r\n            onChange={e =>\r\n              setFilters({\r\n                ...filters,\r\n                searchQuery: e.target.value\r\n              })\r\n            }\r\n          />\r\n          <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.pulls.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SubNav);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { differenceInDays, fromUnixTime, format } from \"date-fns\";\r\nimport { extend, filter, orderBy } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/pulls\";\r\nimport Blankslate from \"../common/blankslate\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\nimport SubNav from \"./subnav\";\r\n\r\nclass PullRequests extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetPullRequests();\r\n    }\r\n\r\n    if (this.props.token && this.props.selectedRepos.length) {\r\n      if (((this.props.location || {}).state || {}).refresh) {\r\n        this.props.requestPullRequests(\r\n          this.props.selectedRepos,\r\n          this.props.token\r\n        );\r\n      }\r\n\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled,\r\n      lastUpdated\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Pull requests</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <SubNav />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters pullRequests={filteredPullRequests} />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/pull-requests\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <span className=\"text-gray mr-2 f6\">\r\n                        {lastUpdated\r\n                          ? `Last updated: ${format(\r\n                              fromUnixTime(lastUpdated),\r\n                              \"Pp\"\r\n                            )}`\r\n                          : `Last updated: never.`}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                        disabled={loading}\r\n                      >\r\n                        <Octicon icon={SyncIcon} />{\" \"}\r\n                        {loading ? \"Loading...\" : \"Refresh\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {githubError ? (\r\n                    <Blankslate>\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && !filteredPullRequests.length ? (\r\n                    <Blankslate>\r\n                      <p>No pull requests were found.</p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && filteredPullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPullRequests.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nPullRequests.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.hideOldEnabled) {\r\n    filtered = filter(filtered, pr => {\r\n      return (\r\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\r\n        -filters.hideOldThreshold\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.repo) {\r\n    filtered = filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  if (filters.hideWithoutRequestEnabled) {\r\n    filtered = filter(filtered, pr => pr.reviewState !== \"no request\");\r\n  }\r\n\r\n  if (filters.searchQuery) {\r\n    filtered = filter(filtered, pr => {\r\n      const searchQuery = filters.searchQuery.toLowerCase();\r\n      const repoName = pr.repoName.toLowerCase();\r\n      const title = pr.title.toLowerCase();\r\n      const authorLogin = pr.author.login.toLowerCase();\r\n\r\n      return (\r\n        repoName.indexOf(searchQuery) > -1 ||\r\n        title.indexOf(searchQuery) > -1 ||\r\n        authorLogin.indexOf(searchQuery) > -1\r\n      );\r\n    });\r\n  }\r\n\r\n  filtered = orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.pulls.githubError,\r\n  loading: state.pulls.loading,\r\n  lastUpdated: state.pulls.lastUpdated,\r\n  filteredPullRequests: applyFilters(\r\n    state.pulls.pulls,\r\n    extend(\r\n      {\r\n        hideOldEnabled: state.settings.hideOldEnabled,\r\n        hideOldThreshold: state.settings.hideOldThreshold,\r\n        hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled\r\n      },\r\n      state.pulls.filters\r\n    )\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) =>\r\n    dispatch(actions.requestPullRequests(repoIds, token)),\r\n  resetPullRequests: () => dispatch(actions.resetPullRequests()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PullRequests);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_RELEASES = \"REQUEST_RELEASES\";\r\nexport const REQUEST_RELEASES_LOADING = \"REQUEST_RELEASES_LOADING\";\r\nexport const REQUEST_RELEASES_SUCCESS = \"REQUEST_RELEASES_SUCCESS\";\r\nexport const REQUEST_RELEASES_FAILURE = \"REQUEST_RELEASES_FAILURE\";\r\n\r\nexport const requestReleases = (repoIds, token) => async dispatch => {\r\n  try {\r\n    dispatch(requestReleasesLoading());\r\n    const query = queries.releasesForRepos(repoIds);\r\n    const data = await get(query, token);\r\n    dispatch(requestReleasesSuccess(data));\r\n  } catch (err) {\r\n    dispatch(requestReleasesFailure(err));\r\n  }\r\n};\r\n\r\nexport const requestReleasesLoading = () => ({\r\n  type: REQUEST_RELEASES_LOADING\r\n});\r\n\r\nexport const requestReleasesSuccess = data => ({\r\n  type: REQUEST_RELEASES_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestReleasesFailure = error => ({\r\n  type: REQUEST_RELEASES_FAILURE,\r\n  error\r\n});\r\n","import Octicon, { Sync as SyncIcon } from \"@githubprimer/octicons-react\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/releases\";\r\nimport { isoToRelative } from \"../../utils\";\r\nimport \"./style.css\";\r\n\r\nclass Releases extends React.PureComponent {\r\n  componentDidMount() {\r\n    const {\r\n      token,\r\n      selectedRepos,\r\n      location,\r\n      releases,\r\n      requestReleases\r\n    } = this.props;\r\n\r\n    if (token && selectedRepos.length) {\r\n      if (((location || {}).state || {}).refresh || !releases.length) {\r\n        requestReleases(selectedRepos, token);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      releases,\r\n      loading,\r\n      requestReleases,\r\n      selectedRepos,\r\n      token\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Releases</h1>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => requestReleases(selectedRepos, token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {releases.map(\r\n              ({\r\n                id,\r\n                author,\r\n                publishedAt,\r\n                url,\r\n                name,\r\n                repoUrl,\r\n                repoName,\r\n                description\r\n              }) => (\r\n                <div\r\n                  key={id}\r\n                  className=\"d-flex flex-items-baseline border-bottom border-gray py-3\"\r\n                >\r\n                  {author.avatarUrl && (\r\n                    <div className=\"mr-3\">\r\n                      <a href={author.url} className=\"d-block\">\r\n                        <img\r\n                          className=\"avatar rounded-1\"\r\n                          src={author.avatarUrl}\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          alt=\"\"\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"d-flex flex-column width-full\">\r\n                    <div className=\"d-flex flex-items-baseline\">\r\n                      <div>\r\n                        <a\r\n                          href={author.url}\r\n                          className=\"link-gray-dark no-underline text-bold wb-break-all d-inline-block\"\r\n                        >\r\n                          {author.login}\r\n                        </a>{\" \"}\r\n                        released <a href={url}>{name}</a> at{\" \"}\r\n                        <a\r\n                          href={repoUrl}\r\n                          className=\"link-gray-dark no-underline text-bold wb-break-all d-inline-block\"\r\n                        >\r\n                          {repoName}\r\n                        </a>\r\n                      </div>\r\n                      <span\r\n                        className=\"f6 text-gray-light no-wrap ml-1\"\r\n                        title={publishedAt}\r\n                      >\r\n                        {isoToRelative(publishedAt)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"ReleaseNotes Box p-3 mt-2 bg-gray\">\r\n                      <Markdown>{description}</Markdown>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  githubError: state.releases.githubError,\r\n  loading: state.releases.loading,\r\n  lastUpdated: state.releases.lastUpdated,\r\n  releases: state.releases.releases\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestReleases: (repoIds, token) =>\r\n    dispatch(actions.requestReleases(repoIds, token))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Releases);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\r\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\r\nexport const TOGGLE_HIDE_WITHOUT_REQUEST = \"TOGGLE_HIDE_WITHOUT_REQUEST\";\r\nexport const REQUEST_VIEWER_INFO = \"REQUEST_VIEWER_INFO\";\r\nexport const REQUEST_VIEWER_INFO_LOADING = \"REQUEST_VIEWER_INFO_LOADING\";\r\nexport const REQUEST_VIEWER_INFO_SUCCESS = \"REQUEST_VIEWER_INFO_SUCCESS\";\r\nexport const REQUEST_VIEWER_INFO_FAILURE = \"REQUEST_VIEWER_INFO_FAILURE\";\r\nexport const RESET_VIEWER_INFO = \"RESET_VIEWER_INFO\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleHideOld = () => ({\r\n  type: TOGGLE_HIDE_OLD\r\n});\r\n\r\nexport const setHideOldThreshold = threshold => ({\r\n  type: SET_HIDE_OLD_THRESHOLD,\r\n  threshold\r\n});\r\n\r\nexport const toggleHideWithoutRequest = () => ({\r\n  type: TOGGLE_HIDE_WITHOUT_REQUEST\r\n});\r\n\r\nexport const requestViewerInfoLoading = () => ({\r\n  type: REQUEST_VIEWER_INFO_LOADING\r\n});\r\n\r\nexport const requestViewerInfoSuccess = viewerInfo => ({\r\n  type: REQUEST_VIEWER_INFO_SUCCESS,\r\n  viewerInfo\r\n});\r\n\r\nexport const requestViewerInfoFailure = error => ({\r\n  type: REQUEST_VIEWER_INFO_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestViewerInfo = token => async dispatch => {\r\n  try {\r\n    dispatch(requestViewerInfoLoading());\r\n    const query = queries.viewerInfo();\r\n    const viewerInfo = await get(query, token);\r\n    dispatch(requestViewerInfoSuccess(viewerInfo.viewer));\r\n  } catch (err) {\r\n    dispatch(requestViewerInfoFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetViewerInfo = () => ({\r\n  type: RESET_VIEWER_INFO\r\n});\r\n","import { isEmpty } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nclass Account extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!this.props.token) {\r\n      this.props.resetViewerInfo();\r\n    }\r\n\r\n    if (this.props.token && isEmpty(this.props.viewerInfo)) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired,\r\n  viewerInfo: PropTypes.object.isRequired,\r\n  requestViewerInfo: PropTypes.func.isRequired,\r\n  resetViewerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(actions.setToken(value)),\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  resetViewerInfo: () => dispatch(actions.resetViewerInfo()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst PullRequests = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Pull requests</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh pull requests every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideOldEnabled}\r\n            onChange={props.toggleHideOld}\r\n          />{\" \"}\r\n          Hide pull requests older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.hideOldThreshold}\r\n            onChange={e => props.setHideOldThreshold(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideWithoutRequestEnabled}\r\n            onChange={props.toggleHideWithoutRequest}\r\n          />\r\n          Hide pull requests without a review request\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  hideOldEnabled: state.settings.hideOldEnabled,\r\n  hideOldThreshold: state.settings.hideOldThreshold,\r\n  hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\r\n  setHideOldThreshold: interval =>\r\n    dispatch(actions.setHideOldThreshold(interval)),\r\n  toggleHideWithoutRequest: () => dispatch(actions.toggleHideWithoutRequest()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PullRequests);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\nimport Blankslate from \"../common/blankslate\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetSelectedRepos();\r\n      this.props.resetWatchedRepos();\r\n    }\r\n\r\n    if (this.props.token && !this.props.selectedRepos.length) {\r\n      this.props.requestWatchedRepos(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to track.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {githubError ? (\r\n            <Blankslate>\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && !watchedRepos.length ? (\r\n            <Blankslate>\r\n              <p>You are not watching any repositories currently.</p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string,\r\n  resetWatchedRepos: PropTypes.func\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  resetWatchedRepos: () => dispatch(watchedReposActions.resetWatchedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\nexport const RESET_WATCHED_REPOS = \"RESET_WATCHED_REPOS\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetWatchedRepos = () => ({\r\n  type: RESET_WATCHED_REPOS\r\n});\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  GitPullRequest as GitPullRequestIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport PullRequests from \"./pulls\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to={{ pathname: \"/\", state: { refresh: true } }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/pulls`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={GitPullRequestIcon} /> Pull requests\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/pulls`} component={PullRequests} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/pulls`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst DEFAULT_AVATAR_URL =\r\n  \"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\";\r\n\r\nclass Avatar extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (isEmpty(this.props.viewerInfo) && this.props.token) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { viewerInfo, loading, githubError } = this.props;\r\n    const avatarUrl =\r\n      !loading && !githubError && viewerInfo.avatarUrl\r\n        ? viewerInfo.avatarUrl\r\n        : DEFAULT_AVATAR_URL;\r\n\r\n    return (\r\n      <Link to=\"/settings/account\">\r\n        <img\r\n          className=\"avatar avatar-small\"\r\n          src={avatarUrl}\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo,\r\n  githubError: state.settings.githubError,\r\n  loading: state.settings.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Avatar);\r\n","import React from \"react\";\r\nimport { Link, NavLink, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"../../node_modules/@primer/css/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport PullRequests from \"./pulls\";\r\nimport Releases from \"./releases\";\r\nimport Settings from \"./settings\";\r\nimport Avatar from \"./common/avatar\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto d-flex flex-items-baseline\">\r\n          <h1 className=\"h2\">\r\n            <Link to=\"/\" className=\"text-white no-underline\">\r\n              GitObserve\r\n            </Link>\r\n          </h1>\r\n          <nav>\r\n            <NavLink\r\n              to=\"/pulls\"\r\n              className=\"ml-4 f4 text-white\"\r\n              activeClassName=\"text-underline\"\r\n            >\r\n              Pull requests\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/releases\"\r\n              className=\"ml-3 f4 text-white\"\r\n              activeClassName=\"text-underline\"\r\n            >\r\n              Releases\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <Avatar />\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route path=\"/pulls\" component={PullRequests} />\r\n      <Route path=\"/releases\" component={Releases} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={({ location: { state } }) => (\r\n          <Redirect to={{ pathname: \"/pulls\", state }} />\r\n        )}\r\n      />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/pulls\";\r\n\r\nconst initialState = {\r\n  pulls: [],\r\n  lastUpdated: null,\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\",\r\n    searchQuery: \"\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst REVIEW_STATES = {\r\n  // Expected values from GitHub:\r\n  PENDING: \"PENDING\",\r\n  COMMENTED: \"COMMENTED\",\r\n  APPROVED: \"APPROVED\",\r\n  CHANGES_REQUESTED: \"CHANGES_REQUESTED\",\r\n  DISMISSED: \"DISMISSED\",\r\n  // Additional (custom) values:\r\n  REVIEW_REQUESTED: \"REVIEW_REQUESTED\",\r\n  NO_REQUEST: \"NO_REQUEST\"\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getLatestReviewState = (reviews, reviewRequests) => {\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = REVIEW_STATES.REVIEW_REQUESTED;\r\n    } else {\r\n      state = REVIEW_STATES.NO_REQUEST;\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst getApprovalsCount = reviews => {\r\n  let count = 0;\r\n  if (reviews.length) {\r\n    count = reviews.filter(r => r.state === REVIEW_STATES.APPROVED).length;\r\n  }\r\n  return count;\r\n};\r\n\r\nconst formatPrs = (newPrs, oldPrs) => {\r\n  const oldPrsById = map(oldPrs, \"id\");\r\n\r\n  return chain(newPrs.nodes)\r\n    .filter(node => node)\r\n    .map(node => map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => {\r\n      const reviews = map(pr.reviews.edges, \"node\");\r\n      const reviewRequests = map(pr.reviewRequests.edges, \"node\");\r\n      return {\r\n        ...pr,\r\n        reviews,\r\n        reviewRequests,\r\n        repoName: pr.repository.nameWithOwner,\r\n        reviewState: getLatestReviewState(reviews, reviewRequests),\r\n        approvals: getApprovalsCount(reviews),\r\n        isNew: !oldPrsById.includes(pr.id)\r\n      };\r\n    })\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pulls: formatPrs(action.newPrs, action.oldPrs),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pulls: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_PULL_REQUESTS:\r\n      return {\r\n        ...state,\r\n        pulls: [],\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/releases\";\r\n\r\nconst initialState = {\r\n  releases: [],\r\n  lastUpdated: null,\r\n  loading: false,\r\n  githubError: false\r\n};\r\n\r\nconst formatReleases = data =>\r\n  chain(data.nodes)\r\n    .map(node => {\r\n      const { name: repoName, url: repoUrl } = node;\r\n      return {\r\n        ...node,\r\n        releases: map(node.releases.edges, ({ node }) => ({\r\n          ...node,\r\n          repoName,\r\n          repoUrl\r\n        }))\r\n      };\r\n    })\r\n    .map(node => node.releases)\r\n    .flatten()\r\n    .orderBy(\"publishedAt\")\r\n    .reverse()\r\n    .value();\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_RELEASES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: false\r\n      };\r\n    case actions.REQUEST_RELEASES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        releases: formatReleases(action.data),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: false\r\n      };\r\n    case actions.REQUEST_RELEASES_FAILURE:\r\n      return {\r\n        ...state,\r\n        releases: [],\r\n        loading: false,\r\n        githubError: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  hideOldEnabled: false,\r\n  hideOldThreshold: 30,\r\n  hideWithoutRequest: false,\r\n  viewerInfo: {},\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_HIDE_OLD:\r\n      return {\r\n        ...state,\r\n        hideOldEnabled: !state.hideOldEnabled\r\n      };\r\n    case actions.SET_HIDE_OLD_THRESHOLD:\r\n      return {\r\n        ...state,\r\n        hideOldThreshold: action.threshold\r\n      };\r\n    case actions.TOGGLE_HIDE_WITHOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        hideWithoutRequestEnabled: !state.hideWithoutRequestEnabled\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        viewerInfo: action.viewerInfo,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_FAILURE:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {},\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_VIEWER_INFO:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n    case actions.RESET_WATCHED_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport pulls from \"./pulls\";\r\nimport releases from \"./releases\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pulls,\r\n  releases,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      pulls: store.getState().pulls,\r\n      releases: store.getState().releases,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}