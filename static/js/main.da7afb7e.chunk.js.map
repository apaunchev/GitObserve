{"version":3,"sources":["reducers/dashboard.js","githubApi.js","actions/dashboard.js","components/PullRequest.js","components/Dashboard.js","components/Account.js","actions/settings.js","components/Repositories.js","actions/watchedRepos.js","components/Settings.js","components/NotFound.js","components/App.js","components/Root.js","reducers/watchedRepos.js","reducers/settings.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["pullRequests","get","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","this","_x","_x2","apply","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","watchedRepos","type","STALENESS","label","classNames","PullRequest","number","title","url","createdAt","updatedAt","author","repository","now","Date","staleness","date","difference","differenceInDays","getStaleness","react_default","createElement","className","avatarUrl","src","width","height","alt","href","nameWithOwner","formatDistance","login","aria-label","Dashboard","state","sortField","sortDirection","props","selectedRepos","requestPullRequests","_this$state","_this$props","loading","githubError","sortedPullRequests","sort","b","dateA","dateB","Fragment","Link","to","index_esm","icon","SettingsIcon","GitPullRequestIcon","size","RepoIcon","onClick","SyncIcon","map","pr","components_PullRequest","assign","key","id","React","PureComponent","connect","settings","dashboard","dispatch","getState","results","repos","t0","error","Account","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","createRef","_this2","setToken","target","rel","placeholder","ref","onChange","current","value","Component","settingsActions","Repositories","requestWatchedRepos","selectAllRepos","resetSelectedRepos","toggleRepoSelection","repo","name","htmlId","checked","includes","LinkExternalIcon","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","Settings","match","CloudUploadIcon","NavLink","activeClassName","PersonIcon","Switch","Route","exact","path","render","Redirect","component","NotFound","App","Root","store","es","BrowserRouter","basename","process","initialState","rootReducer","combineReducers","action","objectSpread","nodes","filter","edge","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","components_Root","document","getElementById"],"mappings":"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","file":"static/js/main.da7afb7e.chunk.js","sourcesContent":["import * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nlet pullRequests;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      pullRequests = action.data.nodes\r\n        .filter(node => node)\r\n        .map(node => node.pullRequests.edges.map(edge => edge.node));\r\n      pullRequests = [].concat(...pullRequests);\r\n\r\n      return {\r\n        ...state,\r\n        pullRequests,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n            orderBy: { field: CREATED_AT, direction: DESC }\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl\r\n                  login\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (data, watchedRepos) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  data,\r\n  watchedRepos\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const watchedRepos = getState().watchedRepos.repos;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const results = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(results, watchedRepos));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { formatDistance, differenceInDays } from \"date-fns\";\r\n\r\nconst STALENESS = {\r\n  FRESH: {\r\n    label: \"Fresh\",\r\n    classNames: \"bg-green\"\r\n  },\r\n  STALE: {\r\n    label: \"Stale\",\r\n    classNames: \"bg-purple\"\r\n  }\r\n};\r\n\r\nconst getStaleness = date => {\r\n  const difference = differenceInDays(new Date(date), new Date());\r\n  if (difference >= -7) {\r\n    return STALENESS.FRESH;\r\n  }\r\n  if (difference <= -30) {\r\n    return STALENESS.STALE;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  repository\r\n}) => {\r\n  const now = new Date();\r\n  const staleness = getStaleness(updatedAt);\r\n\r\n  return (\r\n    <div className=\"Box-row Box-row--hover-gray d-flex\">\r\n      {author.avatarUrl && (\r\n        <div>\r\n          <img\r\n            className=\"avatar\"\r\n            src={author.avatarUrl}\r\n            width=\"48\"\r\n            height=\"48\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto px-3\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          #{number} opened{\" \"}\r\n          <span title={createdAt}>{formatDistance(createdAt, now)} ago</span> by{\" \"}\r\n          <a href={author.url} className=\"muted-link\">\r\n            {author.login}\r\n          </a>\r\n          {staleness ? (\r\n            <span\r\n              className={`d-inline-block ml-2 label box-shadow-none text-normal rounded-1 f6 tooltipped tooltipped-sw ${\r\n                staleness.classNames\r\n              }`}\r\n              aria-label={`Last updated ${formatDistance(updatedAt, now)} ago`}\r\n            >\r\n              {staleness.label}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PullRequest;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon,\r\n  GitPullRequest as GitPullRequestIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { requestPullRequests } from \"../actions/dashboard\";\r\nimport PullRequest from \"./PullRequest\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  state = {\r\n    sortField: \"updatedAt\",\r\n    sortDirection: \"desc\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      this.props.requestPullRequests(\r\n        this.props.selectedRepos,\r\n        this.props.token\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sortField, sortDirection } = this.state;\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token\r\n    } = this.props;\r\n\r\n    let sortedPullRequests = [];\r\n    if (pullRequests.length > 0) {\r\n      sortedPullRequests = pullRequests.sort((a, b) => {\r\n        const dateA = new Date(a[sortField]);\r\n        const dateB = new Date(b[sortField]);\r\n\r\n        if (sortDirection === \"desc\") {\r\n          return dateB - dateA;\r\n        } else {\r\n          return dateA - dateB;\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            <div className=\"Box\">\r\n              <div className=\"Box-header d-flex flex-items-center\">\r\n                <div className=\"flex-auto d-flex flex-items-center\">\r\n                  <span className=\"d-inline-flex flex-items-center mr-3 text-bold\">\r\n                    <Octicon\r\n                      icon={GitPullRequestIcon}\r\n                      size={20}\r\n                      className=\"pr-1\"\r\n                    />\r\n                    {pullRequests.length} Pull Requests\r\n                  </span>\r\n                  <span className=\"d-inline-flex flex-items-center text-bold\">\r\n                    <Octicon icon={RepoIcon} size={20} className=\"pr-1\" />\r\n                    {selectedRepos.length} Repositories\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={() => requestPullRequests(selectedRepos, token)}\r\n                >\r\n                  <Octicon icon={SyncIcon} /> Sync\r\n                </button>\r\n              </div>\r\n\r\n              {!selectedRepos.length ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    You have not <Link to=\"/settings\">selected</Link> any\r\n                    repositories yet.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 && loading ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>Loading...</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 && githubError ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    Error fetching data from GitHub. Ensure your{\" \"}\r\n                    <Link to=\"/settings/account\">token</Link> is set correctly\r\n                    and try again.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 &&\r\n              !loading &&\r\n              !githubError &&\r\n              !pullRequests.length ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    No pull requests were found for your{\" \"}\r\n                    <Link to=\"/settings\">selected repositories</Link>.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {!loading && !githubError && sortedPullRequests.length\r\n                ? sortedPullRequests.map(pr => (\r\n                    <PullRequest key={pr.id} {...pr} />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          Add a Personal Access Token in order to access repositories data from\r\n          GitHub's API.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Sync as SyncIcon,\r\n  LinkExternal as LinkExternalIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport * as settingsActions from \"../actions/settings\";\r\nimport * as watchedReposActions from \"../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.requestWatchedRepos(this.props.token);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n              >\r\n                <Octicon icon={SyncIcon} /> Sync\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link, NavLink, Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport Account from \"./Account\";\r\nimport Repositories from \"./Repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/account`} />}\r\n            />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Settings from \"./Settings\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nimport \"../../node_modules/primer/build/build.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router basename={\"/gitobserve\"}>\r\n      <Route path={`${process.env.PUBLIC_URL}/`} component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  selectedRepos: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport watchedRepos from \"./watchedRepos\";\r\nimport settings from \"./settings\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/Root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState } from \"./localStorage\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}