{"version":3,"sources":["Avatar/queries.js","Avatar/index.js","Repository/RepositoryItem/index.js","Issue/IssueItem/index.js","Loading/index.js","FetchMore/index.js","Error/index.js","Issue/IssueList/queries.js","Issue/IssueList/index.js","Repository/RepositoryList/index.js","WatchingRepositories/queries.js","WatchingRepositories/index.js","consts.js","App/index.js","index.js"],"names":["GET_AVATAR","gql","_templateObject","Avatar","react_default","a","createElement","react_apollo_browser_umd","query","_ref","data","viewer","className","src","avatarUrl","width","height","alt","dayjs","extend","relativeTime","RepositoryItem","name","pushedAt","url","descriptionHTML","Fragment","href","dangerouslySetInnerHTML","__html","title","fromNow","IssueItem","issue","author","login","createdAt","Loading","Array","fill","map","item","index","key","FetchMore","loading","hasNextPage","variables","updateQuery","fetchMore","children","src_Loading","disabled","onClick","ErrorMessage","error","toString","GET_ISSUES_OF_REPOSITORY","queries_templateObject","GET_PULL_REQUESTS_OF_REPOSITORY","_templateObject2","getUpdateQuery","entry","previousResult","fetchMoreResult","Object","objectSpread","repository","defineProperty","edges","toConsumableArray","concat","IssueList","_ref4","issues","repositoryOwner","repositoryName","_ref5","node","Issue_IssueItem","id","src_FetchMore","pageInfo","cursor","endCursor","Issues","_ref2","notifyOnNetworkStatusChange","_ref3","Error","length","IssueList_IssueList","watching","RepositoryList","repositories","Repository_RepositoryItem","totalCount","Issue_IssueList","owner","pullRequests","GET_WATCHING_REPOSITORIES","WatchingRepositories_queries_templateObject","WatchingRepositories","Repository_RepositoryList","STATUS","INITIAL","LOADING","AUTHENTICATED","LOCAL_STORAGE_KEY","App","state","status","_this2","this","localStorage","getItem","setState","code","window","location","match","authenticate","_this3","axios","get","process","then","token","setItem","catch","console","src_Avatar","src_WatchingRepositories","Component","httpLink","HttpLink","uri","headers","authorization","errorLink","onError","graphQLErrors","networkError","message","locations","path","log","link","ApolloLink","from","cache","InMemoryCache","client","ApolloClient","ReactDOM","render","src_App","document","getElementById"],"mappings":"kfAEO,IAAMA,EAAaC,IAAHC,KC6BRC,UAxBA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOC,MAAOR,GACX,SAAAS,GAAc,IAAXC,EAAWD,EAAXC,KACF,OAAOA,GAAQA,EAAKC,OAClBP,EAAAC,EAAAC,cAAA,OACEM,UAAU,SACVC,IAAKH,EAAKC,OAAOG,UACjBC,MAAO,GACPC,OAAQ,GACRC,IAAI,WAGNb,EAAAC,EAAAC,cAAA,OACEM,UAAU,SACVC,IAAI,aACJE,MAAO,GACPC,OAAQ,GACRC,IAAI,wEClBdC,IAAMC,OAAOC,KAEb,IAgBeC,EAhBQ,SAAAZ,GAAA,IAAGa,EAAHb,EAAGa,KAAMC,EAATd,EAASc,SAAUC,EAAnBf,EAAmBe,IAAKC,EAAxBhB,EAAwBgB,gBAAxB,OACrBrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGqB,KAAMH,GAAMF,IAEjBlB,EAAAC,EAAAC,cAAA,OAAKsB,wBAAyB,CAAEC,OAAQJ,KACxCrB,EAAAC,EAAAC,cAAA,SACGiB,GACCnB,EAAAC,EAAAC,cAAA,uBACUF,EAAAC,EAAAC,cAAA,QAAMwB,MAAOP,GAAWL,IAAMK,GAAUQ,uBCb1Db,IAAMC,OAAOC,KAEb,IAkBeY,EAlBG,SAAAvB,GAAA,IAAGwB,EAAHxB,EAAGwB,MAAH,OAChB7B,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aACZR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGqB,KAAMM,EAAMT,KAAMS,EAAMH,QAE7B1B,EAAAC,EAAAC,cAAA,SACG2B,EAAMC,QACL9B,EAAAC,EAAAC,cAAA,yBACYF,EAAAC,EAAAC,cAAA,KAAGqB,KAAMM,EAAMC,OAAOV,KAAMS,EAAMC,OAAOC,QAGtDF,EAAMG,WACLhC,EAAAC,EAAAC,cAAA,QAAMwB,MAAOG,EAAMG,WAAnB,IAAgClB,IAAMe,EAAMG,WAAWL,cCFhDM,EAdC,kBACdjC,EAAAC,EAAAC,cAAA,MAAIM,UAAU,kBACX0B,MAAM,IACJC,KAAK,IACLC,IAAI,SAACC,EAAMC,GAAP,OACHtC,EAAAC,EAAAC,cAAA,MAAIqC,IAAKD,EAAO9B,UAAU,6CACxBR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oCACfR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oCACfR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yCCiBVgC,EAvBG,SAAAnC,GAAA,IAChBoC,EADgBpC,EAChBoC,QACAC,EAFgBrC,EAEhBqC,YACAC,EAHgBtC,EAGhBsC,UACAC,EAJgBvC,EAIhBuC,YACAC,EALgBxC,EAKhBwC,UACAC,EANgBzC,EAMhByC,SANgB,OAQhB9C,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACZiC,EACCzC,EAAAC,EAAAC,cAAC6C,EAAD,MAEA/C,EAAAC,EAAAC,cAAA,UACEM,UAAU,4BACVwC,UAAWN,EACXO,QAAS,kBAAMJ,EAAU,CAAEF,YAAWC,kBAHxC,QAKQE,KCbCI,EANM,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,MAAH,OACnBnD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACbR,EAAAC,EAAAC,cAAA,aAAQiD,EAAMC,gqCCFX,IAAMC,EAA2BxD,IAAHyD,KAyBxBC,EAAkC1D,IAAH2D,KCZtCC,UAAiB,SAAAC,GAAK,OAAI,SAACC,EAADtD,GAAyC,IAAtBuD,EAAsBvD,EAAtBuD,gBACjD,OAAKA,EAIEC,OAAAC,EAAA,EAAAD,CAAA,GACFF,EADL,CAEEI,WAAWF,OAAAC,EAAA,EAAAD,CAAA,GACNF,EAAeI,WADVF,OAAAG,EAAA,EAAAH,CAAA,GAEPH,EAFOG,OAAAC,EAAA,EAAAD,CAAA,GAGHF,EAAeI,WAAWL,GAC1BE,EAAgBG,WAAWL,GAJxB,CAKNO,MAAMJ,OAAAK,EAAA,EAAAL,CACDF,EAAeI,WAAWL,GAAOO,OADjCE,OAAAN,OAAAK,EAAA,EAAAL,CAEAD,EAAgBG,WAAWL,GAAOO,cAZpCN,KA+DLS,EAAY,SAAAC,GAAA,IAChBC,EADgBD,EAChBC,OACA7B,EAFgB4B,EAEhB5B,QACA8B,EAHgBF,EAGhBE,gBACAC,EAJgBH,EAIhBG,eACA3B,EALgBwB,EAKhBxB,UACAa,EANgBW,EAMhBX,MANgB,OAQhB1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aACX8D,EAAOL,MAAM7B,IAAI,SAAAqC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChB1E,EAAAC,EAAAC,cAACyE,EAAD,CACEpC,IAAKmC,EAAKE,GACV/C,MAAO6C,EACPH,gBAAiBA,EACjBC,eAAgBA,OAKtBxE,EAAAC,EAAAC,cAAC2E,EAAD,CACEpC,QAASA,EACTC,YAAa4B,EAAOQ,SAASpC,YAC7BC,UAAW,CACToC,OAAQT,EAAOQ,SAASE,UACxBT,kBACAC,kBAEF5B,YAAaa,EAAeC,GAC5Bb,UAAWA,MAKFoC,EA9EA,SAAAC,GAAA,IAAGX,EAAHW,EAAGX,gBAAiBC,EAApBU,EAAoBV,eAAgBd,EAApCwB,EAAoCxB,MAApC,OACb1D,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACbR,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEC,MACY,WAAVsD,EACIL,EACAE,EAENZ,UAAW,CACT4B,kBACAC,kBAEFW,6BAA6B,GAE5B,SAAAC,GAAyC,IAAtC9E,EAAsC8E,EAAtC9E,KAAMmC,EAAgC2C,EAAhC3C,QAASU,EAAuBiC,EAAvBjC,MAAON,EAAgBuC,EAAhBvC,UACxB,GAAIM,EACF,OAAOnD,EAAAC,EAAAC,cAACmF,EAAD,CAAclC,MAAOA,IAFU,IAKhCY,EAAezD,EAAfyD,WAER,OAAItB,IAAYsB,EACP/D,EAAAC,EAAAC,cAAC6C,EAAD,MAGJgB,EAAWL,GAAOO,MAAMqB,OAK3BtF,EAAAC,EAAAC,cAACqF,EAAD,CACEjB,OAAQP,EAAWL,GACnBjB,QAASA,EACT8B,gBAAiBA,EACjBC,eAAgBA,EAChB3B,UAAWA,EACXa,MAAOA,IAVF1D,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aAAf,wBCtDXoC,UAAc,SAACe,EAADtD,GAAyC,IAAtBuD,EAAsBvD,EAAtBuD,gBACrC,OAAKA,EAIEC,OAAAC,EAAA,EAAAD,CAAA,GACFF,EADL,CAEEpD,OAAOsD,OAAAC,EAAA,EAAAD,CAAA,GACFF,EAAepD,OADd,CAEJiF,SAAS3B,OAAAC,EAAA,EAAAD,CAAA,GACJF,EAAepD,OAAOiF,SACtB5B,EAAgBrD,OAAOiF,SAFpB,CAGNvB,MAAMJ,OAAAK,EAAA,EAAAL,CACDF,EAAepD,OAAOiF,SAASvB,OAD/BE,OAAAN,OAAAK,EAAA,EAAAL,CAEAD,EAAgBrD,OAAOiF,SAASvB,cAZlCN,IAwDI8B,EArCQ,SAAAP,GAAA,IAAGzC,EAAHyC,EAAGzC,QAASiD,EAAZR,EAAYQ,aAAc7C,EAA1BqC,EAA0BrC,UAA1B,OACrB7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,kBACXkF,EAAazB,MAAM7B,IAAI,SAAAgD,GAAA,IAAGV,EAAHU,EAAGV,KAAH,OACtB1E,EAAAC,EAAAC,cAAA,MAAIqC,IAAKmC,EAAKE,GAAIpE,UAAU,kBAC1BR,EAAAC,EAAAC,cAACyF,EAAmBjB,GACpB1E,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,0BAAkBwE,EAAKJ,OAAOsB,WAA9B,KACA5F,EAAAC,EAAAC,cAAC2F,EAAD,CACEnC,MAAO,SACPc,eAAgBE,EAAKxD,KACrBqD,gBAAiBG,EAAKoB,MAAM/D,SAGhC/B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,iCAAyBwE,EAAKqB,aAAaH,WAA3C,KACA5F,EAAAC,EAAAC,cAAC2F,EAAD,CACEnC,MAAO,eACPc,eAAgBE,EAAKxD,KACrBqD,gBAAiBG,EAAKoB,MAAM/D,aAMtC/B,EAAAC,EAAAC,cAAC2E,EAAD,CACEpC,QAASA,EACTC,YAAagD,EAAaZ,SAASpC,YACnCC,UAAW,CACToC,OAAQW,EAAaZ,SAASE,WAEhCpC,YAAaA,EACbC,UAAWA,uuBC3DV,IAAMmD,EAA4BnG,IAAHoG,KCwBvBC,EAjBc,kBAC3BlG,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOC,MAAO4F,EAA2Bb,6BAA6B,GACnE,SAAA9E,GAAyC,IAAtCC,EAAsCD,EAAtCC,KAAMmC,EAAgCpC,EAAhCoC,QAASU,EAAuB9C,EAAvB8C,MAAON,EAAgBxC,EAAhBwC,UACxB,OAAIM,EAAcnD,EAAAC,EAAAC,cAACmF,EAAD,CAAclC,MAAOA,IACnCV,IAAYnC,EAAKC,OAAeP,EAAAC,EAAAC,cAAC6C,EAAD,MAGlC/C,EAAAC,EAAAC,cAACiG,EAAD,CACE1D,QAASA,EACTiD,aAAcpF,EAAKC,OAAOiF,SAC1B3C,UAAWA,OCZRuD,EAAS,CACpBC,QAAS,UACTC,QAAS,UACTC,cAAe,iBAGJC,EACG,eCgEDC,4NA1DbC,MAAQ,CACNC,OAAQP,EAAOC,4FAGG,IAAAO,EAAAC,KAElB,GADoBC,aAAaC,QAAQP,GAEvCK,KAAKG,SAAS,CAAEL,OAAQP,EAAOG,oBADjC,CAKA,IAAMU,EACJC,OAAOC,SAAS5F,KAAK6F,MAAM,gBAC3BF,OAAOC,SAAS5F,KAAK6F,MAAM,eAAe,GACxCH,GACFJ,KAAKG,SAAS,CAAEL,OAAQP,EAAOE,SAAW,kBAAMM,EAAKS,aAAaJ,2CAIzDA,GAAM,IAAAK,EAAAT,KACjBU,IACGC,IADH,GAAArD,ODtCwBsD,oDCsCxB,KAAAtD,OAC0B8C,IACvBS,KAAK,SAAArH,GAAyB,IAAdsH,EAActH,EAAtBC,KAAQqH,MACXA,IACFb,aAAac,QAAQpB,EAAgCmB,GACrDL,EAAKN,SAAS,CAAEW,QAAOhB,OAAQP,EAAOG,mBAGzCsB,MAAM,SAAA1E,GAAK,OAAI2E,QAAQ3E,MAAR,+BAAAgB,OAA6ChB,uCAGxD,IACCwD,EAAWE,KAAKH,MAAhBC,OAER,OACE3G,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,UAAQM,UAAU,UAChBR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QAAf,cACAR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACZmG,IAAWP,EAAOC,SACjBrG,EAAAC,EAAAC,cAAA,KACEqB,KAAI,GAAA4C,ODzDY,2CCyDZ,eAAAA,OD7DKsD,uBC6DL,iDAAAtD,OD5DQsD,0BC2Dd,SAMDd,IAAWP,EAAOG,eAAiBvG,EAAAC,EAAAC,cAAC6H,EAAD,QAGxC/H,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACZmG,IAAWP,EAAOE,SAAWtG,EAAAC,EAAAC,cAAC6C,EAAD,MAC7B4D,IAAWP,EAAOG,eAAiBvG,EAAAC,EAAAC,cAAC8H,EAAD,eApD5BC,cCNZC,EAAW,IAAIC,IAAS,CAC5BC,IAHsB,iCAItBC,QAAS,CACPC,cAAa,qDAIXC,GAAYC,YAAQ,SAAAnI,GAAqC,IAAlCoI,EAAkCpI,EAAlCoI,cAAeC,EAAmBrI,EAAnBqI,aACtCD,GACFA,EAAcrG,IAAI,SAAA8C,GAAA,IAAGyD,EAAHzD,EAAGyD,QAASC,EAAZ1D,EAAY0D,UAAWC,EAAvB3D,EAAuB2D,KAAvB,OAChBf,QAAQgB,IAAR,6BAAA3E,OAC+BwE,EAD/B,gBAAAxE,OACqDyE,EADrD,YAAAzE,OACyE0E,MAKzEH,GACFZ,QAAQgB,IAAR,oBAAA3E,OAAgCuE,MAI9BK,GAAOC,IAAWC,KAAK,CAACV,GAAWL,IAEnCgB,GAAQ,IAAIC,IAEZC,GAAS,IAAIC,IAAa,CAC9BN,QACAG,WAGFI,IAASC,OACPvJ,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBiJ,OAAQA,IACtBpJ,EAAAC,EAAAC,cAACsJ,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.6675d8b4.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const GET_AVATAR = gql`\r\n  query {\r\n    viewer {\r\n      avatarUrl\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { GET_AVATAR } from \"./queries\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Avatar = () => (\r\n  <Query query={GET_AVATAR}>\r\n    {({ data }) => {\r\n      return data && data.viewer ? (\r\n        <img\r\n          className=\"Avatar\"\r\n          src={data.viewer.avatarUrl}\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      ) : (\r\n        <img\r\n          className=\"Avatar\"\r\n          src=\"avatar.png\"\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default Avatar;\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst RepositoryItem = ({ name, pushedAt, url, descriptionHTML }) => (\r\n  <>\r\n    <h3>\r\n      <a href={url}>{name}</a>\r\n    </h3>\r\n    <div dangerouslySetInnerHTML={{ __html: descriptionHTML }} />\r\n    <p>\r\n      {pushedAt && (\r\n        <span>\r\n          Updated <span title={pushedAt}>{dayjs(pushedAt).fromNow()}</span>\r\n        </span>\r\n      )}\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default RepositoryItem;\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport React from \"react\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nconst IssueItem = ({ issue }) => (\r\n  <li className=\"IssueItem\">\r\n    <h5>\r\n      <a href={issue.url}>{issue.title}</a>\r\n    </h5>\r\n    <p>\r\n      {issue.author && (\r\n        <span>\r\n          Opened by <a href={issue.author.url}>{issue.author.login}</a>\r\n        </span>\r\n      )}\r\n      {issue.createdAt && (\r\n        <span title={issue.createdAt}> {dayjs(issue.createdAt).fromNow()}</span>\r\n      )}\r\n    </p>\r\n  </li>\r\n);\r\n\r\nexport default IssueItem;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => (\r\n  <ol className=\"RepositoryList\">\r\n    {Array(10)\r\n      .fill(\"\")\r\n      .map((item, index) => (\r\n        <li key={index} className=\"RepositoryItem RepositoryItem-placeholder\">\r\n          <div className=\"RepositoryItem-placeholder-name\" />\r\n          <div className=\"RepositoryItem-placeholder-text\" />\r\n          <div className=\"RepositoryItem-placeholder-text\" />\r\n        </li>\r\n      ))}\r\n  </ol>\r\n);\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nimport Loading from \"../Loading\";\r\n\r\nconst FetchMore = ({\r\n  loading,\r\n  hasNextPage,\r\n  variables,\r\n  updateQuery,\r\n  fetchMore,\r\n  children\r\n}) => (\r\n  <div className=\"FetchMore\">\r\n    {loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <button\r\n        className=\"btn btn-outline btn-block\"\r\n        disabled={!hasNextPage}\r\n        onClick={() => fetchMore({ variables, updateQuery })}\r\n      >\r\n        More {children}\r\n      </button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default FetchMore;\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ error }) => (\r\n  <div className=\"ErrorMessage\">\r\n    <small>{error.toString()}</small>\r\n  </div>\r\n);\r\n\r\nexport default ErrorMessage;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_ISSUES_OF_REPOSITORY = gql`\r\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\r\n    repository(name: $repositoryName, owner: $repositoryOwner) {\r\n      issues(first: 5, states: [OPEN], after: $cursor) {\r\n        edges {\r\n          node {\r\n            id\r\n            title\r\n            url\r\n            bodyHTML\r\n            author {\r\n              login\r\n              url\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PULL_REQUESTS_OF_REPOSITORY = gql`\r\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\r\n    repository(name: $repositoryName, owner: $repositoryOwner) {\r\n      pullRequests(first: 5, states: [OPEN], after: $cursor) {\r\n        edges {\r\n          node {\r\n            id\r\n            title\r\n            url\r\n            bodyHTML\r\n            author {\r\n              login\r\n              url\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport IssueItem from \"../IssueItem\";\r\nimport FetchMore from \"../../FetchMore\";\r\nimport ErrorMessage from \"../../Error\";\r\nimport Loading from \"../../Loading\";\r\n\r\nimport {\r\n  GET_ISSUES_OF_REPOSITORY,\r\n  GET_PULL_REQUESTS_OF_REPOSITORY\r\n} from \"./queries\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst getUpdateQuery = entry => (previousResult, { fetchMoreResult }) => {\r\n  if (!fetchMoreResult) {\r\n    return previousResult;\r\n  }\r\n\r\n  return {\r\n    ...previousResult,\r\n    repository: {\r\n      ...previousResult.repository,\r\n      [entry]: {\r\n        ...previousResult.repository[entry],\r\n        ...fetchMoreResult.repository[entry],\r\n        edges: [\r\n          ...previousResult.repository[entry].edges,\r\n          ...fetchMoreResult.repository[entry].edges\r\n        ]\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst Issues = ({ repositoryOwner, repositoryName, entry }) => (\r\n  <div className=\"Issues\">\r\n    <Query\r\n      query={\r\n        entry === \"issues\"\r\n          ? GET_ISSUES_OF_REPOSITORY\r\n          : GET_PULL_REQUESTS_OF_REPOSITORY\r\n      }\r\n      variables={{\r\n        repositoryOwner,\r\n        repositoryName\r\n      }}\r\n      notifyOnNetworkStatusChange={true}\r\n    >\r\n      {({ data, loading, error, fetchMore }) => {\r\n        if (error) {\r\n          return <ErrorMessage error={error} />;\r\n        }\r\n\r\n        const { repository } = data;\r\n\r\n        if (loading && !repository) {\r\n          return <Loading />;\r\n        }\r\n\r\n        if (!repository[entry].edges.length) {\r\n          return <div className=\"IssueList\">No issues found.</div>;\r\n        }\r\n\r\n        return (\r\n          <IssueList\r\n            issues={repository[entry]}\r\n            loading={loading}\r\n            repositoryOwner={repositoryOwner}\r\n            repositoryName={repositoryName}\r\n            fetchMore={fetchMore}\r\n            entry={entry}\r\n          />\r\n        );\r\n      }}\r\n    </Query>\r\n  </div>\r\n);\r\n\r\nconst IssueList = ({\r\n  issues,\r\n  loading,\r\n  repositoryOwner,\r\n  repositoryName,\r\n  fetchMore,\r\n  entry\r\n}) => (\r\n  <>\r\n    <ol className=\"IssueList\">\r\n      {issues.edges.map(({ node }) => (\r\n        <IssueItem\r\n          key={node.id}\r\n          issue={node}\r\n          repositoryOwner={repositoryOwner}\r\n          repositoryName={repositoryName}\r\n        />\r\n      ))}\r\n    </ol>\r\n\r\n    <FetchMore\r\n      loading={loading}\r\n      hasNextPage={issues.pageInfo.hasNextPage}\r\n      variables={{\r\n        cursor: issues.pageInfo.endCursor,\r\n        repositoryOwner,\r\n        repositoryName\r\n      }}\r\n      updateQuery={getUpdateQuery(entry)}\r\n      fetchMore={fetchMore}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default Issues;\r\n","import React from \"react\";\r\n\r\nimport RepositoryItem from \"../RepositoryItem\";\r\nimport Issues from \"../../Issue/IssueList\";\r\nimport FetchMore from \"../../FetchMore\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst updateQuery = (previousResult, { fetchMoreResult }) => {\r\n  if (!fetchMoreResult) {\r\n    return previousResult;\r\n  }\r\n\r\n  return {\r\n    ...previousResult,\r\n    viewer: {\r\n      ...previousResult.viewer,\r\n      watching: {\r\n        ...previousResult.viewer.watching,\r\n        ...fetchMoreResult.viewer.watching,\r\n        edges: [\r\n          ...previousResult.viewer.watching.edges,\r\n          ...fetchMoreResult.viewer.watching.edges\r\n        ]\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst RepositoryList = ({ loading, repositories, fetchMore }) => (\r\n  <>\r\n    <ol className=\"RepositoryList\">\r\n      {repositories.edges.map(({ node }) => (\r\n        <li key={node.id} className=\"RepositoryItem\">\r\n          <RepositoryItem {...node} />\r\n          <details>\r\n            <summary>Issues ({node.issues.totalCount})</summary>\r\n            <Issues\r\n              entry={\"issues\"}\r\n              repositoryName={node.name}\r\n              repositoryOwner={node.owner.login}\r\n            />\r\n          </details>\r\n          <details>\r\n            <summary>Pull Requests ({node.pullRequests.totalCount})</summary>\r\n            <Issues\r\n              entry={\"pullRequests\"}\r\n              repositoryName={node.name}\r\n              repositoryOwner={node.owner.login}\r\n            />\r\n          </details>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n    <FetchMore\r\n      loading={loading}\r\n      hasNextPage={repositories.pageInfo.hasNextPage}\r\n      variables={{\r\n        cursor: repositories.pageInfo.endCursor\r\n      }}\r\n      updateQuery={updateQuery}\r\n      fetchMore={fetchMore}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default RepositoryList;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_WATCHING_REPOSITORIES = gql`\r\n  query($cursor: String) {\r\n    viewer {\r\n      watching(\r\n        first: 10\r\n        after: $cursor\r\n        orderBy: { field: PUSHED_AT, direction: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            pushedAt\r\n            url\r\n            descriptionHTML\r\n            owner {\r\n              login\r\n              url\r\n            }\r\n            issues(states: [OPEN]) {\r\n              totalCount\r\n            }\r\n            pullRequests(states: [OPEN]) {\r\n              totalCount\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport RepositoryList from \"../Repository/RepositoryList\";\r\nimport Loading from \"../Loading\";\r\nimport ErrorMessage from \"../Error\";\r\n\r\nimport { GET_WATCHING_REPOSITORIES } from \"./queries\";\r\n\r\nconst WatchingRepositories = () => (\r\n  <Query query={GET_WATCHING_REPOSITORIES} notifyOnNetworkStatusChange={true}>\r\n    {({ data, loading, error, fetchMore }) => {\r\n      if (error) return <ErrorMessage error={error} />;\r\n      if (loading && !data.viewer) return <Loading />;\r\n\r\n      return (\r\n        <RepositoryList\r\n          loading={loading}\r\n          repositories={data.viewer.watching}\r\n          fetchMore={fetchMore}\r\n        />\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default WatchingRepositories;\r\n","export const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nexport const REDIRECT_URI = process.env.REACT_APP_REDIRECT_URI;\r\nexport const AUTH_API_URI = process.env.REACT_APP_AUTH_API_URI;\r\n\r\nexport const GITHUB_OAUTH_URL = \"https://github.com/login/oauth/authorize\";\r\nexport const GITHUB_GRAPHQL_API = \"https://api.github.com/graphql\";\r\n\r\nexport const STATUS = {\r\n  INITIAL: \"initial\",\r\n  LOADING: \"loading\",\r\n  AUTHENTICATED: \"authenticated\"\r\n};\r\n\r\nexport const LOCAL_STORAGE_KEY = {\r\n  GITHUB_TOKEN: \"github_token\"\r\n};\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport Avatar from \"../Avatar\";\r\nimport WatchingRepositories from \"../WatchingRepositories\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport {\r\n  STATUS,\r\n  LOCAL_STORAGE_KEY,\r\n  AUTH_API_URI,\r\n  GITHUB_OAUTH_URL,\r\n  CLIENT_ID,\r\n  REDIRECT_URI\r\n} from \"../consts\";\r\n\r\nimport \"primer/build/build.css\";\r\nimport \"./style.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    status: STATUS.INITIAL\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storedToken = localStorage.getItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN);\r\n    if (storedToken) {\r\n      this.setState({ status: STATUS.AUTHENTICATED });\r\n      return;\r\n    }\r\n\r\n    const code =\r\n      window.location.href.match(/\\?code=(.*)/) &&\r\n      window.location.href.match(/\\?code=(.*)/)[1];\r\n    if (code) {\r\n      this.setState({ status: STATUS.LOADING }, () => this.authenticate(code));\r\n    }\r\n  }\r\n\r\n  authenticate(code) {\r\n    axios\r\n      .get(`${AUTH_API_URI}/${code}`)\r\n      .then(({ data: { token } }) => {\r\n        if (token) {\r\n          localStorage.setItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN, token);\r\n          this.setState({ token, status: STATUS.AUTHENTICATED });\r\n        }\r\n      })\r\n      .catch(error => console.error(`Error while authenticating: ${error}`));\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"Header\">\r\n          <div className=\"Logo\">GitObserve</div>\r\n          <div className=\"User\">\r\n            {status === STATUS.INITIAL && (\r\n              <a\r\n                href={`${GITHUB_OAUTH_URL}?client_id=${CLIENT_ID}&scope=user%20repo%20read%3Aorg&redirect_uri=${REDIRECT_URI}`}\r\n              >\r\n                Login\r\n              </a>\r\n            )}\r\n            {status === STATUS.AUTHENTICATED && <Avatar />}\r\n          </div>\r\n        </header>\r\n        <div className=\"Main\">\r\n          {status === STATUS.LOADING && <Loading />}\r\n          {status === STATUS.AUTHENTICATED && <WatchingRepositories />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport App from \"./App\";\n\nconst GITHUB_BASE_URL = \"https://api.github.com/graphql\";\n\nconst httpLink = new HttpLink({\n  uri: GITHUB_BASE_URL,\n  headers: {\n    authorization: `Bearer 0511b12f3e61d2d844b485dae8d2e125af91b2d3`\n  }\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n  }\n\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}