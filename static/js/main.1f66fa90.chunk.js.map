{"version":3,"sources":["components/common/blankslate.js","components/common/not-found.js","githubApi.js","actions/pulls.js","components/common/flash.js","components/pulls/filters.js","utils.js","components/pulls/pull-request.js","components/pulls/subnav.js","components/pulls/index.js","actions/settings.js","components/settings/account.js","components/settings/pulls.js","actions/watchedRepos.js","components/settings/repositories.js","components/settings/index.js","components/common/avatar.js","components/app.js","components/root.js","localStorage.js","reducers/pulls.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js"],"names":["Blankslate","children","className","NotFound","get","query","token","a","fetch","method","headers","Authorization","body","JSON","stringify","response","ok","json","result","errors","Error","message","data","queries","cursor","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","requestPullRequests","dispatch","getState","pulls","error","setFilters","filters","Flash","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","actions","props","handleSelectChange","e","target","name","value","pullRequests","length","authors","chain","countBy","pr","login","toPairs","fromPairs","onChange","style","width","Object","keys","map","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","isoToRelative","date","addSuffix","formatDistanceToNow","parseISO","PR_STATE_CLASSES","approved","commented","pending","dismissed","title","url","createdAt","updatedAt","repository","approvals","isNew","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","icon","ClockIcon","ThumbsupIcon","SubNav","React","PureComponent","handleReviewStateChange","preventDefault","this","dataset","render","data-review-state","paddingLeft","placeholder","SearchIcon","PullRequests","componentDidMount","resetPullRequests","selectedRepos","location","refresh","filteredPullRequests","loading","githubError","lastUpdated","to","SettingsIcon","format","fromUnixTime","disabled","SyncIcon","id","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","Date","hideOldThreshold","hideWithoutRequestEnabled","toLowerCase","authorLogin","indexOf","settings","extend","requestViewerInfoSuccess","viewerInfo","requestViewerInfo","viewer","Account","constructor","super","input","createRef","componentWillUnmount","resetViewerInfo","isEmpty","setToken","rel","ref","current","toggleHideOld","setHideOldThreshold","interval","threshold","toggleHideWithoutRequest","checked","requestWatchedRepos","initialResults","reposArray","watching","edges","pageInfo","hasNextPage","paginate","paginatedResults","node","owner","Repositories","resetSelectedRepos","resetWatchedRepos","watchedRepos","selectAllRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","watchedReposActions","settingsActions","Settings","match","pathname","CloudUploadIcon","activeClassName","PersonIcon","GitPullRequestIcon","RepoIcon","path","component","exact","Avatar","App","Root","store","initialState","REVIEW_STATES","formatReviewState","replace","getLatestReviewState","reviews","reviewRequests","getApprovalsCount","count","r","formatPrs","oldPrsById","nodes","flatten","reverse","hideWithoutRequest","rootReducer","combineReducers","action","Math","floor","now","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","document","getElementById"],"mappings":"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","file":"static/js/main.1f66fa90.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Blankslate = ({ children }) => (\n  <div className=\"blankslate blankslate-clean-background\">{children}</div>\n);\n\nexport default Blankslate;\n","import React from \"react\";\nimport Blankslate from \"./blankslate\";\n\nconst NotFound = () => (\n  <main className=\"App-main\">\n    <div className=\"container-lg py-4\">\n      <Blankslate>\n        <h3>Not found</h3>\n        <p>The page you are looking for could not be found.</p>\n      </Blankslate>\n    </div>\n  </main>\n);\n\nexport default NotFound;\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\n\nexport const get = async (query, token) => {\n  const response = await fetch(GITHUB_API_URI, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ query }),\n  });\n\n  if (response.ok) {\n    const result = await response.json();\n\n    if (result.errors) {\n      throw new Error(result.errors[0].message);\n    }\n\n    if (result.data) {\n      return result.data;\n    }\n  }\n\n  throw new Error(\"Error communicating with GitHub\");\n};\n\nexport const queries = {\n  viewerInfo: () => `\n    {\n      viewer {\n        login\n        avatarUrl(size: 96)\n      }\n    }\n  `,\n  watchedRepos: (cursor = \"\") => {\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\n    return `\n      query {\n        viewer {\n          watching(\n            first: 100\n            ${afterParam}\n          ) {\n            edges {\n              cursor\n              node {\n                id\n                name\n                url\n                owner {\n                  login\n                  avatarUrl(size: 96)\n                }\n                createdAt\n              }\n            }\n            totalCount\n            pageInfo {\n              hasNextPage\n            }\n          }\n        }\n      }\n    `;\n  },\n  pullRequestsForRepos: (repoIds) => `\n    query {\n      nodes (ids: ${JSON.stringify(repoIds)}) {\n        id\n        ... on Repository {\n          pullRequests(\n            last: 50\n            states: [OPEN]\n          ) {\n            edges {\n              node {\n                id\n                number\n                title\n                url\n                createdAt\n                updatedAt\n                repository {\n                  nameWithOwner\n                  url\n                }\n                author {\n                  avatarUrl(size: 96)\n                  login\n                  url\n                }\n                reviewRequests(last: 50) {\n                  edges {\n                    node {\n                      requestedReviewer {\n                        ... on User {\n                          login\n                          avatarUrl(size: 96)\n                        }\n                        ... on Team {\n                          name\n                          avatarUrl(size: 96)\n                        }\n                      }\n                    }\n                  }\n                }\n                reviews(last: 50) {\n                  edges {\n                    node {\n                      createdAt\n                      state\n                      author {\n                        login\n                        avatarUrl(size: 96)\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n};\n","import { get, queries } from \"../githubApi\";\n\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\nexport const RESET_PULL_REQUESTS = \"RESET_PULL_REQUESTS\";\nexport const SET_FILTERS = \"SET_FILTERS\";\n\nexport const requestPullRequestsLoading = () => ({\n  type: REQUEST_PULL_REQUESTS_LOADING,\n});\n\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\n  newPrs,\n  oldPrs,\n});\n\nexport const requestPullRequestsFailure = (error) => ({\n  type: REQUEST_PULL_REQUESTS_FAILURE,\n  error,\n});\n\nexport const requestPullRequests = (repoIds, token) => async (\n  dispatch,\n  getState\n) => {\n  const oldPrs = getState().pulls.pulls;\n  try {\n    dispatch(requestPullRequestsLoading());\n    const query = queries.pullRequestsForRepos(repoIds);\n    const newPrs = await get(query, token);\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\n  } catch (err) {\n    dispatch(requestPullRequestsFailure(err));\n  }\n};\n\nexport const resetPullRequests = () => ({\n  type: RESET_PULL_REQUESTS,\n});\n\nexport const setFilters = (filters) => ({\n  type: SET_FILTERS,\n  filters,\n});\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Flash = ({ type, children }) => (\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\n    {children}\n  </div>\n);\n\nFlash.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string,\n};\n\nexport default Flash;\n","import { chain } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/pulls\";\n\nconst DEFAULT_FILTERS = {\n  repo: \"\",\n  author: \"\",\n  orderBy: \"updatedAt\",\n  reviewState: \"\",\n  searchQuery: \"\",\n};\n\nconst Filters = (props) => {\n  const handleSelectChange = (e) => {\n    props.setFilters({\n      ...props.filters,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const renderAuthorsSelect = () => {\n    const authors = chain(props.pullRequests)\n      .countBy((pr) => pr.author.login)\n      .toPairs()\n      .orderBy(1, \"desc\")\n      .fromPairs()\n      .value();\n\n    return (\n      <select\n        className=\"form-select select-sm mr-2\"\n        name=\"author\"\n        value={props.filters.author}\n        onChange={handleSelectChange}\n        style={{ width: \"130px\" }}\n      >\n        <option value=\"\">all authors</option>\n        {Object.keys(authors).map((author) => (\n          <option key={author} value={author}>\n            {author} ({authors[author]})\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  const renderReposSelect = () => {\n    const repos = chain(props.pullRequests)\n      .countBy((pr) => pr.repoName)\n      .toPairs()\n      .orderBy(1, \"desc\")\n      .fromPairs()\n      .value();\n\n    return (\n      <select\n        className=\"form-select select-sm mr-2\"\n        name=\"repo\"\n        value={props.filters.repo}\n        onChange={handleSelectChange}\n        style={{ width: \"130px\" }}\n      >\n        <option value=\"\">all repositories</option>\n        {Object.keys(repos).map((repo) => (\n          <option key={repo} value={repo}>\n            {repo} ({repos[repo]})\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  const renderOrderBySelect = () => (\n    <select\n      className=\"form-select select-sm mr-2\"\n      name=\"orderBy\"\n      value={props.filters.orderBy}\n      onChange={handleSelectChange}\n      style={{ width: \"130px\" }}\n    >\n      <option value={\"updatedAt\"}>recently updated</option>\n      <option value={\"createdAt\"}>recently created</option>\n    </select>\n  );\n\n  return (\n    <>\n      <span className=\"text-gray mr-2\">\n        Show ({props.pullRequests.length}):\n      </span>\n      {renderAuthorsSelect()}\n      {renderReposSelect()}\n      <span className=\"text-gray mr-2\">Order by:</span>\n      {renderOrderBySelect()}\n      <button\n        className=\"btn btn-sm\"\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\n      >\n        Reset\n      </button>\n    </>\n  );\n};\n\nFilters.propTypes = {\n  pullRequests: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  filters: state.pulls.filters,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilters: (filters) => {\n    dispatch(actions.setFilters(filters));\n  },\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","import { formatDistanceToNow, parseISO } from \"date-fns\";\n\nexport const isoToRelative = (date, addSuffix = true) => {\n  if (!date) return null;\n\n  return formatDistanceToNow(parseISO(date), { addSuffix });\n};\n","import Octicon, {\n  Clock as ClockIcon,\n  Thumbsup as ThumbsupIcon,\n} from \"@githubprimer/octicons-react\";\nimport { isoToRelative } from \"../../utils\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst PR_STATE_CLASSES = {\n  \"review requested\": \"bg-blue text-white\",\n  \"changes requested\": \"Label--orange\",\n  approved: \"bg-green text-white\",\n  commented: \"bg-yellow text-gray\",\n  pending: \"Label--gray\",\n  dismissed: \"bg-red text-white\",\n  \"no request\": \"Label--gray\",\n};\n\nconst PullRequest = ({\n  title,\n  url,\n  createdAt,\n  updatedAt,\n  author,\n  repository,\n  reviewState,\n  approvals,\n  isNew,\n  filters,\n}) => {\n  let className = \"Box-row Box-row--hover-gray d-flex\";\n  if (isNew) className += \" Box-row--unread\";\n\n  return (\n    <div className={className}>\n      {author.avatarUrl && (\n        <div className=\"pr-3\">\n          <a\n            href={author.url}\n            className=\"d-block tooltipped tooltipped-se\"\n            aria-label={`Opened by ${author.login}`}\n          >\n            <img\n              className=\"avatar rounded-1\"\n              src={author.avatarUrl}\n              width=\"48\"\n              height=\"48\"\n              alt=\"\"\n            />\n          </a>\n        </div>\n      )}\n      <div className=\"flex-auto\">\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\n          {repository.nameWithOwner}\n        </a>\n        <a href={url} className=\"link-gray-dark no-underline h4\">\n          {title}\n        </a>\n        <div className=\"text-gray\">\n          <span>\n            <Octicon icon={ClockIcon} />{\" \"}\n            {filters && filters.orderBy === \"updatedAt\" && updatedAt ? (\n              <span>\n                Updated{\" \"}\n                <span title={updatedAt}>{isoToRelative(updatedAt)}</span>\n              </span>\n            ) : filters && filters.orderBy === \"createdAt\" && createdAt ? (\n              <span>\n                Opened <span title={createdAt}>{isoToRelative(createdAt)}</span>\n              </span>\n            ) : null}\n          </span>\n          <span className=\"ml-2\">\n            <Octicon icon={ThumbsupIcon} /> {approvals}{\" \"}\n            {approvals === 1 ? \"approval\" : \"approvals\"}\n          </span>\n          {reviewState ? (\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\n              {reviewState}\n            </span>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filters: state.pulls.filters,\n});\n\nexport default connect(mapStateToProps)(PullRequest);\n","import Octicon, { Search as SearchIcon } from \"@githubprimer/octicons-react\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/pulls\";\n\nclass SubNav extends React.PureComponent {\n  handleReviewStateChange = (e) => {\n    e.preventDefault();\n\n    this.props.setFilters({\n      ...this.props.filters,\n      reviewState: e.target.dataset.reviewState,\n    });\n  };\n\n  render() {\n    const { filters, setFilters } = this.props;\n\n    return (\n      <div className=\"subnav d-flex\">\n        <nav className=\"subnav-links flex-auto\">\n          <a\n            href=\"/\"\n            data-review-state=\"\"\n            onClick={this.handleReviewStateChange}\n            className={`subnav-item${\n              filters.reviewState === \"\" ? \" selected\" : \"\"\n            }`}\n          >\n            All\n          </a>\n          <a\n            href=\"/\"\n            data-review-state=\"review requested\"\n            onClick={this.handleReviewStateChange}\n            className={`subnav-item${\n              filters.reviewState === \"review requested\" ? \" selected\" : \"\"\n            }`}\n          >\n            Review requested\n          </a>\n          <a\n            href=\"/\"\n            data-review-state=\"commented\"\n            onClick={this.handleReviewStateChange}\n            className={`subnav-item${\n              filters.reviewState === \"commented\" ? \" selected\" : \"\"\n            }`}\n          >\n            Commented\n          </a>\n          <a\n            href=\"/\"\n            data-review-state=\"changes requested\"\n            onClick={this.handleReviewStateChange}\n            className={`subnav-item${\n              filters.reviewState === \"changes requested\" ? \" selected\" : \"\"\n            }`}\n          >\n            Changes requested\n          </a>\n          <a\n            href=\"/\"\n            data-review-state=\"approved\"\n            onClick={this.handleReviewStateChange}\n            className={`subnav-item${\n              filters.reviewState === \"approved\" ? \" selected\" : \"\"\n            }`}\n          >\n            Approved\n          </a>\n        </nav>\n        <div className=\"subnav-search col-3\">\n          <input\n            type=\"search\"\n            name=\"name\"\n            className=\"form-control input-contrast\"\n            style={{ width: \"100%\", paddingLeft: 28 }}\n            placeholder=\"Search pull requests...\"\n            value={filters.searchQuery}\n            onChange={(e) =>\n              setFilters({\n                ...filters,\n                searchQuery: e.target.value,\n              })\n            }\n          />\n          <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filters: state.pulls.filters,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilters: (filters) => {\n    dispatch(actions.setFilters(filters));\n  },\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubNav);\n","import Octicon, {\n  Settings as SettingsIcon,\n  Sync as SyncIcon,\n} from \"@githubprimer/octicons-react\";\nimport { differenceInDays, fromUnixTime, format } from \"date-fns\";\nimport { extend, filter, orderBy } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../actions/pulls\";\nimport Blankslate from \"../common/blankslate\";\nimport Flash from \"../common/flash\";\nimport Filters from \"./filters\";\nimport PullRequest from \"./pull-request\";\nimport SubNav from \"./subnav\";\n\nclass PullRequests extends React.PureComponent {\n  componentDidMount() {\n    if (!this.props.token) {\n      this.props.resetPullRequests();\n    }\n\n    if (this.props.token && this.props.selectedRepos.length) {\n      if (((this.props.location || {}).state || {}).refresh) {\n        this.props.requestPullRequests(\n          this.props.selectedRepos,\n          this.props.token\n        );\n      }\n    }\n  }\n\n  render() {\n    const {\n      selectedRepos,\n      filteredPullRequests,\n      loading,\n      githubError,\n      requestPullRequests,\n      token,\n      lastUpdated,\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\n          <div className=\"container-lg d-flex flex-items-center\">\n            <div className=\"flex-auto\">\n              <h1 className=\"h3\">Pull requests</h1>\n            </div>\n            <div>\n              <Link to=\"/settings\" className=\"btn mr-2\">\n                <Octicon icon={SettingsIcon} /> Settings\n              </Link>\n            </div>\n          </div>\n        </div>\n        <main className=\"App-main\">\n          <div className=\"container-lg py-4\">\n            {!selectedRepos.length ? (\n              <Flash>\n                You have not selected any{\" \"}\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\n              </Flash>\n            ) : (\n              <>\n                <SubNav />\n                <div className=\"Box\">\n                  <div className=\"Box-header d-flex flex-items-center\">\n                    <div className=\"flex-auto d-flex flex-items-center\">\n                      <Filters pullRequests={filteredPullRequests} />\n                    </div>\n                    <div className=\"d-flex flex-items-center\">\n                      <button\n                        className=\"btn btn-sm btn-primary tooltipped tooltipped-sw\"\n                        aria-label={`Last updated: ${\n                          lastUpdated\n                            ? `${format(fromUnixTime(lastUpdated), \"Pp\")}`\n                            : \"never\"\n                        }.`}\n                        onClick={() =>\n                          requestPullRequests(selectedRepos, token)\n                        }\n                        disabled={loading}\n                      >\n                        <Octicon icon={SyncIcon} />{\" \"}\n                        {loading ? \"Loading...\" : \"Refresh\"}\n                      </button>\n                    </div>\n                  </div>\n\n                  {githubError ? (\n                    <Blankslate>\n                      <p>\n                        Error fetching data from GitHub. Ensure your{\" \"}\n                        <Link to=\"/settings/account\">token</Link> is set\n                        correctly and try again.\n                      </p>\n                    </Blankslate>\n                  ) : null}\n\n                  {!githubError && !filteredPullRequests.length ? (\n                    <Blankslate>\n                      <p>No pull requests were found.</p>\n                    </Blankslate>\n                  ) : null}\n\n                  {!githubError && filteredPullRequests.length > 0\n                    ? filteredPullRequests.map((pr) => (\n                        <PullRequest key={pr.id} {...pr} />\n                      ))\n                    : null}\n                </div>\n              </>\n            )}\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nPullRequests.propTypes = {\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\n  githubError: PropTypes.shape(),\n  loading: PropTypes.bool,\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\n  token: PropTypes.string,\n  requestPullRequests: PropTypes.func,\n};\n\nPullRequests.defaultProps = {\n  selectedRepos: [],\n  token: null,\n  pullRequests: [],\n  loading: false,\n  githubError: null,\n};\n\nconst applyFilters = (pullRequests, filters) => {\n  let filtered = pullRequests;\n\n  if (filters.hideOldEnabled) {\n    filtered = filter(filtered, (pr) => {\n      return (\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\n        -filters.hideOldThreshold\n      );\n    });\n  }\n\n  if (filters.repo) {\n    filtered = filter(filtered, (pr) => pr.repoName === filters.repo);\n  }\n\n  if (filters.author) {\n    filtered = filter(filtered, (pr) => pr.author.login === filters.author);\n  }\n\n  if (filters.reviewState) {\n    filtered = filter(filtered, (pr) => pr.reviewState === filters.reviewState);\n  }\n\n  if (filters.hideWithoutRequestEnabled) {\n    filtered = filter(filtered, (pr) => pr.reviewState !== \"no request\");\n  }\n\n  if (filters.searchQuery) {\n    filtered = filter(filtered, (pr) => {\n      const searchQuery = filters.searchQuery.toLowerCase();\n      const repoName = pr.repoName.toLowerCase();\n      const title = pr.title.toLowerCase();\n      const authorLogin = pr.author.login.toLowerCase();\n\n      return (\n        repoName.indexOf(searchQuery) > -1 ||\n        title.indexOf(searchQuery) > -1 ||\n        authorLogin.indexOf(searchQuery) > -1\n      );\n    });\n  }\n\n  filtered = orderBy(filtered, filters.orderBy, \"desc\");\n\n  return filtered;\n};\n\nconst mapStateToProps = (state) => ({\n  selectedRepos: state.settings.selectedRepos,\n  token: state.settings.token,\n  githubError: state.pulls.githubError,\n  loading: state.pulls.loading,\n  lastUpdated: state.pulls.lastUpdated,\n  filteredPullRequests: applyFilters(\n    state.pulls.pulls,\n    extend(\n      {\n        hideOldEnabled: state.settings.hideOldEnabled,\n        hideOldThreshold: state.settings.hideOldThreshold,\n        hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled,\n      },\n      state.pulls.filters\n    )\n  ),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestPullRequests: (repoIds, token) =>\n    dispatch(actions.requestPullRequests(repoIds, token)),\n  resetPullRequests: () => dispatch(actions.resetPullRequests()),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PullRequests);\n","import { get, queries } from \"../githubApi\";\n\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\nexport const TOGGLE_HIDE_WITHOUT_REQUEST = \"TOGGLE_HIDE_WITHOUT_REQUEST\";\nexport const REQUEST_VIEWER_INFO = \"REQUEST_VIEWER_INFO\";\nexport const REQUEST_VIEWER_INFO_LOADING = \"REQUEST_VIEWER_INFO_LOADING\";\nexport const REQUEST_VIEWER_INFO_SUCCESS = \"REQUEST_VIEWER_INFO_SUCCESS\";\nexport const REQUEST_VIEWER_INFO_FAILURE = \"REQUEST_VIEWER_INFO_FAILURE\";\nexport const RESET_VIEWER_INFO = \"RESET_VIEWER_INFO\";\n\nexport const setToken = (value) => ({\n  type: SET_TOKEN,\n  value,\n});\n\nexport const toggleRepoSelection = (id) => ({\n  type: TOGGLE_REPO_SELECTION,\n  id,\n});\n\nexport const selectAllRepos = (repoIds) => ({\n  type: SELECT_ALL_REPOS,\n  repoIds,\n});\n\nexport const resetSelectedRepos = () => ({\n  type: RESET_SELECTED_REPOS,\n});\n\nexport const toggleHideOld = () => ({\n  type: TOGGLE_HIDE_OLD,\n});\n\nexport const setHideOldThreshold = (threshold) => ({\n  type: SET_HIDE_OLD_THRESHOLD,\n  threshold,\n});\n\nexport const toggleHideWithoutRequest = () => ({\n  type: TOGGLE_HIDE_WITHOUT_REQUEST,\n});\n\nexport const requestViewerInfoLoading = () => ({\n  type: REQUEST_VIEWER_INFO_LOADING,\n});\n\nexport const requestViewerInfoSuccess = (viewerInfo) => ({\n  type: REQUEST_VIEWER_INFO_SUCCESS,\n  viewerInfo,\n});\n\nexport const requestViewerInfoFailure = (error) => ({\n  type: REQUEST_VIEWER_INFO_FAILURE,\n  error,\n});\n\nexport const requestViewerInfo = (token) => async (dispatch) => {\n  try {\n    dispatch(requestViewerInfoLoading());\n    const query = queries.viewerInfo();\n    const viewerInfo = await get(query, token);\n    dispatch(requestViewerInfoSuccess(viewerInfo.viewer));\n  } catch (err) {\n    dispatch(requestViewerInfoFailure(err));\n  }\n};\n\nexport const resetViewerInfo = () => ({\n  type: RESET_VIEWER_INFO,\n});\n","import { isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/settings\";\n\nclass Account extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  componentWillUnmount() {\n    if (!this.props.token) {\n      this.props.resetViewerInfo();\n    }\n\n    if (this.props.token && isEmpty(this.props.viewerInfo)) {\n      this.props.requestViewerInfo(this.props.token);\n    }\n  }\n\n  render() {\n    const { token, setToken } = this.props;\n\n    return (\n      <>\n        <div className=\"Subhead\">\n          <h2 className=\"Subhead-heading\">Account</h2>\n        </div>\n        <p>\n          You need to add a Personal Access Token in order to access GitHub\n          data.\n        </p>\n        <ol className=\"pl-3\">\n          <li>\n            Go to{\" \"}\n            <a\n              href=\"https://github.com/settings/tokens\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Personal Access Tokens\n            </a>{\" \"}\n            and click <b>Generate new token</b>.\n          </li>\n          <li>\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\n            <b>Generate token</b>.\n          </li>\n          <li>Copy the given token and add it below.</li>\n        </ol>\n        <form className=\"my-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Token\"\n            ref={this.input}\n            onChange={() => setToken(this.input.current.value)}\n            value={token}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nAccount.propTypes = {\n  token: PropTypes.string,\n  setToken: PropTypes.func.isRequired,\n  viewerInfo: PropTypes.object.isRequired,\n  requestViewerInfo: PropTypes.func.isRequired,\n  resetViewerInfo: PropTypes.func.isRequired,\n};\n\nAccount.defaultProps = {\n  token: null,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.settings.token,\n  viewerInfo: state.settings.viewerInfo,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (value) => dispatch(actions.setToken(value)),\n  requestViewerInfo: (token) => dispatch(actions.requestViewerInfo(token)),\n  resetViewerInfo: () => dispatch(actions.resetViewerInfo()),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/settings\";\n\nconst PullRequests = (props) => (\n  <>\n    <div className=\"Subhead\">\n      <h2 className=\"Subhead-heading\">Pull requests</h2>\n    </div>\n    <form>\n      <div className=\"form-checkbox\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={props.hideOldEnabled}\n            onChange={props.toggleHideOld}\n          />{\" \"}\n          Hide pull requests older than\n          <input\n            type=\"number\"\n            className=\"form-control input-sm ml-1\"\n            style={{ width: \"40px \" }}\n            value={props.hideOldThreshold}\n            onChange={(e) => props.setHideOldThreshold(e.target.value)}\n          />{\" \"}\n          days\n        </label>\n      </div>\n      <div className=\"form-checkbox\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={props.hideWithoutRequestEnabled}\n            onChange={props.toggleHideWithoutRequest}\n          />\n          Hide pull requests without a review request\n        </label>\n      </div>\n    </form>\n  </>\n);\n\nconst mapStateToProps = (state) => ({\n  hideOldEnabled: state.settings.hideOldEnabled,\n  hideOldThreshold: state.settings.hideOldThreshold,\n  hideWithoutRequestEnabled: state.settings.hideWithoutRequestEnabled,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\n  setHideOldThreshold: (interval) =>\n    dispatch(actions.setHideOldThreshold(interval)),\n  toggleHideWithoutRequest: () => dispatch(actions.toggleHideWithoutRequest()),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PullRequests);\n","import { get, queries } from \"../githubApi\";\n\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\nexport const RESET_WATCHED_REPOS = \"RESET_WATCHED_REPOS\";\n\nexport const requestWatchedReposLoading = () => ({\n  type: REQUEST_WATCHED_REPOS_LOADING,\n});\n\nexport const requestWatchedReposSuccess = (data) => ({\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\n  data,\n});\n\nexport const requestWatchedReposFailure = (error) => ({\n  type: REQUEST_WATCHED_REPOS_FAILURE,\n  error,\n});\n\nexport const requestWatchedRepos = (token) => async (dispatch) => {\n  try {\n    dispatch(requestWatchedReposLoading());\n    let query = queries.watchedRepos();\n    const initialResults = await get(query, token);\n    let reposArray = initialResults.viewer.watching.edges;\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\n      let paginate = true;\n      while (paginate) {\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\n        const paginatedResults = await get(query, token);\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\n      }\n    }\n    reposArray = reposArray.map((repo) => ({\n      id: repo.node.id,\n      name: repo.node.name,\n      url: repo.node.url,\n      owner: repo.node.owner,\n      createdAt: repo.node.createdAt,\n    }));\n    dispatch(requestWatchedReposSuccess(reposArray));\n  } catch (err) {\n    dispatch(requestWatchedReposFailure(err));\n  }\n};\n\nexport const resetWatchedRepos = () => ({\n  type: RESET_WATCHED_REPOS,\n});\n","import Octicon, {\n  LinkExternal as LinkExternalIcon,\n  Sync as SyncIcon,\n} from \"@githubprimer/octicons-react\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as settingsActions from \"../../actions/settings\";\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\nimport Blankslate from \"../common/blankslate\";\n\nclass Repositories extends React.PureComponent {\n  componentDidMount() {\n    if (!this.props.token) {\n      this.props.resetSelectedRepos();\n      this.props.resetWatchedRepos();\n    }\n\n    if (this.props.token && !this.props.selectedRepos.length) {\n      this.props.requestWatchedRepos(this.props.token);\n    }\n  }\n\n  render() {\n    const {\n      token,\n      loading,\n      githubError,\n      watchedRepos,\n      selectedRepos,\n      selectAllRepos,\n      resetSelectedRepos,\n      toggleRepoSelection,\n      requestWatchedRepos,\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"Subhead\">\n          <h2 className=\"Subhead-heading\">Repositories</h2>\n        </div>\n        <p className=\"mb-4\">\n          Select the repositories you wish to track.{\" \"}\n          <strong>\n            Only repositories you are{\" \"}\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\n          </strong>\n        </p>\n        <div className=\"Box\">\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\n            <h3 className=\"Box-title\">\n              Selected repositories{\" \"}\n              <span className=\"Counter Counter--gray-dark\">\n                {selectedRepos.length}\n              </span>\n            </h3>\n            <div className=\"flex-auto text-right\">\n              <div className=\"BtnGroup\">\n                <button\n                  className=\"BtnGroup-item btn btn-sm\"\n                  onClick={() =>\n                    selectAllRepos(watchedRepos.map((repo) => repo.id))\n                  }\n                >\n                  Select all\n                </button>\n                <button\n                  className=\"BtnGroup-item btn btn-sm\"\n                  onClick={() => resetSelectedRepos()}\n                >\n                  Reset\n                </button>\n              </div>\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => requestWatchedRepos(token)}\n                disabled={loading}\n              >\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\n              </button>\n            </div>\n          </div>\n\n          {githubError ? (\n            <Blankslate>\n              <p>\n                Error fetching data from GitHub. Ensure your{\" \"}\n                <Link to=\"/settings/account\">token</Link> is set correctly and\n                try again.\n              </p>\n            </Blankslate>\n          ) : null}\n\n          {!githubError && !watchedRepos.length ? (\n            <Blankslate>\n              <p>You are not watching any repositories currently.</p>\n            </Blankslate>\n          ) : null}\n\n          {!githubError && watchedRepos.length > 0\n            ? watchedRepos.map(({ id, name, url }) => {\n                const htmlId = `repo-${id}`;\n                const checked = selectedRepos.includes(id);\n                const onChange = () => toggleRepoSelection(id);\n                return (\n                  <div\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\n                    key={id}\n                  >\n                    <div className=\"form-checkbox flex-auto my-0\">\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          id={htmlId}\n                          onChange={onChange}\n                          checked={checked}\n                        />{\" \"}\n                        {name}\n                      </label>\n                    </div>\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\n                      GitHub\n                    </a>\n                  </div>\n                );\n              })\n            : null}\n        </div>\n      </>\n    );\n  }\n}\n\nRepositories.propTypes = {\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\n  loading: PropTypes.bool,\n  githubError: PropTypes.shape(),\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\n  token: PropTypes.string,\n  resetWatchedRepos: PropTypes.func,\n};\n\nRepositories.defaultProps = {\n  watchedRepos: [],\n  loading: false,\n  githubError: null,\n  selectedRepos: [],\n  token: null,\n};\n\nconst mapStateToProps = (state) => ({\n  watchedRepos: state.watchedRepos.repos,\n  loading: state.watchedRepos.loading,\n  githubError: state.watchedRepos.githubError,\n  selectedRepos: state.settings.selectedRepos,\n  token: state.settings.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestWatchedRepos: (token) =>\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\n  toggleRepoSelection: (id) =>\n    dispatch(settingsActions.toggleRepoSelection(id)),\n  selectAllRepos: (repoIds) =>\n    dispatch(settingsActions.selectAllRepos(repoIds)),\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\n  resetWatchedRepos: () => dispatch(watchedReposActions.resetWatchedRepos()),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Repositories);\n","import Octicon, {\n  CloudUpload as CloudUploadIcon,\n  GitPullRequest as GitPullRequestIcon,\n  Person as PersonIcon,\n  Repo as RepoIcon,\n} from \"@githubprimer/octicons-react\";\nimport React from \"react\";\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\nimport Account from \"./account\";\nimport PullRequests from \"./pulls\";\nimport Repositories from \"./repositories\";\n\nconst Settings = ({ match }) => (\n  <>\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\n      <div className=\"container-lg d-flex flex-items-center\">\n        <div className=\"flex-auto\">\n          <h1 className=\"h3\">Settings</h1>\n        </div>\n        <div>\n          <Link\n            to={{ pathname: \"/\", state: { refresh: true } }}\n            className=\"btn btn-primary\"\n          >\n            <Octicon icon={CloudUploadIcon} /> Save\n          </Link>\n        </div>\n      </div>\n    </div>\n    <main className=\"App-main\">\n      <div className=\"container-lg py-4 d-flex\">\n        <div className=\"col-3 pr-4\">\n          <nav className=\"menu\">\n            <NavLink\n              to={`${match.url}/account`}\n              className=\"menu-item\"\n              activeClassName=\"selected\"\n            >\n              <Octicon icon={PersonIcon} /> Account\n            </NavLink>\n            <NavLink\n              to={`${match.url}/pulls`}\n              className=\"menu-item\"\n              activeClassName=\"selected\"\n            >\n              <Octicon icon={GitPullRequestIcon} /> Pull requests\n            </NavLink>\n            <NavLink\n              to={`${match.url}/repositories`}\n              className=\"menu-item\"\n              activeClassName=\"selected\"\n            >\n              <Octicon icon={RepoIcon} /> Repositories\n            </NavLink>\n          </nav>\n        </div>\n        <div className=\"col-9\">\n          <Switch>\n            <Route path={`${match.url}/pulls`} component={PullRequests} />\n            <Route path={`${match.url}/account`} component={Account} />\n            <Route\n              path={`${match.url}/repositories`}\n              component={Repositories}\n            />\n            <Route\n              exact\n              path={`${match.url}`}\n              render={() => <Redirect to={`${match.url}/pulls`} />}\n            />\n          </Switch>\n        </div>\n      </div>\n    </main>\n  </>\n);\n\nexport default Settings;\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../actions/settings\";\n\nconst DEFAULT_AVATAR_URL =\n  \"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\";\n\nclass Avatar extends React.PureComponent {\n  componentDidMount() {\n    if (isEmpty(this.props.viewerInfo) && this.props.token) {\n      this.props.requestViewerInfo(this.props.token);\n    }\n  }\n\n  render() {\n    const { viewerInfo, loading, githubError } = this.props;\n    const avatarUrl =\n      !loading && !githubError && viewerInfo.avatarUrl\n        ? viewerInfo.avatarUrl\n        : DEFAULT_AVATAR_URL;\n\n    return (\n      <Link to=\"/settings/account\">\n        <img\n          className=\"avatar avatar-small\"\n          src={avatarUrl}\n          width={32}\n          height={32}\n          alt=\"Avatar\"\n        />\n      </Link>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.settings.token,\n  viewerInfo: state.settings.viewerInfo,\n  githubError: state.settings.githubError,\n  loading: state.settings.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestViewerInfo: (token) => dispatch(actions.requestViewerInfo(token)),\n  dispatch,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Avatar);\n","import React from \"react\";\nimport { Link, NavLink, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"../../node_modules/@primer/css/dist/primer.css\";\nimport NotFound from \"./common/not-found\";\nimport PullRequests from \"./pulls\";\nimport Settings from \"./settings\";\nimport Avatar from \"./common/avatar\";\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\n      <div className=\"container-lg d-flex flex-items-center\">\n        <div className=\"flex-auto d-flex flex-items-baseline\">\n          <h1 className=\"h2\">\n            <Link to=\"/\" className=\"text-white no-underline\">\n              GitObserve\n            </Link>\n          </h1>\n          <nav>\n            <NavLink\n              to=\"/pulls\"\n              className=\"ml-4 f4 text-white\"\n              activeClassName=\"text-underline\"\n            >\n              Pull requests\n            </NavLink>\n          </nav>\n        </div>\n        <Avatar />\n      </div>\n    </header>\n    <Switch>\n      <Route path=\"/pulls\" component={PullRequests} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route\n        exact\n        path=\"/\"\n        render={({ location: { state } }) => (\n          <Redirect to={{ pathname: \"/pulls\", state }} />\n        )}\n      />\n      <Route component={NotFound} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport App from \"./app\";\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n};\n\nexport default Root;\n","const LS_STATE_KEY = \"go_state\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(LS_STATE_KEY, serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n};\n","import { chain, map } from \"lodash\";\nimport * as actions from \"../actions/pulls\";\n\nconst initialState = {\n  pulls: [],\n  lastUpdated: null,\n  filters: {\n    repo: \"\",\n    author: \"\",\n    reviewState: \"\",\n    orderBy: \"updatedAt\",\n    searchQuery: \"\",\n  },\n  loading: false,\n  githubError: null,\n};\n\nconst REVIEW_STATES = {\n  // Expected values from GitHub:\n  PENDING: \"PENDING\",\n  COMMENTED: \"COMMENTED\",\n  APPROVED: \"APPROVED\",\n  CHANGES_REQUESTED: \"CHANGES_REQUESTED\",\n  DISMISSED: \"DISMISSED\",\n  // Additional (custom) values:\n  REVIEW_REQUESTED: \"REVIEW_REQUESTED\",\n  NO_REQUEST: \"NO_REQUEST\",\n};\n\nconst formatReviewState = (state) => {\n  if (typeof state !== \"string\") return;\n  return state.replace(/_/g, \" \").toLowerCase();\n};\n\nconst getLatestReviewState = (reviews, reviewRequests) => {\n  let state = null;\n  if (!reviews.length) {\n    if (reviewRequests.length > 0) {\n      state = REVIEW_STATES.REVIEW_REQUESTED;\n    } else {\n      state = REVIEW_STATES.NO_REQUEST;\n    }\n    return formatReviewState(state);\n  }\n  state = reviews[reviews.length - 1].state;\n  return formatReviewState(state);\n};\n\nconst getApprovalsCount = (reviews) => {\n  let count = 0;\n  if (reviews.length) {\n    count = reviews.filter((r) => r.state === REVIEW_STATES.APPROVED).length;\n  }\n  return count;\n};\n\nconst formatPrs = (newPrs, oldPrs) => {\n  const oldPrsById = map(oldPrs, \"id\");\n\n  return chain(newPrs.nodes)\n    .filter((node) => node)\n    .map((node) => map(node.pullRequests.edges, \"node\"))\n    .flatten()\n    .map((pr) => {\n      const reviews = map(pr.reviews.edges, \"node\");\n      const reviewRequests = map(pr.reviewRequests.edges, \"node\");\n      return {\n        ...pr,\n        reviews,\n        reviewRequests,\n        repoName: pr.repository.nameWithOwner,\n        reviewState: getLatestReviewState(reviews, reviewRequests),\n        approvals: getApprovalsCount(reviews),\n        isNew: !oldPrsById.includes(pr.id),\n      };\n    })\n    .orderBy(\"updatedAt\")\n    .reverse()\n    .value();\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\n      return {\n        ...state,\n        loading: true,\n        githubError: null,\n      };\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\n      return {\n        ...state,\n        pulls: formatPrs(action.newPrs, action.oldPrs),\n        lastUpdated: Math.floor(Date.now() / 1000),\n        loading: false,\n        githubError: null,\n      };\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\n      return {\n        ...state,\n        pulls: [],\n        githubError: action.error,\n        loading: false,\n      };\n    case actions.RESET_PULL_REQUESTS:\n      return {\n        ...state,\n        pulls: [],\n        githubError: null,\n        loading: false,\n      };\n    case actions.SET_FILTERS:\n      return {\n        ...state,\n        filters: action.filters,\n      };\n    default:\n      return state;\n  }\n}\n","import * as actions from \"../actions/settings\";\n\nconst initialState = {\n  token: \"\",\n  selectedRepos: [],\n  hideOldEnabled: false,\n  hideOldThreshold: 30,\n  hideWithoutRequest: false,\n  viewerInfo: {},\n  loading: false,\n  githubError: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_TOKEN:\n      return {\n        ...state,\n        token: action.value,\n      };\n    case actions.TOGGLE_REPO_SELECTION:\n      return state.selectedRepos.includes(action.id)\n        ? {\n            ...state,\n            selectedRepos: state.selectedRepos.filter(\n              (repoId) => repoId !== action.id\n            ),\n          }\n        : {\n            ...state,\n            selectedRepos: [...state.selectedRepos, action.id],\n          };\n    case actions.SELECT_ALL_REPOS:\n      return {\n        ...state,\n        selectedRepos: [...action.repoIds],\n      };\n    case actions.RESET_SELECTED_REPOS:\n      return {\n        ...state,\n        selectedRepos: [],\n      };\n    case actions.TOGGLE_HIDE_OLD:\n      return {\n        ...state,\n        hideOldEnabled: !state.hideOldEnabled,\n      };\n    case actions.SET_HIDE_OLD_THRESHOLD:\n      return {\n        ...state,\n        hideOldThreshold: action.threshold,\n      };\n    case actions.TOGGLE_HIDE_WITHOUT_REQUEST:\n      return {\n        ...state,\n        hideWithoutRequestEnabled: !state.hideWithoutRequestEnabled,\n      };\n    case actions.REQUEST_VIEWER_INFO_LOADING:\n      return {\n        ...state,\n        loading: true,\n        githubError: null,\n      };\n    case actions.REQUEST_VIEWER_INFO_SUCCESS:\n      return {\n        ...state,\n        viewerInfo: action.viewerInfo,\n        loading: false,\n        githubError: null,\n      };\n    case actions.REQUEST_VIEWER_INFO_FAILURE:\n      return {\n        ...state,\n        viewerInfo: {},\n        githubError: action.error,\n        loading: false,\n      };\n    case actions.RESET_VIEWER_INFO:\n      return {\n        ...state,\n        viewerInfo: {},\n      };\n    default:\n      return state;\n  }\n}\n","import * as actions from \"../actions/watchedRepos\";\n\nconst initialState = {\n  repos: [],\n  loading: false,\n  githubError: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\n      return {\n        ...state,\n        loading: true,\n        githubError: null,\n      };\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\n      return {\n        ...state,\n        repos: action.data,\n        githubError: null,\n        loading: false,\n      };\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\n    case actions.RESET_WATCHED_REPOS:\n      return {\n        ...state,\n        repos: [],\n        githubError: action.error,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport pulls from \"./pulls\";\nimport settings from \"./settings\";\nimport watchedRepos from \"./watchedRepos\";\n\nconst rootReducer = combineReducers({\n  pulls,\n  watchedRepos,\n  settings,\n});\n\nexport default rootReducer;\n","import { throttle } from \"lodash\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Root from \"./components/root\";\nimport configureStore from \"./configureStore\";\nimport { saveState } from \"./localStorage\";\n\nconst store = configureStore();\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      settings: store.getState().settings,\n      pulls: store.getState().pulls,\n      watchedRepos: store.getState().watchedRepos,\n    });\n  }),\n  1000\n);\n\nrender(<Root store={store} />, document.getElementById(\"root\"));\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { loadState } from \"./localStorage\";\nimport rootReducer from \"./reducers\";\n\nconst configureStore = () => {\n  const persistedState = loadState();\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    middlewares.push(logger);\n  }\n\n  return createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(...middlewares)\n  );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}