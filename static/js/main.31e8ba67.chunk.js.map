{"version":3,"sources":["githubApi.js","actions/dashboard.js","constants.js","components/dashboard/pull-request.js","components/common/flash.js","components/dashboard/stats.js","components/dashboard/filters.js","components/dashboard/index.js","components/settings/account.js","actions/settings.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/dashboard.js","components/settings/index.js","components/common/not-found.js","components/app.js","components/root.js","reducers/dashboard.js","reducers/watchedRepos.js","reducers/settings.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["get","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","this","_x","_x2","apply","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","watchedRepos","type","PR_STALENESS","label","color","connect","state","stalenessLabelsEnabled","settings","number","title","url","createdAt","updatedAt","author","repository","now","Date","relativeTime","field","formatDistance","addSuffix","status","date","difference","differenceInDays","getPRStaleness","react_default","createElement","className","avatarUrl","src","width","height","alt","href","nameWithOwner","login","aria-label","style","borderColor","Flash","children","Stats","pullRequests","total","openedThisMonth","filter","pr","isSameMonth","updatedThisMonth","DEFAULT_FILTERS","repo","orderBy","filters","dashboard","dispatch","setFilters","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","authors","_","chain","map","uniqBy","onChange","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","selectedRepos","requestPullRequests","autoRefreshEnabled","setInterval","autoRefreshInterval","window","clearInterval","_this$props","filteredPullRequests","loading","githubError","Link","to","index_esm","icon","SettingsIcon","stats","dashboard_filters","SyncIcon","pull_request","assign","id","flash","React","PureComponent","defaultProps","applyFilters","filtered","getState","results","t0","error","Account","input","createRef","setToken","rel","placeholder","ref","current","Component","settingsActions","Repositories","requestWatchedRepos","selectAllRepos","resetSelectedRepos","toggleRepoSelection","htmlId","checked","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleStalenessLabels","class","Settings","match","CloudUploadIcon","NavLink","activeClassName","DashboardIcon","PersonIcon","RepoIcon","Switch","Route","path","component","exact","render","Redirect","NotFound","App","Root","store","es","HashRouter","initialState","rootReducer","combineReducers","prs","action","nodes","flatten","reverse","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"+RAEaA,EAAG,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAOC,GAAd,IAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAHF,iCAGwB,CAC3CC,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,cAAa,UAAAC,OAAYZ,IAE3Ba,KAAMC,KAAKC,UAAU,CAAEhB,YAPR,YACXE,EADWG,EAAAY,MAUJC,GAVI,CAAAb,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAWML,EAASiB,OAXf,YAWThB,EAXSE,EAAAY,MAaJG,OAbI,CAAAf,EAAAE,KAAA,cAcP,IAAIc,MAAMlB,EAAOiB,OAAO,GAAGE,SAdpB,WAiBXnB,EAAOoB,KAjBI,CAAAlB,EAAAE,KAAA,gBAAAF,EAAAmB,OAAA,SAkBNrB,EAAOoB,MAlBD,cAsBX,IAAIF,MAAM,mCAtBC,yBAAAhB,EAAAoB,SAAA1B,EAAA2B,SAAH,gBAAAC,EAAAC,GAAA,OAAAnC,EAAAoC,MAAAH,KAAAI,YAAA,GAyBHC,EACG,WAAiB,IAAhBC,EAAgBF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAP,GAChBK,EAAaH,EAAM,UAAAnB,OAAamB,GAAW,GACjD,qGAAAnB,OAKUsB,EALV,4bAHSJ,EAgCW,SAAAK,GAAO,0CAAAvB,OAEXE,KAAKC,UAAUoB,GAFJ,0rBC/ClBC,EAA6B,SAACd,EAAMe,GAAP,MAAyB,CACjEC,KAT2C,gCAU3ChB,OACAe,iCCfWE,EACJ,CACLC,MAAO,QACPC,MAAO,WAHEF,EAKJ,CACLC,MAAO,QACPC,MAAO,WC0EIC,cAJS,SAAAC,GAAK,MAAK,CAChCC,uBAAwBD,EAAME,SAASD,yBAG1BF,CA9DK,SAAAlD,GASd,IARJsD,EAQItD,EARJsD,OACAC,EAOIvD,EAPJuD,MACAC,EAMIxD,EANJwD,IACAC,EAKIzD,EALJyD,UACAC,EAII1D,EAJJ0D,UACAC,EAGI3D,EAHJ2D,OACAC,EAEI5D,EAFJ4D,WACAR,EACIpD,EADJoD,uBAEMS,EAAM,IAAIC,KACVC,EAAe,SAAAC,GAAK,OACxBC,YAAeD,EAAOH,EAAK,CACzBK,WAAW,KAETC,EA7Be,SAAAC,GACrB,IAAMC,EAAaC,YAAiB,IAAIR,KAAKM,GAAO,IAAIN,MAExD,OAAIO,GAAc,EACTtB,EAGLsB,GAAc,GACTtB,EAGF,KAkBQwB,CAAeb,GAE9B,OACEc,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,sCACZf,EAAOgB,WACNH,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,QACbF,EAAApE,EAAAqE,cAAA,OACEC,UAAU,SACVE,IAAKjB,EAAOgB,UACZE,MAAM,KACNC,OAAO,KACPC,IAAI,MAIVP,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,kBACbF,EAAApE,EAAAqE,cAAA,KAAGO,KAAMpB,EAAWJ,IAAKkB,UAAU,sBAChCd,EAAWqB,eAEdT,EAAApE,EAAAqE,cAAA,KAAGO,KAAMxB,EAAKkB,UAAU,kCACrBnB,GAEHiB,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,aAAf,IACIpB,EADJ,UACmB,IACjBkB,EAAApE,EAAAqE,cAAA,QAAMlB,MAAOE,GAAYM,EAAaN,IAFxC,MAE8D,IAC5De,EAAApE,EAAAqE,cAAA,KAAGO,KAAMrB,EAAOH,IAAKkB,UAAU,cAC5Bf,EAAOuB,OAET9B,GAA0Be,GACzBK,EAAApE,EAAAqE,cAAA,QACEC,UAAU,qDACVS,aAAA,gBAAA/D,OAA4B2C,EAAaL,IACzC0B,MAAO,CAAEnC,MAAOkB,EAAOlB,MAAOoC,YAAalB,EAAOlB,QAEjDkB,EAAOnB,YCtDPsC,EAXD,SAAAtF,GAAA,IAAG8C,EAAH9C,EAAG8C,KAAMyC,EAATvF,EAASuF,SAAT,OACZf,EAAApE,EAAAqE,cAAA,OAAKC,UAAS,mBAAAtD,OAAqB0B,EAAI,SAAA1B,OAAY0B,GAAS,OACzDyC,YC+BUC,EAhCD,SAAAxF,GAAsB,IAAnByF,EAAmBzF,EAAnByF,aACT5B,EAAM,IAAIC,KACV4B,EAAQD,EAAajD,QAAU,EAC/BmD,EACJF,EAAaG,OAAO,SAAAC,GAAE,OAAIC,YAAY,IAAIhC,KAAK+B,EAAGpC,WAAYI,KAC3DrB,QAAU,EACTuD,EACJN,EAAaG,OAAO,SAAAC,GAAE,OAAIC,YAAY,IAAIhC,KAAK+B,EAAGnC,WAAYG,KAC3DrB,QAAU,EAEf,OACEgC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,eACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,gCACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,sBAAd,cACAF,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,MAAMgB,IAExBlB,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,gCACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,sBAAd,qBACAF,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,MAAMiB,IAExBnB,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,gCACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,sBAAd,sBACAF,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,MAAMqB,qBCpBxBC,EAAkB,CACtBC,KAAM,GACNtC,OAAQ,GACRuC,QAAS,aAqGIhD,cAXS,SAAAC,GAAK,MAAK,CAChCgD,QAAShD,EAAMiD,UAAUD,UAGA,SAAAE,GAAQ,MAAK,CACtCC,WAAY,SAAAH,GACVE,ELnEsB,SAAAF,GAAO,MAAK,CACpCrD,KAjCyB,cAkCzBqD,WKiEWI,CAAmBJ,KAE9BE,aAGanD,CAlGC,SAAAsD,GACd,IAAMC,EAAqB,SAAAC,GACzBF,EAAMF,WAANrG,OAAA0G,EAAA,EAAA1G,CAAA,GACKuG,EAAML,QADXlG,OAAA2G,EAAA,EAAA3G,CAAA,GAEGyG,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UA8D9B,OACEvC,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,kBAAhB,SA5DwB,WAC1B,IAAMuC,EAAUC,IAAEC,MAAMX,EAAMf,cAC3B2B,IAAI,SAAAvB,GAAE,OAAIA,EAAGlC,SACb0D,OAAO,SACPN,QAEH,OACEvC,EAAApE,EAAAqE,cAAA,UACEC,UAAU,6BACVoC,KAAK,SACLC,MAAOP,EAAML,QAAQxC,OACrB2D,SAAUb,GAEVjC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,IAAd,eACCE,EAAQG,IAAI,SAAApH,GAAA,IAAGkF,EAAHlF,EAAGkF,MAAH,OACXV,EAAApE,EAAAqE,cAAA,UAAQ8C,IAAKrC,EAAO6B,MAAO7B,GACxBA,MA6CNsC,GAtCqB,WACxB,IAAMC,EAAQP,IAAEC,MAAMX,EAAMf,cACzB2B,IAAI,SAAAvB,GAAE,OAAIA,EAAG6B,WACbL,SACAN,QAEH,OACEvC,EAAApE,EAAAqE,cAAA,UACEC,UAAU,6BACVoC,KAAK,OACLC,MAAOP,EAAML,QAAQF,KACrBqB,SAAUb,GAEVjC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,IAAd,oBACCU,EAAML,IAAI,SAAAnB,GAAI,OACbzB,EAAApE,EAAAqE,cAAA,UAAQ8C,IAAKtB,EAAMc,MAAOd,GACvBA,MAuBN0B,GACDnD,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,kBAAhB,aAhBFF,EAAApE,EAAAqE,cAAA,UACEC,UAAU,6BACVoC,KAAK,UACLC,MAAOP,EAAML,QAAQD,QACrBoB,SAAUb,GAEVjC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAO,aAAf,oBACAvC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAO,aAAf,WAWAvC,EAAApE,EAAAqE,cAAA,UACEC,UAAU,aACVkD,QAAS,kBAAMpB,EAAMF,WAAWN,KAFlC,YCtEA6B,cACJ,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAA7H,OAAA8H,EAAA,EAAA9H,CAAAgC,KAAA4F,IACjBC,EAAA7H,OAAA+H,EAAA,EAAA/H,CAAAgC,KAAAhC,OAAAgI,EAAA,EAAAhI,CAAA4H,GAAAK,KAAAjG,KAAMuE,KACD2B,eAAiB,KAFLL,mFAKC,IAAAM,EAAAnG,KACdA,KAAKuE,MAAM6B,cAAc7F,OAAS,IACpCP,KAAKuE,MAAM8B,oBACTrG,KAAKuE,MAAM6B,cACXpG,KAAKuE,MAAMhG,OAGTyB,KAAKuE,MAAM+B,qBACbtG,KAAKkG,eAAiBK,YAAY,WAChCJ,EAAK5B,MAAM8B,oBACTF,EAAK5B,MAAM6B,cACXD,EAAK5B,MAAMhG,QAEqB,GAAjCyB,KAAKuE,MAAMiC,oBAA2B,sDAM7CC,OAAOC,cAAc1G,KAAKkG,iDAGnB,IAAAS,EAUH3G,KAAKuE,MARP6B,EAFKO,EAELP,cACA5C,EAHKmD,EAGLnD,aACAoD,EAJKD,EAILC,qBACAC,EALKF,EAKLE,QACAC,EANKH,EAMLG,YACAT,EAPKM,EAOLN,oBACA9H,EARKoI,EAQLpI,MACA+H,EATKK,EASLL,mBAGF,OACE/D,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,4CACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,yCACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,aACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,MAAd,cAEFF,EAAApE,EAAAqE,cAAA,WACED,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,YAAYvE,UAAU,YAC7BF,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAMC,MADjB,gBAMN5E,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,YACdF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,qBACX2D,EAAc7F,OAMdgC,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAC4E,EAAD,CAAO5D,aAAcA,IACrBjB,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,OACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,uCACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,sCACbF,EAAApE,EAAAqE,cAAC6E,EAAD,CAAS7D,aAAcA,KAEzBjB,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,4BACZ6D,GACC/D,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,qBAAhB,eACe,IACbF,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAI,uBAAV,WAFF,KAKFzE,EAAApE,EAAAqE,cAAA,UACEC,UAAU,yBACVkD,QAAS,kBACPU,EAAoBD,EAAe7H,KAGrCgE,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAMI,MANjB,WAWHT,EACCtE,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,wBAEA,KAEHsE,EACCvE,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,wDAC+C,IAC7CD,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,qBAAT,SAFF,qCAMA,KAEFH,GAAYC,GAAgBtD,EAAajD,OAOvC,KANFgC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,gDACuC,IACrCD,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,0BAAT,gBAFF,OAOFH,IAAYC,GAAetD,EAAajD,OAAS,EAC/CqG,EAAqBzB,IAAI,SAAAvB,GAAE,OACzBrB,EAAApE,EAAAqE,cAAC+E,EAADvJ,OAAAwJ,OAAA,CAAalC,IAAK1B,EAAG6D,IAAQ7D,MAE/B,OA3DRrB,EAAApE,EAAAqE,cAACkF,EAAD,iCAC4B,IAC1BnF,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,0BAAT,gBAFF,mBAzDUW,IAAMC,eAwI9BhC,EAAUiC,aAAe,CACvBzB,cAAe,GACf7H,MAAO,KACPiF,aAAc,GACdqD,SAAS,EACTC,YAAa,MAGf,IAAMgB,EAAe,SAACtE,EAAcU,GAClC,IAAI6D,EAAWvE,EAYf,OAVIU,EAAQF,OACV+D,EAAW9C,IAAEtB,OAAOoE,EAAU,SAAAnE,GAAE,OAAIA,EAAG6B,WAAavB,EAAQF,QAG1DE,EAAQxC,SACVqG,EAAW9C,IAAEtB,OAAOoE,EAAU,SAAAnE,GAAE,OAAIA,EAAGlC,OAAOuB,QAAUiB,EAAQxC,UAGlEqG,EAAW9C,IAAEhB,QAAQ8D,EAAU7D,EAAQD,QAAS,SA0BnChD,cArBS,SAAAC,GAAK,MAAK,CAChCkF,cAAelF,EAAME,SAASgF,cAC9B7H,MAAO2C,EAAME,SAAS7C,MACtB+H,mBAAoBpF,EAAME,SAASkF,mBACnCE,oBAAqBtF,EAAME,SAASoF,oBACpCM,YAAa5F,EAAMiD,UAAU2C,YAC7BD,QAAS3F,EAAMiD,UAAU0C,QACzBrD,aAActC,EAAMiD,UAAUX,aAC9BoD,qBAAsBkB,EACpB5G,EAAMiD,UAAUX,aAChBtC,EAAMiD,UAAUD,WAIO,SAAAE,GAAQ,MAAK,CACtCiC,oBAAqB,SAAC3F,EAASnC,GAC7B6F,ENxK+B,SAAC1D,EAASnC,GAAV,sBAAAR,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAoB,SAAAC,EACrD+F,EACA4D,GAFqD,IAAApH,EAAAtC,EAAA2J,EAAA,OAAA/J,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAI/C+B,EAAeoH,IAAWpH,aAAa4E,MAJQ7G,EAAAC,KAAA,EAMnDwF,EArB6C,CAC/CvD,KAN2C,kCA2BnCvC,EAAQ+B,EAA6BK,GAPQ/B,EAAAE,KAAA,EAQ7Bf,EAAIQ,EAAOC,GARkB,OAQ7C0J,EAR6CtJ,EAAAY,KASnD6E,EAASzD,EAA2BsH,EAASrH,IATMjC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuJ,GAAAvJ,EAAA,SAWnDyF,EAhBgD,CAClDvD,KAd2C,gCAe3CsH,MAcqCxJ,EAAAuJ,KAXgB,yBAAAvJ,EAAAoB,SAAA1B,EAAA2B,KAAA,aAApB,gBAAAC,EAAAC,GAAA,OAAAnC,EAAAoC,MAAAH,KAAAI,YAAA,GMwKtBkE,CAA4B5D,EAASnC,KAEhD6F,aAGanD,CAGb2E,mBClMIwC,cACJ,SAAAA,EAAY7D,GAAO,IAAAsB,EAAA,OAAA7H,OAAA8H,EAAA,EAAA9H,CAAAgC,KAAAoI,IACjBvC,EAAA7H,OAAA+H,EAAA,EAAA/H,CAAAgC,KAAAhC,OAAAgI,EAAA,EAAAhI,CAAAoK,GAAAnC,KAAAjG,KAAMuE,KACD8D,MAAQV,IAAMW,YAFFzC,wEAKV,IAAAM,EAAAnG,KAAA2G,EACqB3G,KAAKuE,MAAzBhG,EADDoI,EACCpI,MAAOgK,EADR5B,EACQ4B,SAEf,OACEhG,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,WACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,mBAAd,YAEFF,EAAApE,EAAAqE,cAAA,oFAIAD,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,QACZF,EAAApE,EAAAqE,cAAA,kBACQ,IACND,EAAApE,EAAAqE,cAAA,KACEO,KAAK,qCACL6B,OAAO,SACP4D,IAAI,uBAHN,0BAMK,IARP,aASYjG,EAAApE,EAAAqE,cAAA,+BATZ,KAWAD,EAAApE,EAAAqE,cAAA,6CACkCD,EAAApE,EAAAqE,cAAA,oBADlC,qBACsE,IACpED,EAAApE,EAAAqE,cAAA,2BAFF,KAIAD,EAAApE,EAAAqE,cAAA,qDAEFD,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,QACdF,EAAApE,EAAAqE,cAAA,SACE3B,KAAK,OACL4B,UAAU,eACVgG,YAAY,QACZC,IAAK1I,KAAKqI,MACVhD,SAAU,kBAAMkD,EAASpC,EAAKkC,MAAMM,QAAQ7D,QAC5CA,MAAOvG,aA3CGqK,aAwDtBR,EAAQP,aAAe,CACrBtJ,MAAO,MAGT,IASe0C,cATS,SAAAC,GAAK,MAAK,CAChC3C,MAAO2C,EAAME,SAAS7C,QAGG,SAAA6F,GAAQ,MAAK,CACtCmE,SAAU,SAAAzD,GAAK,OAAIV,EC9DG,SAAAU,GAAK,MAAK,CAChCjE,KATuB,YAUvBiE,SD4D4B+D,CAAyB/D,KACrDV,aAGanD,CAGbmH,WElEIU,8LAEF9I,KAAKuE,MAAMwE,oBAAoB/I,KAAKuE,MAAMhG,wCAGnC,IAAAoI,EAWH3G,KAAKuE,MATPhG,EAFKoI,EAELpI,MACAsI,EAHKF,EAGLE,QACAC,EAJKH,EAILG,YACAlG,EALK+F,EAKL/F,aACAwF,EANKO,EAMLP,cACA4C,EAPKrC,EAOLqC,eACAC,EARKtC,EAQLsC,mBACAC,EATKvC,EASLuC,oBACAH,EAVKpC,EAULoC,oBAGF,OACExG,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,WACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,mBAAd,iBAEFF,EAAApE,EAAAqE,cAAA,KAAGC,UAAU,QAAb,gEACgE,IAC9DF,EAAApE,EAAAqE,cAAA,0CAC4B,IAC1BD,EAAApE,EAAAqE,cAAA,KAAGO,KAAK,+BAAR,YAFF,sBAKFR,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,OACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,4CACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,aAAd,wBACwB,IACtBF,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,8BACb2D,EAAc7F,SAGnBgC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,wBACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,YACbF,EAAApE,EAAAqE,cAAA,UACEC,UAAU,2BACVkD,QAAS,kBACPqD,EAAepI,EAAauE,IAAI,SAAAnB,GAAI,OAAIA,EAAKyD,QAHjD,cAQAlF,EAAApE,EAAAqE,cAAA,UACEC,UAAU,2BACVkD,QAAS,kBAAMsD,MAFjB,UAOF1G,EAAApE,EAAAqE,cAAA,UACEC,UAAU,yBACVkD,QAAS,kBAAMoD,EAAoBxK,KAEnCgE,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAMI,MAJjB,WASHT,EACCtE,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,wBAEA,KAEHsE,EACCvE,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,wDAC+C,IAC7CD,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,qBAAT,SAFF,qCAMA,KAEFH,GAAYC,GAAgBlG,EAAaL,OAIvC,KAHFgC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,0CACbF,EAAApE,EAAAqE,cAAA,+DAIFqE,IAAYC,GAAelG,EAAaL,OAAS,EAC/CK,EAAauE,IAAI,SAAApH,GAAuB,IAApB0J,EAAoB1J,EAApB0J,GAAI5C,EAAgB9G,EAAhB8G,KAAMtD,EAAUxD,EAAVwD,IACtB4H,EAAM,QAAAhK,OAAWsI,GACjB2B,EAAUhD,EAAciD,SAAS5B,GAEvC,OACElF,EAAApE,EAAAqE,cAAA,OACEC,UAAU,iEACV6C,IAAKmC,GAELlF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,gCACbF,EAAApE,EAAAqE,cAAA,aACED,EAAApE,EAAAqE,cAAA,SACE3B,KAAK,WACL4G,GAAI0B,EACJ9D,SAXO,kBAAM6D,EAAoBzB,IAYjC2B,QAASA,IACR,IACFvE,IAGLtC,EAAApE,EAAAqE,cAAA,KAAGC,UAAU,yBAAyBM,KAAMxB,GAC1CgB,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAMoC,IAAkBC,KAAM,KADzC,sBAON,cAlHa5B,IAAMC,eAiIjCkB,EAAajB,aAAe,CAC1BjH,aAAc,GACdiG,SAAS,EACTC,YAAa,KACbV,cAAe,GACf7H,MAAO,MAGT,IAiBe0C,cAjBS,SAAAC,GAAK,MAAK,CAChCN,aAAcM,EAAMN,aAAa4E,MACjCqB,QAAS3F,EAAMN,aAAaiG,QAC5BC,YAAa5F,EAAMN,aAAakG,YAChCV,cAAelF,EAAME,SAASgF,cAC9B7H,MAAO2C,EAAME,SAAS7C,QAGG,SAAA6F,GAAQ,MAAK,CACtC2E,oBAAqB,SAAAxK,GAAK,OACxB6F,ECzI+B,SAAA7F,GAAK,sBAAAR,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAC,EAAM+F,GAAN,IAAA9F,EAAAkL,EAAAC,EAAAC,EAAAC,EAAA,OAAAzL,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAExCwF,EAhB6C,CAC/CvD,KAL2C,kCAqBrCvC,EAAQ+B,IAH4B1B,EAAAE,KAAA,EAIXf,EAAIQ,EAAOC,GAJA,UAIlCiL,EAJkC7K,EAAAY,KAKpCkK,EAAaD,EAAeI,OAAOC,SAASC,OAC5CN,EAAeI,OAAOC,SAASE,SAASC,YANJ,CAAArL,EAAAE,KAAA,SAOlC6K,GAAW,EAPuB,WAQ/BA,EAR+B,CAAA/K,EAAAE,KAAA,gBASpCP,EAAQ+B,EAAqBoJ,EAAWA,EAAWlJ,OAAS,GAAGD,QAT3B3B,EAAAE,KAAA,GAULf,EAAIQ,EAAOC,GAVN,QAU9BoL,EAV8BhL,EAAAY,KAWpCkK,EAAU,GAAAtK,OAAAnB,OAAAiM,EAAA,EAAAjM,CAAOyL,GAAPzL,OAAAiM,EAAA,EAAAjM,CAAsB2L,EAAiBC,OAAOC,SAASC,QACjEJ,EAAWC,EAAiBC,OAAOC,SAASE,SAASC,YAZjBrL,EAAAE,KAAA,gBAexC4K,EAAaA,EAAWtE,IAAI,SAAAnB,GAAI,MAAK,CACnCyD,GAAIzD,EAAKkG,KAAKzC,GACd5C,KAAMb,EAAKkG,KAAKrF,KAChBtD,IAAKyC,EAAKkG,KAAK3I,IACf4I,MAAOnG,EAAKkG,KAAKC,MACjB3I,UAAWwC,EAAKkG,KAAK1I,aAEvB4C,EAhC+C,CACjDvD,KAR2C,gCAS3ChB,KA8BsC4J,IAtBI9K,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuJ,GAAAvJ,EAAA,SAwBxCyF,EA7BgD,CAClDvD,KAZ2C,gCAa3CsH,MA2BqCxJ,EAAAuJ,KAxBK,yBAAAvJ,EAAAoB,SAAA1B,EAAA2B,KAAA,aAAJ,gBAAAC,GAAA,OAAAlC,EAAAoC,MAAAH,KAAAI,YAAA,GDyI3BgK,CAAwC7L,KACnD2K,oBAAqB,SAAAzB,GAAE,OAAIrD,EDlJM,SAAAqD,GAAE,MAAK,CACxC5G,KAbmC,wBAcnC4G,MCgJoCoB,CAAoCpB,KACxEuB,eAAgB,SAAAtI,GAAO,OAAI0D,ED9IC,SAAA1D,GAAO,MAAK,CACxCG,KAjB8B,mBAkB9BH,WC4IoCmI,CAA+BnI,KACnEuI,mBAAoB,kBAAM7E,ED1Ia,CACvCvD,KArBkC,0BC+JlCuD,aAGanD,CAGb6H,GEjFa7H,cAdS,SAAAC,GAAK,MAAK,CAChCoF,mBAAoBpF,EAAME,SAASkF,mBACnCE,oBAAqBtF,EAAME,SAASoF,oBACpCrF,uBAAwBD,EAAME,SAASD,yBAGd,SAAAiD,GAAQ,MAAK,CACtCiG,kBAAmB,kBAAMjG,EHrDa,CACtCvD,KAxBiC,yBG6EjCyJ,uBAAwB,SAAAC,GAAQ,OAC9BnG,EHnDkC,SAAAmG,GAAQ,MAAK,CACjD1J,KA3BuC,4BA4BvC0J,YGiDWjG,CAA+BiG,KAC1CC,sBAAuB,kBAAMpG,EH/Ca,CAC1CvD,KA/BqC,6BG8ErCuD,aAGanD,CAlFG,SAAAsD,GAAK,OACrBhC,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,WACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,mBAAd,cAEFF,EAAApE,EAAAqE,cAAA,YACED,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,iBACbF,EAAApE,EAAAqE,cAAA,aACED,EAAApE,EAAAqE,cAAA,SACE3B,KAAK,WACLuI,QAAS7E,EAAM+B,mBACfjB,SAAUd,EAAM8F,oBACf,IALL,+BAOE9H,EAAApE,EAAAqE,cAAA,UACEC,UAAU,6BACVqC,MAAOP,EAAMiC,oBACbnB,SAAU,SAAAZ,GAAC,OAAIF,EAAM+F,uBAAuB7F,EAAEG,OAAOE,SAErDvC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,KAAd,YACAvC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,KAAd,aACAvC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,MAAd,cACAvC,EAAApE,EAAAqE,cAAA,UAAQsC,MAAM,MAAd,gBAGJvC,EAAApE,EAAAqE,cAAA,KAAGiI,MAAM,QAAT,iEAIFlI,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,iBACbF,EAAApE,EAAAqE,cAAA,aACED,EAAApE,EAAAqE,cAAA,SACE3B,KAAK,WACLuI,QAAS7E,EAAMpD,uBACfkE,SAAUd,EAAMiG,wBACf,IALL,yBAQAjI,EAAApE,EAAAqE,cAAA,KAAGC,UAAU,QAAb,sBACsB,IACpBF,EAAApE,EAAAqE,cAAA,QACEC,UAAU,gDACVS,aAAW,sBACXC,MAAO,CACLnC,MAAOF,EAAmBE,MAC1BoC,YAAatC,EAAmBE,QAGjCF,EAAmBC,OACd,IAXV,MAYM,IACJwB,EAAApE,EAAAqE,cAAA,QACEC,UAAU,gDACVS,aAAW,uBACXC,MAAO,CACLnC,MAAOF,EAAmBE,MAC1BoC,YAAatC,EAAmBE,QAGjCF,EAAmBC,OACd,IAtBV,uBC8BO2J,EA7DE,SAAA3M,GAAA,IAAG4M,EAAH5M,EAAG4M,MAAH,OACfpI,EAAApE,EAAAqE,cAAAD,EAAApE,EAAA4G,SAAA,KACExC,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,4CACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,yCACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,aACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,MAAd,aAEFF,EAAApE,EAAAqE,cAAA,WACED,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,IAAIvE,UAAU,mBACrBF,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAM0D,MADjB,YAMNrI,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,YACdF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,4BACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,cACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,QACbF,EAAApE,EAAAqE,cAACqI,EAAA,EAAD,CACE7D,GAAE,GAAA7H,OAAKwL,EAAMpJ,IAAX,cACFkB,UAAU,YACVqI,gBAAgB,YAEhBvI,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAM6D,MALjB,cAOAxI,EAAApE,EAAAqE,cAACqI,EAAA,EAAD,CACE7D,GAAE,GAAA7H,OAAKwL,EAAMpJ,IAAX,YACFkB,UAAU,YACVqI,gBAAgB,YAEhBvI,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAM8D,MALjB,YAOAzI,EAAApE,EAAAqE,cAACqI,EAAA,EAAD,CACE7D,GAAE,GAAA7H,OAAKwL,EAAMpJ,IAAX,iBACFkB,UAAU,YACVqI,gBAAgB,YAEhBvI,EAAApE,EAAAqE,cAACyE,EAAA,EAAD,CAASC,KAAM+D,MALjB,mBASJ1I,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,SACbF,EAAApE,EAAAqE,cAAC0I,EAAA,EAAD,KACE3I,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOC,KAAI,GAAAjM,OAAKwL,EAAMpJ,IAAX,cAA4B8J,UAAWzF,IAClDrD,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOC,KAAI,GAAAjM,OAAKwL,EAAMpJ,IAAX,YAA0B8J,UAAWjD,IAChD7F,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CACEC,KAAI,GAAAjM,OAAKwL,EAAMpJ,IAAX,iBACJ8J,UAAWvC,IAEbvG,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CACEG,OAAK,EACLF,KAAI,GAAAjM,OAAKwL,EAAMpJ,KACfgK,OAAQ,kBAAMhJ,EAAApE,EAAAqE,cAACgJ,EAAA,EAAD,CAAUxE,GAAE,GAAA7H,OAAKwL,EAAMpJ,IAAX,yBCnDzBkK,EAXE,kBACflJ,EAAApE,EAAAqE,cAAA,QAAMC,UAAU,YACdF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,qBACbF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,cACbF,EAAApE,EAAAqE,cAAA,uBACAD,EAAApE,EAAAqE,cAAA,iECoBOkJ,SAnBH,kBACVnJ,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,OACbF,EAAApE,EAAAqE,cAAA,UAAQC,UAAU,0CAChBF,EAAApE,EAAAqE,cAAA,OAAKC,UAAU,yCACbF,EAAApE,EAAAqE,cAAA,MAAIC,UAAU,gBACZF,EAAApE,EAAAqE,cAACuE,EAAA,EAAD,CAAMC,GAAG,IAAIvE,UAAU,cAAvB,iBAMNF,EAAApE,EAAAqE,cAAC0I,EAAA,EAAD,KACE3I,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAWzF,IACjCrD,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWX,IACnCnI,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOE,UAAWI,QCJTE,EAZF,SAAA5N,GAAA,IAAG6N,EAAH7N,EAAG6N,MAAH,OACXrJ,EAAApE,EAAAqE,cAACqJ,EAAA,EAAD,CAAUD,MAAOA,GACfrJ,EAAApE,EAAAqE,cAACsJ,EAAA,EAAD,KACEvJ,EAAApE,EAAAqE,cAAC2I,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWK,gCCN3BK,GAAe,CACnBvI,aAAc,GACdU,QAAS,CACPF,KAAM,GACNtC,OAAQ,GACRuC,QAAS,aAEX4C,SAAS,EACTC,YAAa,MCTTiF,GAAe,CACnBvG,MAAO,GACPqB,SAAS,EACTC,YAAa,MCHTiF,GAAe,CACnBxN,MAAO,GACP6H,cAAe,GACfE,oBAAoB,EACpBE,oBAAqB,IACrBrF,wBAAwB,GCIX6K,GANKC,YAAgB,CAClC9H,UHsBa,WAAuC,IAdpC+H,EAcMhL,EAA8Bd,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB2L,GAAcI,EAAQ/L,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQ2L,EAAOtL,MACb,IhB3ByC,gCgB4BvC,OAAO7C,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEE2F,SAAS,EACTC,YAAa,OAEjB,IhBhCyC,gCgBiCvC,OAAO9I,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEsC,cAzBU0I,EAyBcC,EAAOtM,KAxB9BoF,IAAEC,MAAMgH,EAAIE,OAChBzI,OAAO,SAAAuG,GAAI,OAAIA,IACf/E,IAAI,SAAA+E,GAAI,OAAIjF,IAAEE,IAAI+E,EAAK1G,aAAasG,MAAO,UAC3CuC,UACAlH,IAAI,SAAAvB,GAAE,OAAA5F,OAAA0G,EAAA,EAAA1G,CAAA,GACF4F,EADE,CAEL6B,SAAU7B,EAAGjC,WAAWqB,kBAEzBiB,QAAQ,aACRqI,UACAxH,SAeG+B,SAAS,EACTC,YAAa,OAEjB,IhBtCyC,gCgBuCvC,OAAO9I,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEsC,aAAc,GACdsD,YAAaqF,EAAOhE,MACpBtB,SAAS,IAEb,IhB5CuB,cgB6CrB,OAAO7I,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEgD,QAASiI,EAAOjI,UAEpB,QACE,OAAOhD,IGjDXN,aFCa,WAAuC,IAA9BM,EAA8Bd,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB2L,GAAcI,EAAQ/L,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQ2L,EAAOtL,MACb,IPPyC,gCOQvC,OAAO7C,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEE2F,SAAS,EACTC,YAAa,OAEjB,IPZyC,gCOavC,OAAO9I,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEsE,MAAO2G,EAAOtM,KACdiH,YAAa,KACbD,SAAS,IAEb,IPlByC,gCOmBvC,OAAO7I,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEsE,MAAO,GACPsB,YAAaqF,EAAOhE,MACpBtB,SAAS,IAEb,QACE,OAAO3F,IEvBXE,SDEa,WAAuC,IAA9BF,EAA8Bd,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAtB2L,GAAcI,EAAQ/L,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQ2L,EAAOtL,MACb,IVZqB,YUanB,OAAO7C,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEE3C,MAAO4N,EAAOrH,QAElB,IVhBiC,wBUiB/B,OAAO5D,EAAMkF,cAAciD,SAAS8C,EAAO1E,IAApCzJ,OAAA0G,EAAA,EAAA1G,CAAA,GAEEkD,EAFF,CAGDkF,cAAelF,EAAMkF,cAAczC,OACjC,SAAA4I,GAAM,OAAIA,IAAWJ,EAAO1E,OAJ7BzJ,OAAA0G,EAAA,EAAA1G,CAAA,GAQEkD,EARF,CASDkF,cAAa,GAAAjH,OAAAnB,OAAAiM,EAAA,EAAAjM,CAAMkD,EAAMkF,eAAZ,CAA2B+F,EAAO1E,OAEvD,IV3B4B,mBU4B1B,OAAOzJ,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEkF,cAAcpI,OAAAiM,EAAA,EAAAjM,CAAKmO,EAAOzL,WAE9B,IV/BgC,uBUgC9B,OAAO1C,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEkF,cAAe,KAEnB,IVnC+B,sBUoC7B,OAAOpI,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEoF,oBAAqBpF,EAAMoF,qBAE/B,IVvCqC,4BUwCnC,OAAOtI,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEsF,oBAAqB2F,EAAO5B,WAEhC,IV3CmC,0BU4CjC,OAAOvM,OAAA0G,EAAA,EAAA1G,CAAA,GACFkD,EADL,CAEEC,wBAAyBD,EAAMC,yBAEnC,QACE,OAAOD,MEhDP0K,GCDiB,WACrB,IAAMY,ECLiB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAJpB,YAKjB,GAAwB,OAApBF,EACF,OAEF,OAAOpN,KAAKuN,MAAMH,GAClB,MAAOI,GACP,QDHqBC,GACjBC,EAAc,CAACC,MAMrB,OAAOC,YACLjB,GACAQ,EACAU,IAAe/M,WAAf,EAAmB4M,IDVTI,GAEdvB,GAAMwB,UACJC,mBAAS,YEIc,SAAAnM,GACvB,IACE,IAAMuL,EAAkBpN,KAAKC,UAAU4B,GACvCwL,aAAaY,QAjBI,WAiBkBb,GACnC,MAAOI,KFPPU,CAAU,CACRnM,SAAUwK,GAAM5D,WAAW5G,SAC3B+C,UAAWyH,GAAM5D,WAAW7D,UAC5BvD,aAAcgL,GAAM5D,WAAWpH,iBAGnC,KAGF2K,iBAAOhJ,EAAApE,EAAAqE,cAACgL,EAAD,CAAM5B,MAAOA,KAAW6B,SAASC,eAAe","file":"static/js/main.31e8ba67.chunk.js","sourcesContent":["const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n            orderBy: { field: CREATED_AT, direction: DESC }\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (data, watchedRepos) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  data,\r\n  watchedRepos\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const watchedRepos = getState().watchedRepos.repos;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const results = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(results, watchedRepos));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","export const PR_STALENESS = {\r\n  FRESH: {\r\n    label: \"Fresh\",\r\n    color: \"#28a745\"\r\n  },\r\n  STALE: {\r\n    label: \"Stale\",\r\n    color: \"#6f42c1\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatDistance, differenceInDays } from \"date-fns\";\r\nimport { PR_STALENESS } from \"../../constants\";\r\n\r\nconst getPRStaleness = date => {\r\n  const difference = differenceInDays(new Date(date), new Date());\r\n\r\n  if (difference > -7) {\r\n    return PR_STALENESS.FRESH;\r\n  }\r\n\r\n  if (difference < -28) {\r\n    return PR_STALENESS.STALE;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  repository,\r\n  stalenessLabelsEnabled\r\n}) => {\r\n  const now = new Date();\r\n  const relativeTime = field =>\r\n    formatDistance(field, now, {\r\n      addSuffix: true\r\n    });\r\n  const status = getPRStaleness(updatedAt);\r\n\r\n  return (\r\n    <div className=\"Box-row Box-row--hover-gray d-flex\">\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <img\r\n            className=\"avatar\"\r\n            src={author.avatarUrl}\r\n            width=\"48\"\r\n            height=\"48\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto pr-3\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          #{number} opened{\" \"}\r\n          <span title={createdAt}>{relativeTime(createdAt)}</span> by{\" \"}\r\n          <a href={author.url} className=\"muted-link\">\r\n            {author.login}\r\n          </a>\r\n          {stalenessLabelsEnabled && status && (\r\n            <span\r\n              className=\"Label Label--outline ml-1 tooltipped tooltipped-sw\"\r\n              aria-label={`Last updated ${relativeTime(updatedAt)}`}\r\n              style={{ color: status.color, borderColor: status.color }}\r\n            >\r\n              {status.label}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stalenessLabelsEnabled: state.settings.stalenessLabelsEnabled\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { isSameMonth } from \"date-fns\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stats = ({ pullRequests }) => {\r\n  const now = new Date();\r\n  const total = pullRequests.length || 0;\r\n  const openedThisMonth =\r\n    pullRequests.filter(pr => isSameMonth(new Date(pr.createdAt), now))\r\n      .length || 0;\r\n  const updatedThisMonth =\r\n    pullRequests.filter(pr => isSameMonth(new Date(pr.updatedAt), now))\r\n      .length || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex mb-4\">\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Total open</h3>\r\n        <span className=\"f1\">{total}</span>\r\n      </div>\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Opened this month</h3>\r\n        <span className=\"f1\">{openedThisMonth}</span>\r\n      </div>\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Updated this month</h3>\r\n        <span className=\"f1\">{updatedThisMonth}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape())\r\n};\r\n\r\nexport default Stats;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = _.chain(props.pullRequests)\r\n      .map(pr => pr.author)\r\n      .uniqBy(\"login\")\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {authors.map(({ login }) => (\r\n          <option key={login} value={login}>\r\n            {login}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = _.chain(props.pullRequests)\r\n      .map(pr => pr.repoName)\r\n      .uniqBy()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {repos.map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"createdAt\"}>newest</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show:</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport * as actions from \"../../actions/dashboard\";\r\nimport PullRequest from \"./pull-request\";\r\nimport Flash from \"../common/flash\";\r\nimport Stats from \"./stats\";\r\nimport Filters from \"./filters\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      this.props.requestPullRequests(\r\n        this.props.selectedRepos,\r\n        this.props.token\r\n      );\r\n\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <Stats pullRequests={pullRequests} />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters pullRequests={pullRequests} />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/dashboard\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                      >\r\n                        <Octicon icon={SyncIcon} /> Sync\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {loading ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>Loading...</p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {githubError ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && !pullRequests.length ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>\r\n                        No pull requests were found for your{\" \"}\r\n                        <Link to=\"/settings/repositories\">repositories</Link>.\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && pullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.repo) {\r\n    filtered = _.filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = _.filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  filtered = _.orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  filteredPullRequests: applyFilters(\r\n    state.dashboard.pullRequests,\r\n    state.dashboard.filters\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(actions.requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_STALENESS_LABELS = \"TOGGLE_STALENESS_LABELS\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleStalenessLabels = () => ({\r\n  type: TOGGLE_STALENESS_LABELS\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Sync as SyncIcon,\r\n  LinkExternal as LinkExternalIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.requestWatchedRepos(this.props.token);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n              >\r\n                <Octicon icon={SyncIcon} /> Sync\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.string,\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\nimport { PR_STALENESS } from \"../../constants\";\r\n\r\nconst Dashboard = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Dashboard</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh dashboard every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n        <p class=\"note\">\r\n          Refreshes the dashboard with new pull requests periodically.\r\n        </p>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.stalenessLabelsEnabled}\r\n            onChange={props.toggleStalenessLabels}\r\n          />{\" \"}\r\n          Show staleness labels\r\n        </label>\r\n        <p className=\"note\">\r\n          Displays a label on{\" \"}\r\n          <span\r\n            className=\"Label Label--outline tooltipped tooltipped-sw\"\r\n            aria-label=\"Updated <7 days ago\"\r\n            style={{\r\n              color: PR_STALENESS.FRESH.color,\r\n              borderColor: PR_STALENESS.FRESH.color\r\n            }}\r\n          >\r\n            {PR_STALENESS.FRESH.label}\r\n          </span>{\" \"}\r\n          and{\" \"}\r\n          <span\r\n            className=\"Label Label--outline tooltipped tooltipped-sw\"\r\n            aria-label=\"Updated >28 days ago\"\r\n            style={{\r\n              color: PR_STALENESS.STALE.color,\r\n              borderColor: PR_STALENESS.STALE.color\r\n            }}\r\n          >\r\n            {PR_STALENESS.STALE.label}\r\n          </span>{\" \"}\r\n          pull requests.\r\n        </p>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  stalenessLabelsEnabled: state.settings.stalenessLabelsEnabled\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleStalenessLabels: () => dispatch(actions.toggleStalenessLabels()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { Link, NavLink, Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon,\r\n  Dashboard as DashboardIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport Account from \"./account\";\r\nimport Repositories from \"./repositories\";\r\nimport Dashboard from \"./dashboard\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/dashboard`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={DashboardIcon} /> Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/dashboard`} component={Dashboard} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/dashboard`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\nimport NotFound from \"./common/not-found\";\r\n\r\nimport \"../../node_modules/primer/build/build.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import _ from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    orderBy: \"updatedAt\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatPrs = prs => {\r\n  return _.chain(prs.nodes)\r\n    .filter(node => node)\r\n    .map(node => _.map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => ({\r\n      ...pr,\r\n      repoName: pr.repository.nameWithOwner\r\n    }))\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pullRequests: formatPrs(action.data),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  stalenessLabelsEnabled: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_STALENESS_LABELS:\r\n      return {\r\n        ...state,\r\n        stalenessLabelsEnabled: !state.stalenessLabelsEnabled\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport watchedRepos from \"./watchedRepos\";\r\nimport settings from \"./settings\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState } from \"./localStorage\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}