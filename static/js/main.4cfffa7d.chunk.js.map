{"version":3,"sources":["components/common/not-found.js","githubApi.js","actions/dashboard.js","components/common/flash.js","components/dashboard/filters.js","components/dashboard/pull-request.js","components/dashboard/index.js","components/settings/account.js","actions/settings.js","components/settings/dashboard.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/app.js","components/root.js","reducers/dashboard.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["NotFound","react_default","a","createElement","className","get","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","this","_x","_x2","apply","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","watchedRepos","type","Flash","children","DEFAULT_FILTERS","repo","author","orderBy","connect","state","filters","dashboard","dispatch","setFilters","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","filteredCount","authors","_","chain","pullRequests","map","pr","uniqBy","onChange","style","width","login","key","renderAuthorsSelect","repos","repoName","renderReposSelect","reviewStates","reviewState","compact","renderReviewStateSelect","onClick","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","markAsNewEnabled","settings","markAsNewInterval","number","title","url","createdAt","updatedAt","assignees","repository","now","Date","relativeTime","field","formatDistance","addSuffix","date","differenceInDays","getNewClass","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","assignee","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","selectedRepos","autoRefreshEnabled","setInterval","requestPullRequests","autoRefreshInterval","window","clearInterval","_this$props","filteredPullRequests","loading","githubError","Link","to","index_esm","icon","SettingsIcon","dashboard_filters","SyncIcon","pull_request","assign","id","flash","React","PureComponent","defaultProps","applyFilters","filtered","filter","getState","results","t0","error","Account","input","createRef","setToken","rel","placeholder","ref","current","Component","settingsActions","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleMarkAsNew","setMarkAsNewInterval","checked","Repositories","selectAllRepos","resetSelectedRepos","toggleRepoSelection","requestWatchedRepos","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","Settings","match","CloudUploadIcon","NavLink","activeClassName","DashboardIcon","PersonIcon","RepoIcon","Switch","Route","path","component","exact","render","Redirect","App","Root","store","es","HashRouter","initialState","formatReviewState","replace","toLowerCase","getReviewState","reviews","reviewRequests","rootReducer","combineReducers","prs","action","nodes","flatten","reverse","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"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","file":"static/js/main.4cfffa7d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                assignees(last: 10) {\r\n                  edges {\r\n                    node {\r\n                      avatarUrl(size: 40)\r\n                      login\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (data, watchedRepos) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  data,\r\n  watchedRepos\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const watchedRepos = getState().watchedRepos.repos;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const results = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(results, watchedRepos));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = _.chain(props.pullRequests)\r\n      .map(pr => pr.author)\r\n      .uniqBy(\"login\")\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {authors.map(({ login }) => (\r\n          <option key={login} value={login}>\r\n            {login}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = _.chain(props.pullRequests)\r\n      .map(pr => pr.repoName)\r\n      .uniqBy()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {repos.map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReviewStateSelect = () => {\r\n    const reviewStates = _.chain(props.pullRequests)\r\n      .map(pr => pr.reviewState)\r\n      .uniqBy()\r\n      .compact()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"reviewState\"\r\n        value={props.filters.reviewState}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all review states</option>\r\n        {reviewStates.map(state => (\r\n          <option key={state} value={state}>\r\n            {state}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"createdAt\"}>newest</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show ({props.filteredCount}):</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      {renderReviewStateSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { formatDistance, differenceInDays } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"Label--gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  assignees,\r\n  repository,\r\n  reviewState,\r\n  filters,\r\n  markAsNewEnabled,\r\n  markAsNewInterval\r\n}) => {\r\n  const now = new Date();\r\n  const relativeTime = field => formatDistance(field, now, { addSuffix: true });\r\n  const getNewClass = () => {\r\n    if (!markAsNewEnabled || !filters) {\r\n      return \"\";\r\n    }\r\n\r\n    const date = filters.orderBy === \"updatedAt\" ? updatedAt : createdAt;\r\n    const difference = differenceInDays(new Date(date), now);\r\n    if (difference > -markAsNewInterval) {\r\n      return \" Box-row--unread\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={`Box-row Box-row--hover-gray d-flex${getNewClass()}`}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>#{number} </span>\r\n          {filters && filters.orderBy === \"updatedAt\" ? (\r\n            <span>\r\n              updated <span title={updatedAt}>{relativeTime(updatedAt)}</span>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              opened <span title={createdAt}>{relativeTime(createdAt)}</span>\r\n            </span>\r\n          )}\r\n          <span> by </span>\r\n          <span>\r\n            <a href={author.url} className=\"muted-link\">\r\n              {author.login}\r\n            </a>\r\n          </span>\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {assignees.length > 0 ? (\r\n        <div className=\"pl-3\">\r\n          {assignees.map(assignee => (\r\n            <div className=\"d-flex\" key={assignee.login}>\r\n              <a\r\n                href={assignee.url}\r\n                className=\"pl-1 tooltipped tooltipped-sw\"\r\n                aria-label={`Assigned to ${assignee.login}`}\r\n              >\r\n                <img\r\n                  className=\"avatar rounded-1\"\r\n                  src={assignee.avatarUrl}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters,\r\n  markAsNewEnabled: state.settings.markAsNewEnabled,\r\n  markAsNewInterval: state.settings.markAsNewInterval\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/dashboard\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <div className=\"Box\">\r\n                <div className=\"Box-header d-flex flex-items-center\">\r\n                  <div className=\"flex-auto d-flex flex-items-center\">\r\n                    <Filters\r\n                      pullRequests={pullRequests}\r\n                      filteredCount={filteredPullRequests.length}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-flex flex-items-center\">\r\n                    {autoRefreshEnabled && (\r\n                      <span className=\"text-gray mr-2 f6\">\r\n                        Auto refresh{\" \"}\r\n                        <Link to={\"/settings/dashboard\"}>enabled</Link>.\r\n                      </span>\r\n                    )}\r\n                    <button\r\n                      className=\"btn btn-sm btn-primary\"\r\n                      onClick={() => requestPullRequests(selectedRepos, token)}\r\n                    >\r\n                      <Octicon icon={SyncIcon} /> Sync\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {loading ? (\r\n                  <div className=\"blankslate blankslate-clean-background\">\r\n                    <p>Loading...</p>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {githubError ? (\r\n                  <div className=\"blankslate blankslate-clean-background\">\r\n                    <p>\r\n                      Error fetching data from GitHub. Ensure your{\" \"}\r\n                      <Link to=\"/settings/account\">token</Link> is set correctly\r\n                      and try again.\r\n                    </p>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {!loading && !githubError && !filteredPullRequests.length ? (\r\n                  <div className=\"blankslate blankslate-clean-background\">\r\n                    <p>No pull requests were found.</p>\r\n                  </div>\r\n                ) : null}\r\n\r\n                {!loading && !githubError && filteredPullRequests.length > 0\r\n                  ? filteredPullRequests.map(pr => (\r\n                      <PullRequest key={pr.id} {...pr} />\r\n                    ))\r\n                  : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.repo) {\r\n    filtered = _.filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = _.filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = _.filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  filtered = _.orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  filteredPullRequests: applyFilters(\r\n    state.dashboard.pullRequests,\r\n    state.dashboard.filters\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(actions.requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_MARK_AS_NEW = \"TOGGLE_MARK_AS_NEW\";\r\nexport const SET_MARK_AS_NEW_INTERVAL = \"SET_MARK_AS_NEW_INTERVAL\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleMarkAsNew = () => ({\r\n  type: TOGGLE_MARK_AS_NEW\r\n});\r\n\r\nexport const setMarkAsNewInterval = interval => ({\r\n  type: SET_MARK_AS_NEW_INTERVAL,\r\n  interval\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst Dashboard = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Dashboard</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh dashboard every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n        <p className=\"note\">\r\n          Refreshes the dashboard with new pull requests periodically.\r\n        </p>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.markAsNewEnabled}\r\n            onChange={props.toggleMarkAsNew}\r\n          />{\" \"}\r\n          Mark pull requests as new if older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.markAsNewInterval}\r\n            onChange={e => props.setMarkAsNewInterval(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n        <p className=\"note\">\r\n          Displays an indicator on the left side of the pull request.\r\n        </p>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  markAsNewEnabled: state.settings.markAsNewEnabled,\r\n  markAsNewInterval: state.settings.markAsNewInterval\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleMarkAsNew: () => dispatch(actions.toggleMarkAsNew()),\r\n  setMarkAsNewInterval: interval =>\r\n    dispatch(actions.setMarkAsNewInterval(interval)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n              >\r\n                <Octicon icon={SyncIcon} /> Sync\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/dashboard`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={DashboardIcon} /> Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/dashboard`} component={Dashboard} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/dashboard`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport \"../../node_modules/primer/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import _ from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getReviewState = (reviews, reviewRequests) => {\r\n  // Expected values: \"PENDING\", \"COMMENTED\", \"APPROVED\",\r\n  // \"CHANGES_REQUESTED\", \"DISMISSED\", or \"REVIEW_REQUESTED\" (custom).\r\n  // We take the last review's state, replace any underscores, and make it\r\n  // lowercase so it can be dispayed nicely to the user.\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = \"REVIEW_REQUESTED\";\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst formatPrs = prs => {\r\n  return _.chain(prs.nodes)\r\n    .filter(node => node)\r\n    .map(node => _.map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => ({\r\n      ...pr,\r\n      repoName: pr.repository.nameWithOwner,\r\n      reviewState: getReviewState(\r\n        _.map(pr.reviews.edges, \"node\"),\r\n        _.map(pr.reviewRequests.edges, \"node\")\r\n      ),\r\n      assignees: _.map(pr.assignees.edges, \"node\")\r\n    }))\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pullRequests: formatPrs(action.data),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  markAsNewEnabled: true,\r\n  markAsNewInterval: 5\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_MARK_AS_NEW:\r\n      return {\r\n        ...state,\r\n        markAsNewEnabled: !state.markAsNewEnabled\r\n      };\r\n    case actions.SET_MARK_AS_NEW_INTERVAL:\r\n      return {\r\n        ...state,\r\n        markAsNewInterval: action.interval\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}