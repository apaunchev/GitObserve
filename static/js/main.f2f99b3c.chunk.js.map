{"version":3,"sources":["components/common/not-found.js","githubApi.js","actions/dashboard.js","components/common/flash.js","components/dashboard/filters.js","components/dashboard/pull-request.js","components/dashboard/index.js","components/settings/account.js","actions/settings.js","components/settings/dashboard.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/app.js","components/root.js","reducers/dashboard.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["NotFound","react_default","a","createElement","className","get","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","_x","_x2","apply","this","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","setFilters","filters","Flash","children","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","dashboard","dispatch","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","filteredCount","authors","_","chain","pullRequests","map","pr","uniqBy","onChange","style","width","login","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","number","title","url","createdAt","updatedAt","assignees","repository","isNew","relativeTime","field","formatDistance","parseISO","Date","addSuffix","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","assignee","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleReviewStateChange","preventDefault","dataset","updateInterval","_this2","selectedRepos","autoRefreshEnabled","setInterval","requestPullRequests","autoRefreshInterval","window","clearInterval","_this$props","filteredPullRequests","loading","githubError","react_router_dom","to","index_esm","icon","SettingsIcon","data-review-state","paddingLeft","placeholder","SearchIcon","dashboard_filters","disabled","SyncIcon","pull_request","assign","id","flash","React","PureComponent","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","hideOldThreshold","toLowerCase","authorLogin","indexOf","settings","extend","getState","t0","error","Account","input","createRef","setToken","rel","ref","current","Component","settingsActions","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleHideOld","setHideOldThreshold","threshold","checked","Repositories","watchedRepos","selectAllRepos","resetSelectedRepos","toggleRepoSelection","requestWatchedRepos","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","Settings","match","CloudUploadIcon","activeClassName","DashboardIcon","PersonIcon","RepoIcon","react_router","path","component","exact","render","App","Root","store","es","initialState","formatReviewState","replace","getReviewState","reviews","reviewRequests","formatPrs","oldPrsById","nodes","flatten","reverse","rootReducer","combineReducers","action","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"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","file":"static/js/main.f2f99b3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                assignees(last: 10) {\r\n                  edges {\r\n                    node {\r\n                      avatarUrl(size: 40)\r\n                      login\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  newPrs,\r\n  oldPrs\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const oldPrs = getState().dashboard.pullRequests;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const newPrs = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\",\r\n  reviewState: \"\",\r\n  searchQuery: \"\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = _.chain(props.pullRequests)\r\n      .map(pr => pr.author)\r\n      .uniqBy(\"login\")\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {authors.map(({ login }) => (\r\n          <option key={login} value={login}>\r\n            {login}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = _.chain(props.pullRequests)\r\n      .map(pr => pr.repoName)\r\n      .uniqBy()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {repos.map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"createdAt\"}>newest</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show ({props.filteredCount}):</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import { formatDistance, parseISO } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"Label--gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  assignees,\r\n  repository,\r\n  reviewState,\r\n  isNew,\r\n  filters\r\n}) => {\r\n  const relativeTime = field =>\r\n    formatDistance(parseISO(field), new Date(), { addSuffix: true });\r\n  let className = \"Box-row Box-row--hover-gray d-flex\";\r\n  if (isNew) className += \" Box-row--unread\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>#{number} </span>\r\n          {filters && filters.orderBy === \"updatedAt\" ? (\r\n            <span>\r\n              updated <span title={updatedAt}>{relativeTime(updatedAt)}</span>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              opened <span title={createdAt}>{relativeTime(createdAt)}</span>\r\n            </span>\r\n          )}\r\n          <span> by </span>\r\n          <span>\r\n            <a href={author.url} className=\"muted-link\">\r\n              {author.login}\r\n            </a>\r\n          </span>\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {assignees.length > 0 ? (\r\n        <div className=\"pl-3\">\r\n          {assignees.map(assignee => (\r\n            <div className=\"d-flex\" key={assignee.login}>\r\n              <a\r\n                href={assignee.url}\r\n                className=\"pl-1 tooltipped tooltipped-sw\"\r\n                aria-label={`Assigned to ${assignee.login}`}\r\n              >\r\n                <img\r\n                  className=\"avatar rounded-1\"\r\n                  src={assignee.avatarUrl}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon,\r\n  Search as SearchIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport _ from \"lodash\";\r\nimport { differenceInDays } from \"date-fns\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/dashboard\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  handleReviewStateChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.setFilters({\r\n      ...this.props.filters,\r\n      reviewState: e.target.dataset.reviewState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled,\r\n      filters,\r\n      setFilters\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <div className=\"subnav d-flex\">\r\n                  <nav className=\"subnav-links flex-auto\">\r\n                    <a\r\n                      href=\"/\"\r\n                      data-review-state=\"\"\r\n                      onClick={this.handleReviewStateChange}\r\n                      className={`subnav-item${\r\n                        filters.reviewState === \"\" ? \" selected\" : \"\"\r\n                      }`}\r\n                    >\r\n                      All\r\n                    </a>\r\n                    <a\r\n                      href=\"/\"\r\n                      data-review-state=\"review requested\"\r\n                      onClick={this.handleReviewStateChange}\r\n                      className={`subnav-item${\r\n                        filters.reviewState === \"review requested\"\r\n                          ? \" selected\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      Review requested\r\n                    </a>\r\n                    <a\r\n                      href=\"/\"\r\n                      data-review-state=\"changes requested\"\r\n                      onClick={this.handleReviewStateChange}\r\n                      className={`subnav-item${\r\n                        filters.reviewState === \"changes requested\"\r\n                          ? \" selected\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      Changes requested\r\n                    </a>\r\n                    <a\r\n                      href=\"/\"\r\n                      data-review-state=\"commented\"\r\n                      onClick={this.handleReviewStateChange}\r\n                      className={`subnav-item${\r\n                        filters.reviewState === \"commented\" ? \" selected\" : \"\"\r\n                      }`}\r\n                    >\r\n                      Commented\r\n                    </a>\r\n                    <a\r\n                      href=\"/\"\r\n                      data-review-state=\"approved\"\r\n                      onClick={this.handleReviewStateChange}\r\n                      className={`subnav-item${\r\n                        filters.reviewState === \"approved\" ? \" selected\" : \"\"\r\n                      }`}\r\n                    >\r\n                      Approved\r\n                    </a>\r\n                  </nav>\r\n                  <div className=\"subnav-search col-3\">\r\n                    <input\r\n                      type=\"search\"\r\n                      name=\"name\"\r\n                      className=\"form-control input-contrast\"\r\n                      style={{ width: \"100%\", paddingLeft: 28 }}\r\n                      placeholder=\"Search pull requests...\"\r\n                      value={filters.searchQuery}\r\n                      onChange={e =>\r\n                        setFilters({\r\n                          ...filters,\r\n                          searchQuery: e.target.value\r\n                        })\r\n                      }\r\n                    />\r\n                    <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters\r\n                        pullRequests={pullRequests}\r\n                        filteredCount={filteredPullRequests.length}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/dashboard\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                        disabled={loading}\r\n                      >\r\n                        <Octicon icon={SyncIcon} />{\" \"}\r\n                        {loading ? \"Loading...\" : \"Refresh\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {githubError ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && !filteredPullRequests.length ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>No pull requests were found.</p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!githubError && filteredPullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.hideOldEnabled) {\r\n    filtered = _.filter(filtered, pr => {\r\n      return (\r\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\r\n        -filters.hideOldThreshold\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.repo) {\r\n    filtered = _.filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = _.filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = _.filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  if (filters.searchQuery) {\r\n    filtered = _.filter(filtered, pr => {\r\n      const searchQuery = filters.searchQuery.toLowerCase();\r\n      const repoName = pr.repoName.toLowerCase();\r\n      const title = pr.title.toLowerCase();\r\n      const authorLogin = pr.author.login.toLowerCase();\r\n\r\n      return (\r\n        repoName.indexOf(searchQuery) > -1 ||\r\n        title.indexOf(searchQuery) > -1 ||\r\n        authorLogin.indexOf(searchQuery) > -1\r\n      );\r\n    });\r\n  }\r\n\r\n  filtered = _.orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  filters: state.dashboard.filters,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  filteredPullRequests: applyFilters(\r\n    state.dashboard.pullRequests,\r\n    _.extend(\r\n      {\r\n        hideOldEnabled: state.settings.hideOldEnabled,\r\n        hideOldThreshold: state.settings.hideOldThreshold\r\n      },\r\n      state.dashboard.filters\r\n    )\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(actions.requestPullRequests(repoIds, token));\r\n  },\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\r\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleHideOld = () => ({\r\n  type: TOGGLE_HIDE_OLD\r\n});\r\n\r\nexport const setHideOldThreshold = threshold => ({\r\n  type: SET_HIDE_OLD_THRESHOLD,\r\n  threshold\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst Dashboard = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Dashboard</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh dashboard every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideOldEnabled}\r\n            onChange={props.toggleHideOld}\r\n          />{\" \"}\r\n          Hide pull requests older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.hideOldThreshold}\r\n            onChange={e => props.setHideOldThreshold(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  hideOldEnabled: state.settings.hideOldEnabled,\r\n  hideOldThreshold: state.settings.hideOldThreshold\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\r\n  setHideOldThreshold: interval =>\r\n    dispatch(actions.setHideOldThreshold(interval)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/dashboard`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={DashboardIcon} /> Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/dashboard`} component={Dashboard} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/dashboard`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport \"../../node_modules/@primer/css/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import _ from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\",\r\n    searchQuery: \"\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getReviewState = (reviews, reviewRequests) => {\r\n  // Expected values: \"PENDING\", \"COMMENTED\", \"APPROVED\",\r\n  // \"CHANGES_REQUESTED\", \"DISMISSED\", or \"REVIEW_REQUESTED\" (custom).\r\n  // We take the last review's state, replace any underscores, and make it\r\n  // lowercase so it can be dispayed nicely to the user.\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = \"REVIEW_REQUESTED\";\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst formatPrs = (newPrs, oldPrs) => {\r\n  const oldPrsById = _.map(oldPrs, \"id\");\r\n\r\n  return _.chain(newPrs.nodes)\r\n    .filter(node => node)\r\n    .map(node => _.map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => ({\r\n      ...pr,\r\n      repoName: pr.repository.nameWithOwner,\r\n      reviewState: getReviewState(\r\n        _.map(pr.reviews.edges, \"node\"),\r\n        _.map(pr.reviewRequests.edges, \"node\")\r\n      ),\r\n      assignees: _.map(pr.assignees.edges, \"node\"),\r\n      isNew: !oldPrsById.includes(pr.id)\r\n    }))\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pullRequests: formatPrs(action.newPrs, action.oldPrs),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  hideOldEnabled: false,\r\n  hideOldThreshold: 30\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_HIDE_OLD:\r\n      return {\r\n        ...state,\r\n        hideOldEnabled: !state.hideOldEnabled\r\n      };\r\n    case actions.SET_HIDE_OLD_THRESHOLD:\r\n      return {\r\n        ...state,\r\n        hideOldThreshold: action.threshold\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}