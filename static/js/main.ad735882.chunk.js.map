{"version":3,"sources":["reducers/dashboard.js","githubApi.js","actions/dashboard.js","components/PullRequest.js","components/Dashboard.js","components/Account.js","actions/settings.js","components/Repositories.js","actions/watchedRepos.js","components/Settings.js","components/NotFound.js","components/App.js","components/Root.js","reducers/watchedRepos.js","reducers/settings.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["pullRequests","get","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","this","_x","_x2","apply","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","watchedRepos","type","PR_STATUS","getPRStatus","date","difference","differenceInDays","Date","PullRequest","number","title","url","createdAt","updatedAt","author","repository","now","react_default","createElement","className","avatarUrl","src","width","height","alt","href","nameWithOwner","formatDistance","login","aria-label","Dashboard","state","orderByField","sortByRepo","filterByAuthor","handleInputChange","event","target","value","checked","name","_this","setState","defineProperty","props","selectedRepos","requestPullRequests","_this$state","_this$props","loading","githubError","authors","orderFields","orderDirections","formattedPrs","_","map","pr","objectSpread","repoName","chain","uniqBy","unshift","orderBy","filter","Fragment","Link","to","index_esm","icon","SettingsIcon","GitPullRequestIcon","size","onChange","key","onClick","SyncIcon","components_PullRequest","assign","id","React","PureComponent","connect","settings","dashboard","dispatch","getState","results","repos","t0","error","Account","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","createRef","_this2","setToken","rel","placeholder","ref","current","Component","settingsActions","Repositories","requestWatchedRepos","selectAllRepos","resetSelectedRepos","toggleRepoSelection","repo","htmlId","includes","LinkExternalIcon","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","Settings","match","CloudUploadIcon","NavLink","activeClassName","PersonIcon","RepoIcon","Switch","Route","exact","path","render","Redirect","component","NotFound","App","Root","store","es","HashRouter","initialState","rootReducer","combineReducers","action","nodes","edge","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","components_Root","document","getElementById"],"mappings":"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","file":"static/js/main.ad735882.chunk.js","sourcesContent":["import * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nlet pullRequests;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      pullRequests = action.data.nodes\r\n        .filter(node => node)\r\n        .map(node => node.pullRequests.edges.map(edge => edge.node));\r\n      pullRequests = [].concat(...pullRequests);\r\n\r\n      return {\r\n        ...state,\r\n        pullRequests,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n            orderBy: { field: CREATED_AT, direction: DESC }\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl\r\n                  login\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (data, watchedRepos) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  data,\r\n  watchedRepos\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const watchedRepos = getState().watchedRepos.repos;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const results = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(results, watchedRepos));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { formatDistance, differenceInDays } from \"date-fns\";\r\n\r\nconst PR_STATUS = {\r\n  FRESH: \"bg-green\",\r\n  STALE: \"bg-blue\",\r\n  ROTTEN: \"bg-purple\"\r\n};\r\n\r\nconst getPRStatus = date => {\r\n  const difference = differenceInDays(new Date(date), new Date());\r\n\r\n  if (difference > -7) {\r\n    return PR_STATUS.FRESH;\r\n  }\r\n\r\n  if (difference <= -7 && difference >= -28) {\r\n    return PR_STATUS.STALE;\r\n  }\r\n\r\n  if (difference < -28) {\r\n    return PR_STATUS.ROTTEN;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  repository\r\n}) => {\r\n  const now = new Date();\r\n\r\n  return (\r\n    <div className=\"Box-row Box-row--hover-gray d-flex\">\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <img\r\n            className=\"avatar\"\r\n            src={author.avatarUrl}\r\n            width=\"48\"\r\n            height=\"48\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto pr-3\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          #{number} opened{\" \"}\r\n          <span title={createdAt}>{formatDistance(createdAt, now)} ago</span> by{\" \"}\r\n          <a href={author.url} className=\"muted-link\">\r\n            {author.login}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex flex-items-center\">\r\n        <span\r\n          className={`d-inline-block px-3 py-1 rounded-1 text-white no-wrap tooltipped tooltipped-s ${getPRStatus(\r\n            updatedAt\r\n          )}`}\r\n          aria-label={`Last updated ${formatDistance(updatedAt, now)} ago`}\r\n        >\r\n          {formatDistance(updatedAt, now)} ago\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PullRequest;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon,\r\n  GitPullRequest as GitPullRequestIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { requestPullRequests } from \"../actions/dashboard\";\r\nimport PullRequest from \"./PullRequest\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  state = {\r\n    orderByField: \"updatedAt\",\r\n    sortByRepo: false,\r\n    filterByAuthor: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      this.props.requestPullRequests(\r\n        this.props.selectedRepos,\r\n        this.props.token\r\n      );\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { orderByField, sortByRepo, filterByAuthor } = this.state;\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token\r\n    } = this.props;\r\n    let authors = [];\r\n    let orderFields = [orderByField];\r\n    let orderDirections = [\"desc\"];\r\n    let formattedPrs = [];\r\n\r\n    if (pullRequests.length > 0) {\r\n      formattedPrs = _.map(pullRequests, pr => ({\r\n        ...pr,\r\n        repoName: pr.repository.nameWithOwner\r\n      }));\r\n\r\n      authors = _.chain(formattedPrs)\r\n        .map(pr => pr.author)\r\n        .uniqBy(\"login\")\r\n        .value();\r\n\r\n      if (sortByRepo) {\r\n        orderFields.unshift(\"repoName\");\r\n        orderDirections.unshift(\"asc\");\r\n      }\r\n\r\n      if (orderByField) {\r\n        formattedPrs = _.orderBy(formattedPrs, orderFields, orderDirections);\r\n      }\r\n\r\n      if (filterByAuthor) {\r\n        formattedPrs = _.filter(\r\n          formattedPrs,\r\n          pr => pr.author.login === filterByAuthor\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            <div className=\"Box\">\r\n              <div className=\"Box-header d-flex flex-items-center\">\r\n                <div className=\"flex-auto d-flex flex-items-center\">\r\n                  <span className=\"d-inline-flex flex-items-center mr-3 text-bold\">\r\n                    <Octicon\r\n                      icon={GitPullRequestIcon}\r\n                      size={20}\r\n                      className=\"pr-1\"\r\n                    />\r\n                    {formattedPrs.length} pull requests\r\n                  </span>\r\n                  <span className=\"text-gray mr-2\">Order by:</span>\r\n                  <select\r\n                    className=\"form-select select-sm mr-2\"\r\n                    name=\"orderByField\"\r\n                    value={this.state.orderByField}\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option value={\"updatedAt\"}>recently updated</option>\r\n                    <option value={\"createdAt\"}>newest</option>\r\n                  </select>\r\n                  <select\r\n                    className=\"form-select select-sm mr-2\"\r\n                    name=\"filterByAuthor\"\r\n                    value={this.state.filterByAuthor}\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option value=\"\">Select author</option>\r\n                    {authors.map(({ login }) => (\r\n                      <option key={login} value={login}>\r\n                        {login}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"sortByRepo\"\r\n                      value={sortByRepo}\r\n                      onChange={this.handleInputChange}\r\n                    />{\" \"}\r\n                    Sort by repository\r\n                  </label>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => requestPullRequests(selectedRepos, token)}\r\n                  >\r\n                    <Octicon icon={SyncIcon} /> Sync\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {!selectedRepos.length ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    You have not selected any{\" \"}\r\n                    <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 && loading ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>Loading...</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 && githubError ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    Error fetching data from GitHub. Ensure your{\" \"}\r\n                    <Link to=\"/settings/account\">token</Link> is set correctly\r\n                    and try again.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {selectedRepos.length > 0 &&\r\n              !loading &&\r\n              !githubError &&\r\n              !formattedPrs.length ? (\r\n                <div className=\"blankslate blankslate-clean-background\">\r\n                  <p>\r\n                    No pull requests were found for your{\" \"}\r\n                    <Link to=\"/settings\">selected repositories</Link>.\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n              {!loading && !githubError && formattedPrs.length\r\n                ? formattedPrs.map(pr => <PullRequest key={pr.id} {...pr} />)\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Sync as SyncIcon,\r\n  LinkExternal as LinkExternalIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport * as settingsActions from \"../actions/settings\";\r\nimport * as watchedReposActions from \"../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.requestWatchedRepos(this.props.token);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n              >\r\n                <Octicon icon={SyncIcon} /> Sync\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link, NavLink, Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport Account from \"./Account\";\r\nimport Repositories from \"./Repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/account`} />}\r\n            />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Settings from \"./Settings\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nimport \"../../node_modules/primer/build/build.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  selectedRepos: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport watchedRepos from \"./watchedRepos\";\r\nimport settings from \"./settings\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/Root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState } from \"./localStorage\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}