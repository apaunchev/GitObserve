{"version":3,"sources":["consts.js","Avatar/queries.js","Avatar/index.js","Repository/RepositoryItem/index.js","Issue/IssueItem/index.js","Loading/index.js","FetchMore/index.js","Error/index.js","Issue/IssueList/queries.js","Issue/IssueList/index.js","Repository/RepositoryList/index.js","WatchingRepositories/queries.js","WatchingRepositories/index.js","App/index.js","index.js"],"names":["STATUS","INITIAL","LOADING","AUTHENTICATED","LOCAL_STORAGE_KEY","GET_AVATAR","gql","_templateObject","Avatar","react_default","a","createElement","react_apollo_browser_umd","query","_ref","data","viewer","className","src","avatarUrl","width","height","alt","dayjs","extend","relativeTime","RepositoryItem","name","pushedAt","url","descriptionHTML","Fragment","href","dangerouslySetInnerHTML","__html","title","fromNow","IssueItem","issue","author","login","createdAt","Loading","Array","fill","map","item","index","key","FetchMore","loading","hasNextPage","variables","updateQuery","fetchMore","children","src_Loading","disabled","onClick","ErrorMessage","error","toString","GET_ISSUES_OF_REPOSITORY","queries_templateObject","GET_PULL_REQUESTS_OF_REPOSITORY","_templateObject2","getUpdateQuery","entry","previousResult","fetchMoreResult","Object","objectSpread","repository","defineProperty","edges","toConsumableArray","concat","IssueList","_ref4","issues","repositoryOwner","repositoryName","_ref5","node","Issue_IssueItem","id","src_FetchMore","pageInfo","cursor","endCursor","Issues","_ref2","notifyOnNetworkStatusChange","_ref3","Error","length","IssueList_IssueList","watching","RepositoryList","repositories","Repository_RepositoryItem","totalCount","Issue_IssueList","owner","pullRequests","GET_WATCHING_REPOSITORIES","WatchingRepositories_queries_templateObject","WatchingRepositories","Repository_RepositoryList","App","state","status","_this2","this","window","localStorage","getItem","setState","code","location","match","authenticate","_this3","axios","get","process","then","token","setItem","catch","console","src_Avatar","src_WatchingRepositories","Component","httpLink","HttpLink","uri","authLink","setContext","_","headers","authorization","errorLink","onError","graphQLErrors","networkError","message","locations","path","log","link","ApolloLink","from","cache","InMemoryCache","client","ApolloClient","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0bb8d01.chunk.js","sourcesContent":["export const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nexport const REDIRECT_URI = process.env.REACT_APP_REDIRECT_URI;\nexport const AUTH_API_URI = process.env.REACT_APP_AUTH_API_URI;\n\nexport const GITHUB_OAUTH_URL = \"https://github.com/login/oauth/authorize\";\nexport const GITHUB_GRAPHQL_API = \"https://api.github.com/graphql\";\n\nexport const STATUS = {\n  INITIAL: \"initial\",\n  LOADING: \"loading\",\n  AUTHENTICATED: \"authenticated\"\n};\n\nexport const LOCAL_STORAGE_KEY = {\n  GITHUB_TOKEN: \"github_token\"\n};\n","import gql from \"graphql-tag\";\n\nexport const GET_AVATAR = gql`\n  query {\n    viewer {\n      avatarUrl\n    }\n  }\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\n\nimport { GET_AVATAR } from \"./queries\";\n\nimport \"./style.css\";\n\nconst Avatar = () => (\n  <Query query={GET_AVATAR}>\n    {({ data }) => {\n      return data && data.viewer ? (\n        <img\n          className=\"Avatar\"\n          src={data.viewer.avatarUrl}\n          width={32}\n          height={32}\n          alt=\"Avatar\"\n        />\n      ) : (\n        <img\n          className=\"Avatar\"\n          src=\"avatar.png\"\n          width={32}\n          height={32}\n          alt=\"Avatar\"\n        />\n      );\n    }}\n  </Query>\n);\n\nexport default Avatar;\n","import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport React from \"react\";\n\nimport \"./style.css\";\n\ndayjs.extend(relativeTime);\n\nconst RepositoryItem = ({ name, pushedAt, url, descriptionHTML }) => (\n  <>\n    <h3>\n      <a href={url}>{name}</a>\n    </h3>\n    <div dangerouslySetInnerHTML={{ __html: descriptionHTML }} />\n    <p>\n      {pushedAt && (\n        <span>\n          Updated <span title={pushedAt}>{dayjs(pushedAt).fromNow()}</span>\n        </span>\n      )}\n    </p>\n  </>\n);\n\nexport default RepositoryItem;\n","import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport React from \"react\";\n\ndayjs.extend(relativeTime);\n\nconst IssueItem = ({ issue }) => (\n  <li className=\"IssueItem\">\n    <h5>\n      <a href={issue.url}>{issue.title}</a>\n    </h5>\n    <p>\n      {issue.author && (\n        <span>\n          Opened by <a href={issue.author.url}>{issue.author.login}</a>\n        </span>\n      )}\n      {issue.createdAt && (\n        <span title={issue.createdAt}> {dayjs(issue.createdAt).fromNow()}</span>\n      )}\n    </p>\n  </li>\n);\n\nexport default IssueItem;\n","import React from \"react\";\n\nconst Loading = () => (\n  <ol className=\"RepositoryList\">\n    {Array(10)\n      .fill(\"\")\n      .map((item, index) => (\n        <li key={index} className=\"RepositoryItem RepositoryItem-placeholder\">\n          <div className=\"RepositoryItem-placeholder-name\" />\n          <div className=\"RepositoryItem-placeholder-text\" />\n          <div className=\"RepositoryItem-placeholder-text\" />\n        </li>\n      ))}\n  </ol>\n);\n\nexport default Loading;\n","import React from \"react\";\n\nimport Loading from \"../Loading\";\n\nconst FetchMore = ({\n  loading,\n  hasNextPage,\n  variables,\n  updateQuery,\n  fetchMore,\n  children\n}) => (\n  <div className=\"FetchMore\">\n    {loading ? (\n      <Loading />\n    ) : (\n      <button\n        className=\"btn btn-outline btn-block\"\n        disabled={!hasNextPage}\n        onClick={() => fetchMore({ variables, updateQuery })}\n      >\n        More {children}\n      </button>\n    )}\n  </div>\n);\n\nexport default FetchMore;\n","import React from \"react\";\n\nconst ErrorMessage = ({ error }) => (\n  <div className=\"ErrorMessage\">\n    <small>{error.toString()}</small>\n  </div>\n);\n\nexport default ErrorMessage;\n","import gql from \"graphql-tag\";\n\nexport const GET_ISSUES_OF_REPOSITORY = gql`\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\n    repository(name: $repositoryName, owner: $repositoryOwner) {\n      issues(first: 5, states: [OPEN], after: $cursor) {\n        edges {\n          node {\n            id\n            title\n            url\n            bodyHTML\n            author {\n              login\n              url\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PULL_REQUESTS_OF_REPOSITORY = gql`\n  query($repositoryOwner: String!, $repositoryName: String!, $cursor: String) {\n    repository(name: $repositoryName, owner: $repositoryOwner) {\n      pullRequests(first: 5, states: [OPEN], after: $cursor) {\n        edges {\n          node {\n            id\n            title\n            url\n            bodyHTML\n            author {\n              login\n              url\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\n\nimport IssueItem from \"../IssueItem\";\nimport FetchMore from \"../../FetchMore\";\nimport ErrorMessage from \"../../Error\";\nimport Loading from \"../../Loading\";\n\nimport {\n  GET_ISSUES_OF_REPOSITORY,\n  GET_PULL_REQUESTS_OF_REPOSITORY\n} from \"./queries\";\n\nimport \"./style.css\";\n\nconst getUpdateQuery = entry => (previousResult, { fetchMoreResult }) => {\n  if (!fetchMoreResult) {\n    return previousResult;\n  }\n\n  return {\n    ...previousResult,\n    repository: {\n      ...previousResult.repository,\n      [entry]: {\n        ...previousResult.repository[entry],\n        ...fetchMoreResult.repository[entry],\n        edges: [\n          ...previousResult.repository[entry].edges,\n          ...fetchMoreResult.repository[entry].edges\n        ]\n      }\n    }\n  };\n};\n\nconst Issues = ({ repositoryOwner, repositoryName, entry }) => (\n  <div className=\"Issues\">\n    <Query\n      query={\n        entry === \"issues\"\n          ? GET_ISSUES_OF_REPOSITORY\n          : GET_PULL_REQUESTS_OF_REPOSITORY\n      }\n      variables={{\n        repositoryOwner,\n        repositoryName\n      }}\n      notifyOnNetworkStatusChange={true}\n    >\n      {({ data, loading, error, fetchMore }) => {\n        if (error) {\n          return <ErrorMessage error={error} />;\n        }\n\n        const { repository } = data;\n\n        if (loading && !repository) {\n          return <Loading />;\n        }\n\n        if (!repository[entry].edges.length) {\n          return <div className=\"IssueList\">No issues found.</div>;\n        }\n\n        return (\n          <IssueList\n            issues={repository[entry]}\n            loading={loading}\n            repositoryOwner={repositoryOwner}\n            repositoryName={repositoryName}\n            fetchMore={fetchMore}\n            entry={entry}\n          />\n        );\n      }}\n    </Query>\n  </div>\n);\n\nconst IssueList = ({\n  issues,\n  loading,\n  repositoryOwner,\n  repositoryName,\n  fetchMore,\n  entry\n}) => (\n  <>\n    <ol className=\"IssueList\">\n      {issues.edges.map(({ node }) => (\n        <IssueItem\n          key={node.id}\n          issue={node}\n          repositoryOwner={repositoryOwner}\n          repositoryName={repositoryName}\n        />\n      ))}\n    </ol>\n\n    <FetchMore\n      loading={loading}\n      hasNextPage={issues.pageInfo.hasNextPage}\n      variables={{\n        cursor: issues.pageInfo.endCursor,\n        repositoryOwner,\n        repositoryName\n      }}\n      updateQuery={getUpdateQuery(entry)}\n      fetchMore={fetchMore}\n    />\n  </>\n);\n\nexport default Issues;\n","import React from \"react\";\n\nimport RepositoryItem from \"../RepositoryItem\";\nimport Issues from \"../../Issue/IssueList\";\nimport FetchMore from \"../../FetchMore\";\n\nimport \"./style.css\";\n\nconst updateQuery = (previousResult, { fetchMoreResult }) => {\n  if (!fetchMoreResult) {\n    return previousResult;\n  }\n\n  return {\n    ...previousResult,\n    viewer: {\n      ...previousResult.viewer,\n      watching: {\n        ...previousResult.viewer.watching,\n        ...fetchMoreResult.viewer.watching,\n        edges: [\n          ...previousResult.viewer.watching.edges,\n          ...fetchMoreResult.viewer.watching.edges\n        ]\n      }\n    }\n  };\n};\n\nconst RepositoryList = ({ loading, repositories, fetchMore }) => (\n  <>\n    <ol className=\"RepositoryList\">\n      {repositories.edges.map(({ node }) => (\n        <li key={node.id} className=\"RepositoryItem\">\n          <RepositoryItem {...node} />\n          <details>\n            <summary>Issues ({node.issues.totalCount})</summary>\n            <Issues\n              entry={\"issues\"}\n              repositoryName={node.name}\n              repositoryOwner={node.owner.login}\n            />\n          </details>\n          <details>\n            <summary>Pull Requests ({node.pullRequests.totalCount})</summary>\n            <Issues\n              entry={\"pullRequests\"}\n              repositoryName={node.name}\n              repositoryOwner={node.owner.login}\n            />\n          </details>\n        </li>\n      ))}\n    </ol>\n    <FetchMore\n      loading={loading}\n      hasNextPage={repositories.pageInfo.hasNextPage}\n      variables={{\n        cursor: repositories.pageInfo.endCursor\n      }}\n      updateQuery={updateQuery}\n      fetchMore={fetchMore}\n    />\n  </>\n);\n\nexport default RepositoryList;\n","import gql from \"graphql-tag\";\n\nexport const GET_WATCHING_REPOSITORIES = gql`\n  query($cursor: String) {\n    viewer {\n      watching(\n        first: 10\n        after: $cursor\n        orderBy: { field: PUSHED_AT, direction: DESC }\n      ) {\n        edges {\n          node {\n            id\n            name\n            pushedAt\n            url\n            descriptionHTML\n            owner {\n              login\n              url\n            }\n            issues(states: [OPEN]) {\n              totalCount\n            }\n            pullRequests(states: [OPEN]) {\n              totalCount\n            }\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\n\nimport RepositoryList from \"../Repository/RepositoryList\";\nimport Loading from \"../Loading\";\nimport ErrorMessage from \"../Error\";\n\nimport { GET_WATCHING_REPOSITORIES } from \"./queries\";\n\nconst WatchingRepositories = () => (\n  <Query query={GET_WATCHING_REPOSITORIES} notifyOnNetworkStatusChange={true}>\n    {({ data, loading, error, fetchMore }) => {\n      if (error) return <ErrorMessage error={error} />;\n      if (loading && !data.viewer) return <Loading />;\n\n      return (\n        <RepositoryList\n          loading={loading}\n          repositories={data.viewer.watching}\n          fetchMore={fetchMore}\n        />\n      );\n    }}\n  </Query>\n);\n\nexport default WatchingRepositories;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\n\nimport Avatar from \"../Avatar\";\nimport WatchingRepositories from \"../WatchingRepositories\";\nimport Loading from \"../Loading\";\n\nimport {\n  STATUS,\n  LOCAL_STORAGE_KEY,\n  AUTH_API_URI,\n  GITHUB_OAUTH_URL,\n  CLIENT_ID,\n  REDIRECT_URI\n} from \"../consts\";\n\nimport \"primer/build/build.css\";\nimport \"./style.css\";\n\nclass App extends Component {\n  state = {\n    status: STATUS.INITIAL\n  };\n\n  componentDidMount() {\n    const storedToken = window.localStorage.getItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN);\n    if (storedToken) {\n      this.setState({ status: STATUS.AUTHENTICATED });\n      return;\n    }\n\n    const code =\n      window.location.href.match(/\\?code=(.*)/) && window.location.href.match(/\\?code=(.*)/)[1];\n    if (code) {\n      this.setState({ status: STATUS.LOADING }, () => this.authenticate(code));\n    }\n  }\n\n  authenticate(code) {\n    axios\n      .get(`${AUTH_API_URI}/${code}`)\n      .then(({ data: { token } }) => {\n        if (token) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN, token);\n          this.setState({ token, status: STATUS.AUTHENTICATED });\n        }\n      })\n      .catch(error => console.error(`Error while authenticating: ${error}`));\n  }\n\n  render() {\n    const { status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"Header\">\n          <div className=\"Logo\">GitObserve</div>\n          <div className=\"User\">\n            {status === STATUS.INITIAL && (\n              <a\n                href={`${GITHUB_OAUTH_URL}?client_id=${CLIENT_ID}&scope=user%20repo%20read%3Aorg&redirect_uri=${REDIRECT_URI}`}\n              >\n                Login\n              </a>\n            )}\n            {status === STATUS.AUTHENTICATED && <Avatar />}\n          </div>\n        </header>\n        <div className=\"Main\">\n          {status === STATUS.LOADING && <Loading />}\n          {status === STATUS.AUTHENTICATED && <WatchingRepositories />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { onError } from \"apollo-link-error\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { GITHUB_GRAPHQL_API, LOCAL_STORAGE_KEY } from \"./consts\";\n\nimport App from \"./App\";\n\nconst httpLink = new HttpLink({ uri: GITHUB_GRAPHQL_API });\n\nconst authLink = setContext((_, { headers }) => {\n  const token = window.localStorage.getItem(LOCAL_STORAGE_KEY.GITHUB_TOKEN);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n    );\n  }\n\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nconst link = ApolloLink.from([errorLink, authLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}