{"version":3,"sources":["components/common/blankslate.js","components/common/not-found.js","githubApi.js","actions/dashboard.js","components/common/flash.js","components/dashboard/filters.js","components/dashboard/pull-request.js","components/dashboard/subnav.js","components/dashboard/index.js","actions/settings.js","components/settings/account.js","components/settings/dashboard.js","components/settings/repositories.js","actions/watchedRepos.js","components/settings/index.js","components/common/avatar.js","components/app.js","components/root.js","reducers/dashboard.js","reducers/settings.js","reducers/watchedRepos.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["Blankslate","_ref","children","react_default","a","createElement","className","NotFound","blankslate","get","Object","asyncToGenerator","regenerator_default","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","_x","_x2","apply","this","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","newPrs","oldPrs","type","setFilters","filters","Flash","DEFAULT_FILTERS","repo","author","orderBy","reviewState","searchQuery","connect","state","dashboard","dispatch","actions","props","handleSelectChange","e","objectSpread","defineProperty","target","name","value","Fragment","filteredCount","authors","chain","pullRequests","map","pr","uniqBy","onChange","style","width","login","key","renderAuthorsSelect","repos","repoName","renderReposSelect","onClick","PR_STATE_CLASSES","review requested","changes requested","approved","commented","pending","dismissed","no request","title","url","createdAt","updatedAt","assignees","repository","reviewCount","reviewedAt","isNew","relativeTime","field","formatDistanceToNow","parseISO","addSuffix","avatarUrl","href","aria-label","src","height","alt","nameWithOwner","index_esm","icon","ClockIcon","OrganizationIcon","assignee","SubNav","handleReviewStateChange","preventDefault","_this","dataset","_this$props","data-review-state","paddingLeft","placeholder","SearchIcon","React","PureComponent","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInterval","_this2","selectedRepos","autoRefreshEnabled","setInterval","requestPullRequests","autoRefreshInterval","window","clearInterval","filteredPullRequests","loading","githubError","lastUpdated","react_router_dom","to","SettingsIcon","subnav","dashboard_filters","format","fromUnixTime","disabled","SyncIcon","pull_request","assign","id","flash","defaultProps","applyFilters","filtered","hideOldEnabled","filter","differenceInDays","Date","hideOldThreshold","toLowerCase","authorLogin","indexOf","settings","extend","getState","t0","error","requestViewerInfoSuccess","viewerInfo","requestViewerInfo","viewer","Account","input","createRef","resetViewerInfo","isEmpty","setToken","rel","ref","current","Component","toggleAutoRefresh","setAutoRefreshInterval","interval","toggleHideOld","setHideOldThreshold","threshold","checked","Repositories","resetSelectedRepos","resetWatchedRepos","requestWatchedRepos","watchedRepos","selectAllRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","settingsActions","Settings","match","CloudUploadIcon","activeClassName","DashboardIcon","PersonIcon","RepoIcon","react_router","path","component","exact","render","Avatar","App","avatar","Root","store","es","initialState","formatReviewState","replace","getReviewState","reviews","reviewRequests","formatPrs","oldPrsById","nodes","flatten","reverse","rootReducer","combineReducers","action","Math","floor","now","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","root","document","getElementById"],"mappings":"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","file":"static/js/main.20633b27.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Blankslate = ({ children }) => (\r\n  <div className=\"blankslate blankslate-clean-background\">{children}</div>\r\n);\r\n\r\nexport default Blankslate;\r\n","import React from \"react\";\r\nimport Blankslate from \"./blankslate\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <Blankslate>\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </Blankslate>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  viewerInfo: () => `\r\n    {\r\n      viewer {\r\n        login\r\n        avatarUrl(size: 96)\r\n      }\r\n    }\r\n  `,\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl(size: 96)\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl(size: 96)\r\n                  login\r\n                  url\r\n                }\r\n                assignees(last: 10) {\r\n                  edges {\r\n                    node {\r\n                      avatarUrl(size: 40)\r\n                      login\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                reviewRequests(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      requestedReviewer {\r\n                        ... on User {\r\n                          login\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                        ... on Team {\r\n                          name\r\n                          avatarUrl(size: 96)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                reviews(last: 50) {\r\n                  edges {\r\n                    node {\r\n                      createdAt\r\n                      state\r\n                      author {\r\n                        login\r\n                        avatarUrl(size: 96)\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (newPrs, oldPrs) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  newPrs,\r\n  oldPrs\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const oldPrs = getState().dashboard.pullRequests;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const newPrs = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(newPrs, oldPrs));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n\r\nexport const setFilters = filters => ({\r\n  type: SET_FILTERS,\r\n  filters\r\n});\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { chain } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nconst DEFAULT_FILTERS = {\r\n  repo: \"\",\r\n  author: \"\",\r\n  orderBy: \"updatedAt\",\r\n  reviewState: \"\",\r\n  searchQuery: \"\"\r\n};\r\n\r\nconst Filters = props => {\r\n  const handleSelectChange = e => {\r\n    props.setFilters({\r\n      ...props.filters,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const renderAuthorsSelect = () => {\r\n    const authors = chain(props.pullRequests)\r\n      .map(pr => pr.author)\r\n      .uniqBy(\"login\")\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"author\"\r\n        value={props.filters.author}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all authors</option>\r\n        {authors.map(({ login }) => (\r\n          <option key={login} value={login}>\r\n            {login}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderReposSelect = () => {\r\n    const repos = chain(props.pullRequests)\r\n      .map(pr => pr.repoName)\r\n      .uniqBy()\r\n      .value();\r\n\r\n    return (\r\n      <select\r\n        className=\"form-select select-sm mr-2\"\r\n        name=\"repo\"\r\n        value={props.filters.repo}\r\n        onChange={handleSelectChange}\r\n        style={{ width: \"130px\" }}\r\n      >\r\n        <option value=\"\">all repositories</option>\r\n        {repos.map(repo => (\r\n          <option key={repo} value={repo}>\r\n            {repo}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  const renderOrderBySelect = () => (\r\n    <select\r\n      className=\"form-select select-sm mr-2\"\r\n      name=\"orderBy\"\r\n      value={props.filters.orderBy}\r\n      onChange={handleSelectChange}\r\n      style={{ width: \"130px\" }}\r\n    >\r\n      <option value={\"updatedAt\"}>recently updated</option>\r\n      <option value={\"reviewedAt\"}>recently reviewed</option>\r\n      <option value={\"createdAt\"}>recently created</option>\r\n    </select>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-gray mr-2\">Show ({props.filteredCount}):</span>\r\n      {renderAuthorsSelect()}\r\n      {renderReposSelect()}\r\n      <span className=\"text-gray mr-2\">Order by:</span>\r\n      {renderOrderBySelect()}\r\n      <button\r\n        className=\"btn btn-sm\"\r\n        onClick={() => props.setFilters(DEFAULT_FILTERS)}\r\n      >\r\n        Reset\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filters);\r\n","import Octicon, {\r\n  Clock as ClockIcon,\r\n  Organization as OrganizationIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { formatDistanceToNow, parseISO } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PR_STATE_CLASSES = {\r\n  \"review requested\": \"bg-blue text-white\",\r\n  \"changes requested\": \"Label--orange\",\r\n  approved: \"bg-green text-white\",\r\n  commented: \"bg-yellow text-gray\",\r\n  pending: \"Label--gray\",\r\n  dismissed: \"bg-red text-white\",\r\n  \"no request\": \"Label--gray\"\r\n};\r\n\r\nconst PullRequest = ({\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  assignees,\r\n  repository,\r\n  reviewCount,\r\n  reviewState,\r\n  reviewedAt,\r\n  isNew,\r\n  filters\r\n}) => {\r\n  const relativeTime = field => {\r\n    if (!field) return null;\r\n    return formatDistanceToNow(parseISO(field), { addSuffix: true });\r\n  };\r\n  let className = \"Box-row Box-row--hover-gray d-flex\";\r\n  if (isNew) className += \" Box-row--unread\";\r\n\r\n  return (\r\n    <div className={className}>\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <a\r\n            href={author.url}\r\n            className=\"d-block tooltipped tooltipped-se\"\r\n            aria-label={`Opened by ${author.login}`}\r\n          >\r\n            <img\r\n              className=\"avatar rounded-1\"\r\n              src={author.avatarUrl}\r\n              width=\"48\"\r\n              height=\"48\"\r\n              alt=\"\"\r\n            />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          <span>\r\n            <Octicon icon={ClockIcon} />{\" \"}\r\n            {filters && filters.orderBy === \"updatedAt\" && updatedAt ? (\r\n              <span>\r\n                Updated <span title={updatedAt}>{relativeTime(updatedAt)}</span>\r\n              </span>\r\n            ) : filters && filters.orderBy === \"createdAt\" && createdAt ? (\r\n              <span>\r\n                Created <span title={createdAt}>{relativeTime(createdAt)}</span>\r\n              </span>\r\n            ) : filters && filters.orderBy === \"reviewedAt\" && reviewedAt ? (\r\n              <span>\r\n                Reviewed{\" \"}\r\n                <span title={reviewedAt}>{relativeTime(reviewedAt)}</span>\r\n              </span>\r\n            ) : null}\r\n          </span>\r\n          {reviewCount > 0 ? (\r\n            <span className=\"ml-2\">\r\n              <Octicon icon={OrganizationIcon} /> {reviewCount}{\" \"}\r\n              {reviewCount === 1 ? \"review\" : \"reviews\"}\r\n            </span>\r\n          ) : null}\r\n          {reviewState ? (\r\n            <span className={`Label ml-2 ${PR_STATE_CLASSES[reviewState]}`}>\r\n              {reviewState}\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {assignees.length > 0 ? (\r\n        <div className=\"pl-3\">\r\n          {assignees.map(assignee => (\r\n            <div className=\"d-flex\" key={assignee.login}>\r\n              <a\r\n                href={assignee.url}\r\n                className=\"pl-1 tooltipped tooltipped-sw\"\r\n                aria-label={`Assigned to ${assignee.login}`}\r\n              >\r\n                <img\r\n                  className=\"avatar rounded-1\"\r\n                  src={assignee.avatarUrl}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(PullRequest);\r\n","import Octicon, { Search as SearchIcon } from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/dashboard\";\r\n\r\nclass SubNav extends React.PureComponent {\r\n  handleReviewStateChange = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.setFilters({\r\n      ...this.props.filters,\r\n      reviewState: e.target.dataset.reviewState\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filters, setFilters } = this.props;\r\n\r\n    return (\r\n      <div className=\"subnav d-flex\">\r\n        <nav className=\"subnav-links flex-auto\">\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            All\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"review requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"review requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Review requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"changes requested\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"changes requested\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Changes requested\r\n          </a>\r\n          <a\r\n            href=\"/\"\r\n            data-review-state=\"approved\"\r\n            onClick={this.handleReviewStateChange}\r\n            className={`subnav-item${\r\n              filters.reviewState === \"approved\" ? \" selected\" : \"\"\r\n            }`}\r\n          >\r\n            Approved\r\n          </a>\r\n        </nav>\r\n        <div className=\"subnav-search col-3\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"name\"\r\n            className=\"form-control input-contrast\"\r\n            style={{ width: \"100%\", paddingLeft: 28 }}\r\n            placeholder=\"Search pull requests...\"\r\n            value={filters.searchQuery}\r\n            onChange={e =>\r\n              setFilters({\r\n                ...filters,\r\n                searchQuery: e.target.value\r\n              })\r\n            }\r\n          />\r\n          <Octicon icon={SearchIcon} className=\"subnav-search-icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.dashboard.filters\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilters: filters => {\r\n    dispatch(actions.setFilters(filters));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SubNav);\r\n","import Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { differenceInDays, fromUnixTime, format } from \"date-fns\";\r\nimport { extend, filter, orderBy } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/dashboard\";\r\nimport Blankslate from \"../common/blankslate\";\r\nimport Flash from \"../common/flash\";\r\nimport Filters from \"./filters\";\r\nimport PullRequest from \"./pull-request\";\r\nimport SubNav from \"./subnav\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInterval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      if (this.props.autoRefreshEnabled) {\r\n        this.updateInterval = setInterval(() => {\r\n          this.props.requestPullRequests(\r\n            this.props.selectedRepos,\r\n            this.props.token\r\n          );\r\n        }, this.props.autoRefreshInterval * 60 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.updateInterval);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      filteredPullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token,\r\n      autoRefreshEnabled,\r\n      lastUpdated\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <SubNav />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <Filters\r\n                        pullRequests={pullRequests}\r\n                        filteredCount={filteredPullRequests.length}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex flex-items-center\">\r\n                      {autoRefreshEnabled && (\r\n                        <span className=\"text-gray mr-2 f6\">\r\n                          Auto refresh{\" \"}\r\n                          <Link to={\"/settings/dashboard\"}>enabled</Link>.\r\n                        </span>\r\n                      )}\r\n                      <span className=\"text-gray mr-2 f6\">\r\n                        {lastUpdated\r\n                          ? `Last updated: ${format(\r\n                              fromUnixTime(lastUpdated),\r\n                              \"Pp\"\r\n                            )}`\r\n                          : `Last updated: never.`}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                        disabled={loading}\r\n                      >\r\n                        <Octicon icon={SyncIcon} />{\" \"}\r\n                        {loading ? \"Loading...\" : \"Refresh\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {githubError ? (\r\n                    <Blankslate>\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && !filteredPullRequests.length ? (\r\n                    <Blankslate>\r\n                      <p>No pull requests were found.</p>\r\n                    </Blankslate>\r\n                  ) : null}\r\n\r\n                  {!githubError && filteredPullRequests.length > 0\r\n                    ? filteredPullRequests.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string,\r\n  requestPullRequests: PropTypes.func\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst applyFilters = (pullRequests, filters) => {\r\n  let filtered = pullRequests;\r\n\r\n  if (filters.hideOldEnabled) {\r\n    filtered = filter(filtered, pr => {\r\n      return (\r\n        differenceInDays(new Date(pr[filters.orderBy]), new Date()) >\r\n        -filters.hideOldThreshold\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.repo) {\r\n    filtered = filter(filtered, pr => pr.repoName === filters.repo);\r\n  }\r\n\r\n  if (filters.author) {\r\n    filtered = filter(filtered, pr => pr.author.login === filters.author);\r\n  }\r\n\r\n  if (filters.reviewState) {\r\n    filtered = filter(filtered, pr => pr.reviewState === filters.reviewState);\r\n  }\r\n\r\n  if (filters.searchQuery) {\r\n    filtered = filter(filtered, pr => {\r\n      const searchQuery = filters.searchQuery.toLowerCase();\r\n      const repoName = pr.repoName.toLowerCase();\r\n      const title = pr.title.toLowerCase();\r\n      const authorLogin = pr.author.login.toLowerCase();\r\n\r\n      return (\r\n        repoName.indexOf(searchQuery) > -1 ||\r\n        title.indexOf(searchQuery) > -1 ||\r\n        authorLogin.indexOf(searchQuery) > -1\r\n      );\r\n    });\r\n  }\r\n\r\n  if (filters.orderBy === \"reviewedAt\") {\r\n    filtered = filter(filtered, pr => pr.reviewedAt);\r\n  }\r\n\r\n  filtered = orderBy(filtered, filters.orderBy, \"desc\");\r\n\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  lastUpdated: state.dashboard.lastUpdated,\r\n  pullRequests: state.dashboard.pullRequests,\r\n  filteredPullRequests: applyFilters(\r\n    state.dashboard.pullRequests,\r\n    extend(\r\n      {\r\n        hideOldEnabled: state.settings.hideOldEnabled,\r\n        hideOldThreshold: state.settings.hideOldThreshold\r\n      },\r\n      state.dashboard.filters\r\n    )\r\n  )\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(actions.requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\nexport const TOGGLE_AUTO_REFRESH = \"TOGGLE_AUTO_REFRESH\";\r\nexport const SET_AUTO_REFRESH_INTERVAL = \"SET_AUTO_REFRESH_INTERVAL\";\r\nexport const TOGGLE_HIDE_OLD = \"TOGGLE_HIDE_OLD\";\r\nexport const SET_HIDE_OLD_THRESHOLD = \"SET_HIDE_OLD_THRESHOLD\";\r\nexport const REQUEST_VIEWER_INFO = \"REQUEST_VIEWER_INFO\";\r\nexport const REQUEST_VIEWER_INFO_LOADING = \"REQUEST_VIEWER_INFO_LOADING\";\r\nexport const REQUEST_VIEWER_INFO_SUCCESS = \"REQUEST_VIEWER_INFO_SUCCESS\";\r\nexport const REQUEST_VIEWER_INFO_FAILURE = \"REQUEST_VIEWER_INFO_FAILURE\";\r\nexport const RESET_VIEWER_INFO = \"RESET_VIEWER_INFO\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n\r\nexport const toggleAutoRefresh = () => ({\r\n  type: TOGGLE_AUTO_REFRESH\r\n});\r\n\r\nexport const setAutoRefreshInterval = interval => ({\r\n  type: SET_AUTO_REFRESH_INTERVAL,\r\n  interval\r\n});\r\n\r\nexport const toggleHideOld = () => ({\r\n  type: TOGGLE_HIDE_OLD\r\n});\r\n\r\nexport const setHideOldThreshold = threshold => ({\r\n  type: SET_HIDE_OLD_THRESHOLD,\r\n  threshold\r\n});\r\n\r\nexport const requestViewerInfoLoading = () => ({\r\n  type: REQUEST_VIEWER_INFO_LOADING\r\n});\r\n\r\nexport const requestViewerInfoSuccess = viewerInfo => ({\r\n  type: REQUEST_VIEWER_INFO_SUCCESS,\r\n  viewerInfo\r\n});\r\n\r\nexport const requestViewerInfoFailure = error => ({\r\n  type: REQUEST_VIEWER_INFO_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestViewerInfo = token => async dispatch => {\r\n  try {\r\n    dispatch(requestViewerInfoLoading());\r\n    const query = queries.viewerInfo();\r\n    const viewerInfo = await get(query, token);\r\n    dispatch(requestViewerInfoSuccess(viewerInfo.viewer));\r\n  } catch (err) {\r\n    dispatch(requestViewerInfoFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetViewerInfo = () => ({\r\n  type: RESET_VIEWER_INFO\r\n});\r\n","import { isEmpty } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!this.props.token) {\r\n      this.props.resetViewerInfo();\r\n    }\r\n\r\n    if (this.props.token && isEmpty(this.props.viewerInfo)) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired,\r\n  viewerInfo: PropTypes.object.isRequired,\r\n  requestViewerInfo: PropTypes.func.isRequired,\r\n  resetViewerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(actions.setToken(value)),\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  resetViewerInfo: () => dispatch(actions.resetViewerInfo()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst Dashboard = props => (\r\n  <>\r\n    <div className=\"Subhead\">\r\n      <h2 className=\"Subhead-heading\">Dashboard</h2>\r\n    </div>\r\n    <form>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.autoRefreshEnabled}\r\n            onChange={props.toggleAutoRefresh}\r\n          />{\" \"}\r\n          Auto refresh dashboard every\r\n          <select\r\n            className=\"form-select select-sm ml-1\"\r\n            value={props.autoRefreshInterval}\r\n            onChange={e => props.setAutoRefreshInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 minute</option>\r\n            <option value=\"5\">5 minutes</option>\r\n            <option value=\"10\">10 minutes</option>\r\n            <option value=\"30\">30 minutes</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-checkbox\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.hideOldEnabled}\r\n            onChange={props.toggleHideOld}\r\n          />{\" \"}\r\n          Hide pull requests older than\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control input-sm ml-1\"\r\n            style={{ width: \"40px \" }}\r\n            value={props.hideOldThreshold}\r\n            onChange={e => props.setHideOldThreshold(e.target.value)}\r\n          />{\" \"}\r\n          days\r\n        </label>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  autoRefreshEnabled: state.settings.autoRefreshEnabled,\r\n  autoRefreshInterval: state.settings.autoRefreshInterval,\r\n  hideOldEnabled: state.settings.hideOldEnabled,\r\n  hideOldThreshold: state.settings.hideOldThreshold\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAutoRefresh: () => dispatch(actions.toggleAutoRefresh()),\r\n  setAutoRefreshInterval: interval =>\r\n    dispatch(actions.setAutoRefreshInterval(interval)),\r\n  toggleHideOld: () => dispatch(actions.toggleHideOld()),\r\n  setHideOldThreshold: interval =>\r\n    dispatch(actions.setHideOldThreshold(interval)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import Octicon, {\r\n  LinkExternal as LinkExternalIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as settingsActions from \"../../actions/settings\";\r\nimport * as watchedReposActions from \"../../actions/watchedRepos\";\r\nimport Blankslate from \"../common/blankslate\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    if (!this.props.token) {\r\n      this.props.resetSelectedRepos();\r\n      this.props.resetWatchedRepos();\r\n    }\r\n\r\n    if (this.props.token && !this.props.selectedRepos.length) {\r\n      this.props.requestWatchedRepos(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n                disabled={loading}\r\n              >\r\n                <Octicon icon={SyncIcon} /> {loading ? \"Loading...\" : \"Refresh\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {githubError ? (\r\n            <Blankslate>\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && !watchedRepos.length ? (\r\n            <Blankslate>\r\n              <p>You are not watching any repositories currently.</p>\r\n            </Blankslate>\r\n          ) : null}\r\n\r\n          {!githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.shape(),\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string,\r\n  resetWatchedRepos: PropTypes.func\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  resetWatchedRepos: () => dispatch(watchedReposActions.resetWatchedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import { get, queries } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\nexport const RESET_WATCHED_REPOS = \"RESET_WATCHED_REPOS\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n\r\nexport const resetWatchedRepos = () => ({\r\n  type: RESET_WATCHED_REPOS\r\n});\r\n","import Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Dashboard as DashboardIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport React from \"react\";\r\nimport { Link, NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./account\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Repositories from \"./repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/dashboard`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={DashboardIcon} /> Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route path={`${match.url}/dashboard`} component={Dashboard} />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/dashboard`} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/settings\";\r\n\r\nconst DEFAULT_AVATAR_URL =\r\n  \"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\";\r\n\r\nclass Avatar extends React.Component {\r\n  componentDidMount() {\r\n    if (isEmpty(this.props.viewerInfo) && this.props.token) {\r\n      this.props.requestViewerInfo(this.props.token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { viewerInfo, loading, githubError } = this.props;\r\n    const avatarUrl =\r\n      !loading && !githubError && viewerInfo.avatarUrl\r\n        ? viewerInfo.avatarUrl\r\n        : DEFAULT_AVATAR_URL;\r\n\r\n    return (\r\n      <Link to=\"/settings/account\">\r\n        <img\r\n          className=\"avatar avatar-small\"\r\n          src={avatarUrl}\r\n          width={32}\r\n          height={32}\r\n          alt=\"Avatar\"\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token,\r\n  viewerInfo: state.settings.viewerInfo,\r\n  githubError: state.settings.githubError,\r\n  loading: state.settings.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestViewerInfo: token => dispatch(actions.requestViewerInfo(token)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Avatar);\r\n","import React from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport \"../../node_modules/@primer/css/build/build.css\";\r\nimport NotFound from \"./common/not-found\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Settings from \"./settings\";\r\nimport Avatar from \"./common/avatar\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white no-underline\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n        <Avatar />\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","import { chain, map } from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  lastUpdated: null,\r\n  filters: {\r\n    repo: \"\",\r\n    author: \"\",\r\n    reviewState: \"\",\r\n    orderBy: \"updatedAt\",\r\n    searchQuery: \"\"\r\n  },\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst formatReviewState = state => {\r\n  if (typeof state !== \"string\") return;\r\n  return state.replace(/_/g, \" \").toLowerCase();\r\n};\r\n\r\nconst getReviewState = (reviews, reviewRequests) => {\r\n  // Expected values from GitHub:\r\n  // \"PENDING\", \"COMMENTED\", \"APPROVED\", \"CHANGES_REQUESTED\", \"DISMISSED\".\r\n  // Additional (custom) values:\r\n  // \"REVIEW_REQUESTED\", \"NO_REQUEST\".\r\n  // Take the state from the last review, replace any underscores,\r\n  // and make it lowercase so it can be dispayed nicely to the user.\r\n  let state = null;\r\n  if (!reviews.length) {\r\n    if (reviewRequests.length > 0) {\r\n      state = \"REVIEW_REQUESTED\";\r\n    } else {\r\n      state = \"NO_REQUEST\";\r\n    }\r\n    return formatReviewState(state);\r\n  }\r\n  state = reviews[reviews.length - 1].state;\r\n  return formatReviewState(state);\r\n};\r\n\r\nconst formatPrs = (newPrs, oldPrs) => {\r\n  const oldPrsById = map(oldPrs, \"id\");\r\n\r\n  return chain(newPrs.nodes)\r\n    .filter(node => node)\r\n    .map(node => map(node.pullRequests.edges, \"node\"))\r\n    .flatten()\r\n    .map(pr => {\r\n      const reviews = map(pr.reviews.edges, \"node\");\r\n      const reviewRequests = map(pr.reviewRequests.edges, \"node\");\r\n      return {\r\n        ...pr,\r\n        reviews,\r\n        reviewRequests,\r\n        repoName: pr.repository.nameWithOwner,\r\n        reviewCount: reviews.length,\r\n        reviewState: getReviewState(reviews, reviewRequests),\r\n        reviewedAt: reviews.length\r\n          ? reviews[reviews.length - 1].createdAt\r\n          : null,\r\n        assignees: map(pr.assignees.edges, \"node\"),\r\n        isNew: !oldPrsById.includes(pr.id)\r\n      };\r\n    })\r\n    .orderBy(\"updatedAt\")\r\n    .reverse()\r\n    .value();\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pullRequests: formatPrs(action.newPrs, action.oldPrs),\r\n        lastUpdated: Math.floor(Date.now() / 1000),\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.filters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  selectedRepos: [],\r\n  autoRefreshEnabled: false,\r\n  autoRefreshInterval: \"5\",\r\n  hideOldEnabled: false,\r\n  hideOldThreshold: 30,\r\n  viewerInfo: {},\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    case actions.TOGGLE_AUTO_REFRESH:\r\n      return {\r\n        ...state,\r\n        autoRefreshEnabled: !state.autoRefreshEnabled\r\n      };\r\n    case actions.SET_AUTO_REFRESH_INTERVAL:\r\n      return {\r\n        ...state,\r\n        autoRefreshInterval: action.interval\r\n      };\r\n    case actions.TOGGLE_HIDE_OLD:\r\n      return {\r\n        ...state,\r\n        hideOldEnabled: !state.hideOldEnabled\r\n      };\r\n    case actions.SET_HIDE_OLD_THRESHOLD:\r\n      return {\r\n        ...state,\r\n        hideOldThreshold: action.threshold\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        viewerInfo: action.viewerInfo,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_VIEWER_INFO_FAILURE:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {},\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    case actions.RESET_VIEWER_INFO:\r\n      return {\r\n        ...state,\r\n        viewerInfo: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n    case actions.RESET_WATCHED_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport settings from \"./settings\";\r\nimport watchedRepos from \"./watchedRepos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { loadState } from \"./localStorage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}