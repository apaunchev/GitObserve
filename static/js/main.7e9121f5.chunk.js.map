{"version":3,"sources":["githubApi.js","actions/dashboard.js","components/PullRequest.js","components/Flash.js","components/Stats.js","components/Dashboard.js","components/Account.js","actions/settings.js","components/Repositories.js","reducers/dashboard.js","actions/watchedRepos.js","components/Settings.js","components/NotFound.js","components/App.js","components/Root.js","reducers/watchedRepos.js","reducers/settings.js","reducers/index.js","index.js","configureStore.js","localStorage.js"],"names":["get","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","token","response","result","wrap","_context","prev","next","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","sent","ok","json","errors","Error","message","data","abrupt","stop","this","_x","_x2","apply","arguments","queries","cursor","length","undefined","afterParam","repoIds","requestPullRequestsSuccess","watchedRepos","type","PR_STATUS","getPRStatus","date","difference","differenceInDays","Date","PullRequest","number","title","url","createdAt","updatedAt","author","repository","now","react_default","createElement","className","avatarUrl","src","width","height","alt","href","nameWithOwner","formatDistance","login","aria-label","Flash","children","Stats","pullRequests","total","openedThisMonth","filter","pr","isSameMonth","updatedThisMonth","Dashboard","state","orderByField","filterByAuthor","filterByRepo","handleInputChange","event","target","value","checked","name","_this","setState","defineProperty","props","selectedRepos","requestPullRequests","_this$state","_this$props","loading","githubError","authors","repos","orderFields","formattedPrs","_","chain","map","uniqBy","repoName","orderBy","Fragment","Link","to","index_esm","icon","SettingsIcon","components_Stats","onChange","key","repo","onClick","SyncIcon","components_PullRequest","assign","id","components_Flash","React","PureComponent","defaultProps","connect","settings","dashboard","dispatch","getState","results","t0","error","Account","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","createRef","_this2","setToken","rel","placeholder","ref","current","Component","settingsActions","Repositories","requestWatchedRepos","selectAllRepos","resetSelectedRepos","toggleRepoSelection","htmlId","includes","LinkExternalIcon","size","initialResults","reposArray","paginate","paginatedResults","viewer","watching","edges","pageInfo","hasNextPage","toConsumableArray","node","owner","watchedReposActions","Settings","match","CloudUploadIcon","NavLink","activeClassName","PersonIcon","RepoIcon","Switch","Route","exact","path","render","Redirect","component","NotFound","App","Root","store","es","HashRouter","initialState","rootReducer","combineReducers","action","objectSpread","nodes","flatten","repoId","persistedState","serializedState","localStorage","getItem","parse","err","loadState","middlewares","thunk","createStore","applyMiddleware","configureStore","subscribe","throttle","setItem","saveState","components_Root","document","getElementById"],"mappings":"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","file":"static/js/main.7e9121f5.chunk.js","sourcesContent":["const GITHUB_API_URI = \"https://api.github.com/graphql\";\r\n\r\nexport const get = async (query, token) => {\r\n  const response = await fetch(GITHUB_API_URI, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({ query })\r\n  });\r\n\r\n  if (response.ok) {\r\n    const result = await response.json();\r\n\r\n    if (result.errors) {\r\n      throw new Error(result.errors[0].message);\r\n    }\r\n\r\n    if (result.data) {\r\n      return result.data;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Error communicating with GitHub\");\r\n};\r\n\r\nexport const queries = {\r\n  watchedRepos: (cursor = \"\") => {\r\n    const afterParam = cursor ? `after: ${cursor}` : \"\";\r\n    return `\r\n      query {\r\n        viewer {\r\n          watching(\r\n            first: 100\r\n            ${afterParam}\r\n          ) {\r\n            edges {\r\n              cursor\r\n              node {\r\n                id\r\n                name\r\n                url\r\n                owner {\r\n                  login\r\n                  avatarUrl\r\n                }\r\n                createdAt\r\n              }\r\n            }\r\n            totalCount\r\n            pageInfo {\r\n              hasNextPage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  },\r\n  pullRequestsForRepos: repoIds => `\r\n    query {\r\n      nodes (ids: ${JSON.stringify(repoIds)}) {\r\n        id\r\n        ... on Repository {\r\n          pullRequests(\r\n            last: 50\r\n            states: [OPEN]\r\n            orderBy: { field: CREATED_AT, direction: DESC }\r\n          ) {\r\n            edges {\r\n              node {\r\n                id\r\n                number\r\n                title\r\n                url\r\n                createdAt\r\n                updatedAt\r\n                repository {\r\n                  nameWithOwner\r\n                  url\r\n                }\r\n                author {\r\n                  avatarUrl\r\n                  login\r\n                  url\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n};\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_PULL_REQUESTS = \"REQUEST_PULL_REQUESTS\";\r\nexport const REQUEST_PULL_REQUESTS_LOADING = \"REQUEST_PULL_REQUESTS_LOADING\";\r\nexport const REQUEST_PULL_REQUESTS_SUCCESS = \"REQUEST_PULL_REQUESTS_SUCCESS\";\r\nexport const REQUEST_PULL_REQUESTS_FAILURE = \"REQUEST_PULL_REQUESTS_FAILURE\";\r\n\r\nexport const requestPullRequestsLoading = () => ({\r\n  type: REQUEST_PULL_REQUESTS_LOADING\r\n});\r\n\r\nexport const requestPullRequestsSuccess = (data, watchedRepos) => ({\r\n  type: REQUEST_PULL_REQUESTS_SUCCESS,\r\n  data,\r\n  watchedRepos\r\n});\r\n\r\nexport const requestPullRequestsFailure = error => ({\r\n  type: REQUEST_PULL_REQUESTS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestPullRequests = (repoIds, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const watchedRepos = getState().watchedRepos.repos;\r\n  try {\r\n    dispatch(requestPullRequestsLoading());\r\n    const query = queries.pullRequestsForRepos(repoIds);\r\n    const results = await get(query, token);\r\n    dispatch(requestPullRequestsSuccess(results, watchedRepos));\r\n  } catch (err) {\r\n    dispatch(requestPullRequestsFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { formatDistance, differenceInDays } from \"date-fns\";\r\n\r\nconst PR_STATUS = {\r\n  FRESH: \"bg-green\",\r\n  STALE: \"bg-blue\",\r\n  ROTTEN: \"bg-purple\"\r\n};\r\n\r\nconst getPRStatus = date => {\r\n  const difference = differenceInDays(new Date(date), new Date());\r\n\r\n  if (difference > -7) {\r\n    return PR_STATUS.FRESH;\r\n  }\r\n\r\n  if (difference <= -7 && difference >= -28) {\r\n    return PR_STATUS.STALE;\r\n  }\r\n\r\n  if (difference < -28) {\r\n    return PR_STATUS.ROTTEN;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst PullRequest = ({\r\n  number,\r\n  title,\r\n  url,\r\n  createdAt,\r\n  updatedAt,\r\n  author,\r\n  repository\r\n}) => {\r\n  const now = new Date();\r\n\r\n  return (\r\n    <div className=\"Box-row Box-row--hover-gray d-flex\">\r\n      {author.avatarUrl && (\r\n        <div className=\"pr-3\">\r\n          <img\r\n            className=\"avatar\"\r\n            src={author.avatarUrl}\r\n            width=\"48\"\r\n            height=\"48\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-auto pr-3\">\r\n        <a href={repository.url} className=\"muted-link h4 pr-1\">\r\n          {repository.nameWithOwner}\r\n        </a>\r\n        <a href={url} className=\"link-gray-dark no-underline h4\">\r\n          {title}\r\n        </a>\r\n        <div className=\"text-gray\">\r\n          #{number} opened{\" \"}\r\n          <span title={createdAt}>{formatDistance(createdAt, now)} ago</span> by{\" \"}\r\n          <a href={author.url} className=\"muted-link\">\r\n            {author.login}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex flex-items-center\">\r\n        <span\r\n          className={`d-inline-block px-3 py-1 rounded-1 text-white no-wrap tooltipped tooltipped-s ${getPRStatus(\r\n            updatedAt\r\n          )}`}\r\n          aria-label={`Last updated ${formatDistance(updatedAt, now)} ago`}\r\n        >\r\n          {formatDistance(updatedAt, now)} ago\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PullRequest;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Flash = ({ type, children }) => (\r\n  <div className={`flash flash-full${type ? `flash-${type}` : null}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nFlash.propTypes = {\r\n  type: PropTypes.string,\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Flash;\r\n","import { isSameMonth } from \"date-fns\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stats = ({ pullRequests }) => {\r\n  const now = new Date();\r\n  const total = pullRequests.length || 0;\r\n  const openedThisMonth =\r\n    pullRequests.filter(pr => isSameMonth(new Date(pr.createdAt), now))\r\n      .length || 0;\r\n  const updatedThisMonth =\r\n    pullRequests.filter(pr => isSameMonth(new Date(pr.updatedAt), now))\r\n      .length || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex mb-4\">\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Total open</h3>\r\n        <span className=\"f1\">{total}</span>\r\n      </div>\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Opened this month</h3>\r\n        <span className=\"f1\">{openedThisMonth}</span>\r\n      </div>\r\n      <div className=\"col-4 p-2 border text-center\">\r\n        <h3 className=\"f4 text-gray-light\">Updated this month</h3>\r\n        <span className=\"f1\">{updatedThisMonth}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape())\r\n};\r\n\r\nexport default Stats;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Settings as SettingsIcon,\r\n  Sync as SyncIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport { requestPullRequests } from \"../actions/dashboard\";\r\nimport PullRequest from \"./PullRequest\";\r\nimport Flash from \"./Flash\";\r\nimport Stats from \"./Stats\";\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  state = {\r\n    orderByField: \"updatedAt\",\r\n    filterByAuthor: \"\",\r\n    filterByRepo: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedRepos.length > 0) {\r\n      this.props.requestPullRequests(\r\n        this.props.selectedRepos,\r\n        this.props.token\r\n      );\r\n    }\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { orderByField, filterByAuthor, filterByRepo } = this.state;\r\n    const {\r\n      selectedRepos,\r\n      pullRequests,\r\n      loading,\r\n      githubError,\r\n      requestPullRequests,\r\n      token\r\n    } = this.props;\r\n    let authors = [];\r\n    let repos = [];\r\n    let orderFields = [orderByField];\r\n    let orderDirections = [\"desc\"];\r\n    let formattedPrs = pullRequests;\r\n\r\n    if (pullRequests.length > 0) {\r\n      authors = _.chain(formattedPrs)\r\n        .map(pr => pr.author)\r\n        .uniqBy(\"login\")\r\n        .value();\r\n\r\n      repos = _.chain(formattedPrs)\r\n        .map(pr => pr.repoName)\r\n        .uniqBy()\r\n        .value();\r\n\r\n      if (orderByField) {\r\n        formattedPrs = _.orderBy(formattedPrs, orderFields, orderDirections);\r\n      }\r\n\r\n      if (filterByAuthor) {\r\n        formattedPrs = _.filter(\r\n          formattedPrs,\r\n          pr => pr.author.login === filterByAuthor\r\n        );\r\n      }\r\n\r\n      if (filterByRepo) {\r\n        formattedPrs = _.filter(\r\n          formattedPrs,\r\n          pr => pr.repoName === filterByRepo\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n          <div className=\"container-lg d-flex flex-items-center\">\r\n            <div className=\"flex-auto\">\r\n              <h1 className=\"h3\">Dashboard</h1>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/settings\" className=\"btn mr-2\">\r\n                <Octicon icon={SettingsIcon} /> Settings\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <main className=\"App-main\">\r\n          <div className=\"container-lg py-4\">\r\n            {!selectedRepos.length ? (\r\n              <Flash>\r\n                You have not selected any{\" \"}\r\n                <Link to=\"/settings/repositories\">repositories</Link> yet.\r\n              </Flash>\r\n            ) : (\r\n              <>\r\n                <Stats pullRequests={pullRequests} />\r\n                <div className=\"Box\">\r\n                  <div className=\"Box-header d-flex flex-items-center\">\r\n                    <div className=\"flex-auto d-flex flex-items-center\">\r\n                      <select\r\n                        className=\"form-select select-sm mr-2\"\r\n                        name=\"filterByAuthor\"\r\n                        value={this.state.filterByAuthor}\r\n                        onChange={this.handleInputChange}\r\n                      >\r\n                        <option value=\"\">All authors</option>\r\n                        {authors.map(({ login }) => (\r\n                          <option key={login} value={login}>\r\n                            {login}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <select\r\n                        className=\"form-select select-sm mr-2\"\r\n                        name=\"filterByRepo\"\r\n                        value={this.state.filterByRepo}\r\n                        onChange={this.handleInputChange}\r\n                      >\r\n                        <option value=\"\">All repositories</option>\r\n                        {repos.map(repo => (\r\n                          <option key={repo} value={repo}>\r\n                            {repo}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <span className=\"text-gray mr-2\">Order by:</span>\r\n                      <select\r\n                        className=\"form-select select-sm mr-2\"\r\n                        name=\"orderByField\"\r\n                        value={this.state.orderByField}\r\n                        onChange={this.handleInputChange}\r\n                      >\r\n                        <option value={\"updatedAt\"}>recently updated</option>\r\n                        <option value={\"createdAt\"}>newest</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"btn btn-sm btn-primary\"\r\n                        onClick={() =>\r\n                          requestPullRequests(selectedRepos, token)\r\n                        }\r\n                      >\r\n                        <Octicon icon={SyncIcon} /> Sync\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {loading ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>Loading...</p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {githubError ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>\r\n                        Error fetching data from GitHub. Ensure your{\" \"}\r\n                        <Link to=\"/settings/account\">token</Link> is set\r\n                        correctly and try again.\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && !formattedPrs.length ? (\r\n                    <div className=\"blankslate blankslate-clean-background\">\r\n                      <p>\r\n                        No pull requests were found for your{\" \"}\r\n                        <Link to=\"/settings/repositories\">repositories</Link>.\r\n                      </p>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {!loading && !githubError && formattedPrs.length > 0\r\n                    ? formattedPrs.map(pr => (\r\n                        <PullRequest key={pr.id} {...pr} />\r\n                      ))\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  githubError: PropTypes.shape(),\r\n  loading: PropTypes.bool,\r\n  pullRequests: PropTypes.arrayOf(PropTypes.shape()),\r\n  token: PropTypes.string\r\n};\r\n\r\nDashboard.defaultProps = {\r\n  selectedRepos: [],\r\n  token: null,\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token,\r\n  githubError: state.dashboard.githubError,\r\n  loading: state.dashboard.loading,\r\n  pullRequests: state.dashboard.pullRequests\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestPullRequests: (repoIds, token) => {\r\n    dispatch(requestPullRequests(repoIds, token));\r\n  },\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as settingsActions from \"../actions/settings\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { token, setToken } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Account</h2>\r\n        </div>\r\n        <p>\r\n          You need to add a Personal Access Token in order to access GitHub\r\n          data.\r\n        </p>\r\n        <ol className=\"pl-3\">\r\n          <li>\r\n            Go to{\" \"}\r\n            <a\r\n              href=\"https://github.com/settings/tokens\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Personal Access Tokens\r\n            </a>{\" \"}\r\n            and click <b>Generate new token</b>.\r\n          </li>\r\n          <li>\r\n            Enter a description, select the <code>repo</code> scope, then click{\" \"}\r\n            <b>Generate token</b>.\r\n          </li>\r\n          <li>Copy the given token and add it below.</li>\r\n        </ol>\r\n        <form className=\"my-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Token\"\r\n            ref={this.input}\r\n            onChange={() => setToken(this.input.current.value)}\r\n            value={token}\r\n          />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAccount.propTypes = {\r\n  token: PropTypes.string,\r\n  setToken: PropTypes.func.isRequired\r\n};\r\n\r\nAccount.defaultProps = {\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setToken: value => dispatch(settingsActions.setToken(value)),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","export const SET_TOKEN = \"SET_TOKEN\";\r\nexport const TOGGLE_REPO_SELECTION = \"TOGGLE_REPO_SELECTION\";\r\nexport const SELECT_ALL_REPOS = \"SELECT_ALL_REPOS\";\r\nexport const RESET_SELECTED_REPOS = \"RESET_SELECTED_REPOS\";\r\n\r\nexport const setToken = value => ({\r\n  type: SET_TOKEN,\r\n  value\r\n});\r\n\r\nexport const toggleRepoSelection = id => ({\r\n  type: TOGGLE_REPO_SELECTION,\r\n  id\r\n});\r\n\r\nexport const selectAllRepos = repoIds => ({\r\n  type: SELECT_ALL_REPOS,\r\n  repoIds\r\n});\r\n\r\nexport const resetSelectedRepos = () => ({\r\n  type: RESET_SELECTED_REPOS\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Octicon, {\r\n  Sync as SyncIcon,\r\n  LinkExternal as LinkExternalIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport * as settingsActions from \"../actions/settings\";\r\nimport * as watchedReposActions from \"../actions/watchedRepos\";\r\n\r\nclass Repositories extends React.PureComponent {\r\n  componentDidMount() {\r\n    this.props.requestWatchedRepos(this.props.token);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      loading,\r\n      githubError,\r\n      watchedRepos,\r\n      selectedRepos,\r\n      selectAllRepos,\r\n      resetSelectedRepos,\r\n      toggleRepoSelection,\r\n      requestWatchedRepos\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Subhead\">\r\n          <h2 className=\"Subhead-heading\">Repositories</h2>\r\n        </div>\r\n        <p className=\"mb-4\">\r\n          Select the repositories you wish to monitor on the dashboard.{\" \"}\r\n          <strong>\r\n            Only repositories you are{\" \"}\r\n            <a href=\"https://github.com/watching\">watching</a> are listed here.\r\n          </strong>\r\n        </p>\r\n        <div className=\"Box\">\r\n          <div className=\"Box-header py-2 d-flex flex-items-center\">\r\n            <h3 className=\"Box-title\">\r\n              Selected repositories{\" \"}\r\n              <span className=\"Counter Counter--gray-dark\">\r\n                {selectedRepos.length}\r\n              </span>\r\n            </h3>\r\n            <div className=\"flex-auto text-right\">\r\n              <div className=\"BtnGroup\">\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() =>\r\n                    selectAllRepos(watchedRepos.map(repo => repo.id))\r\n                  }\r\n                >\r\n                  Select all\r\n                </button>\r\n                <button\r\n                  className=\"BtnGroup-item btn btn-sm\"\r\n                  onClick={() => resetSelectedRepos()}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() => requestWatchedRepos(token)}\r\n              >\r\n                <Octicon icon={SyncIcon} /> Sync\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {githubError ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>\r\n                Error fetching data from GitHub. Ensure your{\" \"}\r\n                <Link to=\"/settings/account\">token</Link> is set correctly and\r\n                try again.\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && !watchedRepos.length ? (\r\n            <div className=\"blankslate blankslate-clean-background\">\r\n              <p>You are not watching any repositories currently.</p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!loading && !githubError && watchedRepos.length > 0\r\n            ? watchedRepos.map(({ id, name, url }) => {\r\n                const htmlId = `repo-${id}`;\r\n                const checked = selectedRepos.includes(id);\r\n                const onChange = () => toggleRepoSelection(id);\r\n                return (\r\n                  <div\r\n                    className=\"Box-row Box-row--hover-gray d-flex flex-items-center py-2 px-3\"\r\n                    key={id}\r\n                  >\r\n                    <div className=\"form-checkbox flex-auto my-0\">\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={htmlId}\r\n                          onChange={onChange}\r\n                          checked={checked}\r\n                        />{\" \"}\r\n                        {name}\r\n                      </label>\r\n                    </div>\r\n                    <a className=\"btn btn-sm btn-outline\" href={url}>\r\n                      <Octicon icon={LinkExternalIcon} size={14} /> Open on\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRepositories.propTypes = {\r\n  watchedRepos: PropTypes.arrayOf(PropTypes.shape()),\r\n  loading: PropTypes.bool,\r\n  githubError: PropTypes.string,\r\n  selectedRepos: PropTypes.arrayOf(PropTypes.string),\r\n  token: PropTypes.string\r\n};\r\n\r\nRepositories.defaultProps = {\r\n  watchedRepos: [],\r\n  loading: false,\r\n  githubError: null,\r\n  selectedRepos: [],\r\n  token: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  watchedRepos: state.watchedRepos.repos,\r\n  loading: state.watchedRepos.loading,\r\n  githubError: state.watchedRepos.githubError,\r\n  selectedRepos: state.settings.selectedRepos,\r\n  token: state.settings.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  requestWatchedRepos: token =>\r\n    dispatch(watchedReposActions.requestWatchedRepos(token)),\r\n  toggleRepoSelection: id => dispatch(settingsActions.toggleRepoSelection(id)),\r\n  selectAllRepos: repoIds => dispatch(settingsActions.selectAllRepos(repoIds)),\r\n  resetSelectedRepos: () => dispatch(settingsActions.resetSelectedRepos()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repositories);\r\n","import _ from \"lodash\";\r\nimport * as actions from \"../actions/dashboard\";\r\n\r\nconst initialState = {\r\n  pullRequests: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nlet pullRequests;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_PULL_REQUESTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_SUCCESS:\r\n      pullRequests = _.chain(action.data.nodes)\r\n        .filter(node => node)\r\n        .map(node => _.map(node.pullRequests.edges, \"node\"))\r\n        .flatten()\r\n        .map(pr => ({\r\n          ...pr,\r\n          repoName: pr.repository.nameWithOwner\r\n        }))\r\n        .value();\r\n\r\n      return {\r\n        ...state,\r\n        pullRequests,\r\n        loading: false,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_PULL_REQUESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        pullRequests: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { queries, get } from \"../githubApi\";\r\n\r\nexport const REQUEST_WATCHED_REPOS = \"REQUEST_WATCHED_REPOS\";\r\nexport const REQUEST_WATCHED_REPOS_LOADING = \"REQUEST_WATCHED_REPOS_LOADING\";\r\nexport const REQUEST_WATCHED_REPOS_SUCCESS = \"REQUEST_WATCHED_REPOS_SUCCESS\";\r\nexport const REQUEST_WATCHED_REPOS_FAILURE = \"REQUEST_WATCHED_REPOS_FAILURE\";\r\n\r\nexport const requestWatchedReposLoading = () => ({\r\n  type: REQUEST_WATCHED_REPOS_LOADING\r\n});\r\n\r\nexport const requestWatchedReposSuccess = data => ({\r\n  type: REQUEST_WATCHED_REPOS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const requestWatchedReposFailure = error => ({\r\n  type: REQUEST_WATCHED_REPOS_FAILURE,\r\n  error\r\n});\r\n\r\nexport const requestWatchedRepos = token => async dispatch => {\r\n  try {\r\n    dispatch(requestWatchedReposLoading());\r\n    let query = queries.watchedRepos();\r\n    const initialResults = await get(query, token);\r\n    let reposArray = initialResults.viewer.watching.edges;\r\n    if (initialResults.viewer.watching.pageInfo.hasNextPage) {\r\n      let paginate = true;\r\n      while (paginate) {\r\n        query = queries.watchedRepos(reposArray[reposArray.length - 1].cursor);\r\n        const paginatedResults = await get(query, token);\r\n        reposArray = [...reposArray, ...paginatedResults.viewer.watching.edges];\r\n        paginate = paginatedResults.viewer.watching.pageInfo.hasNextPage;\r\n      }\r\n    }\r\n    reposArray = reposArray.map(repo => ({\r\n      id: repo.node.id,\r\n      name: repo.node.name,\r\n      url: repo.node.url,\r\n      owner: repo.node.owner,\r\n      createdAt: repo.node.createdAt\r\n    }));\r\n    dispatch(requestWatchedReposSuccess(reposArray));\r\n  } catch (err) {\r\n    dispatch(requestWatchedReposFailure(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link, NavLink, Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Octicon, {\r\n  CloudUpload as CloudUploadIcon,\r\n  Person as PersonIcon,\r\n  Repo as RepoIcon\r\n} from \"@githubprimer/octicons-react\";\r\nimport Account from \"./Account\";\r\nimport Repositories from \"./Repositories\";\r\n\r\nconst Settings = ({ match }) => (\r\n  <>\r\n    <div className=\"App-menu p-3 bg-gray-light border-bottom\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <div className=\"flex-auto\">\r\n          <h1 className=\"h3\">Settings</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            <Octicon icon={CloudUploadIcon} /> Save\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <main className=\"App-main\">\r\n      <div className=\"container-lg py-4 d-flex\">\r\n        <div className=\"col-3 pr-4\">\r\n          <nav className=\"menu\">\r\n            <NavLink\r\n              to={`${match.url}/account`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={PersonIcon} /> Account\r\n            </NavLink>\r\n            <NavLink\r\n              to={`${match.url}/repositories`}\r\n              className=\"menu-item\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              <Octicon icon={RepoIcon} /> Repositories\r\n            </NavLink>\r\n          </nav>\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={() => <Redirect to={`${match.url}/account`} />}\r\n            />\r\n            <Route path={`${match.url}/account`} component={Account} />\r\n            <Route\r\n              path={`${match.url}/repositories`}\r\n              component={Repositories}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <main className=\"App-main\">\r\n    <div className=\"container-lg py-4\">\r\n      <div className=\"blankslate\">\r\n        <h3>Not found</h3>\r\n        <p>The page you are looking for could not be found.</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Settings from \"./Settings\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nimport \"../../node_modules/primer/build/build.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header p-3 bg-gray-dark text-white\">\r\n      <div className=\"container-lg d-flex flex-items-center\">\r\n        <h1 className=\"flex-auto h2\">\r\n          <Link to=\"/\" className=\"text-white\">\r\n            GitObserve\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n    </header>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route path=\"/settings\" component={Settings} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import * as actions from \"../actions/watchedRepos\";\r\n\r\nconst initialState = {\r\n  repos: [],\r\n  loading: false,\r\n  githubError: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.REQUEST_WATCHED_REPOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        githubError: null\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: action.data,\r\n        githubError: null,\r\n        loading: false\r\n      };\r\n    case actions.REQUEST_WATCHED_REPOS_FAILURE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        githubError: action.error,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actions from \"../actions/settings\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  selectedRepos: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value\r\n      };\r\n    case actions.TOGGLE_REPO_SELECTION:\r\n      return state.selectedRepos.includes(action.id)\r\n        ? {\r\n            ...state,\r\n            selectedRepos: state.selectedRepos.filter(\r\n              repoId => repoId !== action.id\r\n            )\r\n          }\r\n        : {\r\n            ...state,\r\n            selectedRepos: [...state.selectedRepos, action.id]\r\n          };\r\n    case actions.SELECT_ALL_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: [...action.repoIds]\r\n      };\r\n    case actions.RESET_SELECTED_REPOS:\r\n      return {\r\n        ...state,\r\n        selectedRepos: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport dashboard from \"./dashboard\";\r\nimport watchedRepos from \"./watchedRepos\";\r\nimport settings from \"./settings\";\r\n\r\nconst rootReducer = combineReducers({\r\n  dashboard,\r\n  watchedRepos,\r\n  settings\r\n});\r\n\r\nexport default rootReducer;\r\n","import { throttle } from \"lodash\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Root from \"./components/Root\";\r\nimport configureStore from \"./configureStore\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      settings: store.getState().settings,\r\n      dashboard: store.getState().dashboard,\r\n      watchedRepos: store.getState().watchedRepos\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nrender(<Root store={store} />, document.getElementById(\"root\"));\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState } from \"./localStorage\";\r\n\r\nconst configureStore = () => {\r\n  const persistedState = loadState();\r\n  const middlewares = [thunk];\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    middlewares.push(logger);\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(...middlewares)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","const LS_STATE_KEY = \"go_state\";\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(LS_STATE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(LS_STATE_KEY, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n"],"sourceRoot":""}